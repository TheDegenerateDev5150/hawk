// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/cmd/NAME/main.go.tpl (429B)
// NAME-service/handlers/handlers.go.tpl (1.312kB)
// NAME-service/handlers/handlers.methods.go.tpl (785B)
// NAME-service/handlers/hooks.go.tpl (402B)
// NAME-service/handlers/middlewares.go.tpl (2.238kB)
// NAME-service/svc/client/grpc/client.go.tpl (3.191kB)
// NAME-service/svc/client/http/client.go.tpl (101B)
// NAME-service/svc/config.go.tpl (305B)
// NAME-service/svc/endpoints.go.tpl (9.653kB)
// NAME-service/svc/server/run.go.tpl (3.72kB)
// NAME-service/svc/transport_grpc.go.tpl (2.967kB)
// NAME-service/svc/transport_http.go.tpl (101B)
// NAME-service/svc/transport_ws.go.tpl (5.414kB)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x3f\x8f\xe2\x30\x14\xc4\xeb\xbc\x4f\xf1\x94\x2a\x14\x67\xf7\x48\x54\xe4\x0a\x9a\x03\x01\xb7\xbd\x49\xc6\x8e\x45\x70\x90\xed\x04\xad\x22\x7f\xf7\x95\x03\xbb\xa2\xd8\xca\x7f\x7e\xf3\x34\xf3\x46\x4a\xde\x0e\x2d\xd8\xc0\xc1\xab\x88\x96\x2f\x9f\xdc\xa9\xc7\x55\x70\xbd\xe7\x7f\xfb\x33\xff\xad\x77\x67\x41\x52\xf2\x11\x7e\x74\xce\x3a\xb3\x70\x7e\xd8\xbe\xe7\x61\x82\x7f\x78\x1b\xc1\xb1\xb3\x81\xb5\xed\xb1\x68\x3f\xe0\x83\x1d\xdc\x9a\xe7\x59\xbc\xee\x29\xbd\x01\xae\x55\xc4\x3b\xcd\xef\x94\x88\xee\xaa\xb9\x2a\x03\xbe\x29\xeb\x88\xec\xed\x3e\xf8\xc8\x15\x15\xa5\xee\x95\x29\x89\x0a\x29\xf9\x9c\xad\x4e\xf0\x93\x6d\x40\x45\x39\xcf\x62\xb7\xe8\x0e\x2a\x76\xfc\x27\x25\x96\x61\x6a\x64\x80\x9f\xe0\xcb\xdf\x05\x9d\x72\x6d\x0f\x1f\x4a\x5a\x11\xe9\xd1\x35\x8b\x61\xb5\xe2\x79\x71\xf8\x7f\x6f\x55\x04\xab\xb6\xf5\x08\x01\x81\xad\xe6\xd8\x21\x37\x33\x81\x2f\x80\xfb\xd9\x3c\xc2\xe5\xca\x72\xbc\x40\x45\x3e\xc4\x41\xf9\x80\x6a\x45\x54\x34\xda\xf0\x7a\xc3\xcf\x28\xa2\x86\x56\x63\x1f\xb7\x83\xd3\xd6\x3c\xe1\x86\xbf\x93\x88\x13\x5e\xa4\x6a\xb4\xc9\xc3\xaf\xa9\xe3\xe8\x9e\x3f\x89\xbe\x02\x00\x00\xff\xff\xa6\x55\x21\xaa\xad\x01\x00\x00")

func cmdNameMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGoTpl,
		"cmd/NAME/main.go.tpl",
	)
}

func cmdNameMainGoTpl() (*asset, error) {
	bytes, err := cmdNameMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.go.tpl", size: 429, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x19, 0x81, 0xb3, 0x16, 0x98, 0x2a, 0x16, 0x86, 0xb1, 0xd0, 0x5, 0x92, 0x9e, 0x76, 0x94, 0x12, 0x0, 0x49, 0x46, 0xdc, 0x33, 0x10, 0x56, 0x65, 0xd1, 0x10, 0x32, 0xa8, 0x45, 0xea, 0xaa, 0x93}}
	return a, nil
}

var _handlersHandlersGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\x41\x8f\xd3\x3c\x10\x86\xcf\x99\x5f\x31\x8a\xaa\x55\xb2\xea\xba\xf7\x4f\xfa\x2e\x20\x16\x81\x96\xb2\xa2\x20\x8e\xc8\x9b\x4c\x13\x8b\xc4\x0e\xf6\xa4\xdd\x95\xe5\xff\x8e\xdc\x98\x92\x76\x55\xb8\xac\x84\x2f\x89\xc7\xf3\x8e\xfd\xbc\x63\x79\x90\xd5\x77\xd9\x10\xb6\x52\xd7\x1d\x59\x07\xa0\xfa\xc1\x58\xc6\x02\xb2\xbc\x32\x9a\xe9\x91\x73\xc8\xf2\x46\x71\x3b\x3e\x88\xca\xf4\x2b\xa7\xec\x38\x38\xd2\xab\xce\x34\x76\x74\x39\x40\x36\x3c\x60\xee\xbd\xb8\x7f\xf5\xee\x20\xbe\x97\xdc\xe2\x4d\x08\x39\x94\x00\x3b\x69\xf1\xce\x34\x0d\x59\xbc\x9e\x14\xe2\x8d\x66\xfb\x04\xb0\x5a\xe1\x9a\xf6\x1b\xb2\x3b\x55\x11\x5a\xe2\xd1\x6a\x87\x12\xb5\x54\x3b\x5a\xa2\x63\xc9\xd4\x91\x73\xa8\xfa\xa1\xa3\x9e\x34\x4b\x56\x46\xa3\xd9\x62\x12\x09\xd8\x8e\xba\x9a\x55\x29\x4a\x1c\x1e\x84\xf7\x6f\xcd\x5a\xf6\x84\xe2\x57\x5e\x9c\x85\x10\x67\x64\xd1\x43\xd6\x99\x06\xff\xfb\x1f\xd3\x79\xd6\xb4\x2f\xca\x43\x50\x6c\x88\x6f\x8d\xed\x25\x33\xd9\xe2\x2a\xad\xbf\xdf\x7c\x5c\x1f\xa3\x3e\x94\x90\x25\xa0\x43\x05\xf1\x55\x71\x7b\xab\xa8\xab\x8b\xdc\x4d\xfb\xe5\xcb\xe8\xc7\x67\x73\x67\xf6\x64\xcf\x4f\x91\x97\x00\xd9\x44\x8b\x17\x93\xd2\xcc\x07\x08\x00\xfc\x34\xd0\x5f\x53\xd1\xb1\x1d\x2b\xf6\xb1\x1b\xe2\x8b\x3e\x7a\x46\xf5\x9f\xed\x88\x1b\x78\xbf\x57\xdc\xe2\x82\x29\xba\x22\x30\x04\xc8\xbc\xb7\x52\x37\x84\x0b\x15\x63\x0b\xa6\xa3\xfa\x03\x71\x6b\x6a\x17\x93\x32\xef\x51\x6d\x71\xa1\xc4\x27\xfa\x31\x92\xe3\x0d\x5b\x92\x7d\x2c\x80\xb3\x71\xe8\x52\xe1\x66\x0c\xf3\x7a\x27\x18\x25\x7a\x9f\x22\x85\x9b\x8a\xcd\x3b\xfa\x5c\xf7\xed\x37\xde\x1c\xab\x44\xb2\xd6\xc4\x66\xe3\xd9\x48\xd6\x6b\xd5\x9d\x2c\x25\x1a\xea\x1c\x1d\x91\xdc\x60\xb4\xa3\x17\x65\x52\x1a\xaf\x4f\xae\x68\x32\x2e\x84\x78\xe3\xff\x11\xef\xcb\xa0\x55\xfc\x88\xe9\xc9\x10\xaf\xa7\xef\x12\x2f\xf3\x96\x58\x9c\xaf\x4c\x7e\x47\x2b\x0e\x30\xe5\x73\x98\xf8\x9a\x58\x72\x03\x5e\x50\x5e\xa2\xbf\x8a\xa2\xe5\x45\x13\x74\x9d\xee\x3c\xe9\x3a\x04\xf0\xfe\x06\xa7\xbf\x9f\x01\x00\x00\xff\xff\xc5\x90\xf0\xc5\x20\x05\x00\x00")

func handlersHandlersGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGoTpl,
		"handlers/handlers.go.tpl",
	)
}

func handlersHandlersGoTpl() (*asset, error) {
	bytes, err := handlersHandlersGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.go.tpl", size: 1312, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x0, 0xb5, 0xc3, 0x96, 0xb1, 0xf7, 0x54, 0xe5, 0x4d, 0x90, 0x66, 0x21, 0xf, 0x70, 0x79, 0x62, 0xd7, 0xc9, 0x6d, 0x4e, 0xd1, 0xd7, 0xa2, 0x8d, 0x4a, 0xa2, 0xee, 0x13, 0x88, 0x32, 0x75, 0xdb}}
	return a, nil
}

var _handlersHandlersMethodsGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xc1\x4e\xf3\x30\x10\x84\xcf\xcd\x53\xcc\x21\xfa\x95\xfc\x0a\x7e\x00\x24\x4e\x1c\xb8\x00\x07\xca\x1d\x85\x64\x4b\x2d\xb5\x76\x58\x3b\x6d\xa5\xd5\xbe\x3b\x4a\x9d\x06\x4a\x95\x5b\x25\xf6\x62\x7b\x47\xb3\xf6\x37\x72\x26\x82\xbd\x8d\x6b\xe4\x91\x70\x7b\x07\xa3\x9a\x01\x80\x08\xd7\xee\x83\x90\xdb\x63\xf7\x89\xe2\xda\xb7\x41\x35\x5b\x2c\x44\x60\x57\xc8\xad\x79\xa1\xcf\x9e\x42\x5c\x46\xa6\x7a\x8b\xd1\x78\xaa\x55\xef\x1a\x14\x01\x22\xaf\xfe\xd1\xef\x89\x87\x1b\xcc\x92\x78\x67\x1b\x7a\xae\xb7\xa4\x3a\x1e\x4a\x88\x98\xd4\x29\x42\x9a\xd5\xbd\x1b\x91\x07\x3f\x34\x2f\x6d\x6f\x93\x64\xbe\xe7\x10\x97\x20\x66\xcf\x90\xb3\x67\x0c\xc5\x14\x7b\x76\x70\x76\x73\x26\x8d\x2c\xb4\x09\x34\x01\x85\xce\xbb\x40\xd7\x24\xb2\x0e\xff\x7f\xe2\x9c\x52\x53\xad\xf0\x57\xb4\x57\x01\x6b\xe2\x01\x8d\x77\x91\x0e\xd1\xdc\xa7\xb5\xc2\x3c\x6d\x89\xe2\xb7\x92\xc2\x1e\x82\x38\xb2\x94\x97\x2c\xbb\x9a\xc1\x14\x3a\xcc\x38\xe7\xe0\xff\x0d\xa6\x6a\x36\x03\xd7\x62\xfa\xe6\xe4\x5a\xd5\x4c\xe4\x06\x69\xf7\x15\x00\x00\xff\xff\x66\x64\x40\x3b\x11\x03\x00\x00")

func handlersHandlersMethodsGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersMethodsGoTpl,
		"handlers/handlers.methods.go.tpl",
	)
}

func handlersHandlersMethodsGoTpl() (*asset, error) {
	bytes, err := handlersHandlersMethodsGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.methods.go.tpl", size: 785, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x2c, 0x57, 0x30, 0xb3, 0xdb, 0xb5, 0x5a, 0x84, 0x38, 0x24, 0x7c, 0x45, 0x1c, 0x2, 0x1e, 0x1d, 0xec, 0x1, 0xa6, 0x6a, 0xba, 0xc4, 0x6d, 0x9c, 0x2, 0x42, 0xf3, 0x4e, 0x1, 0xb6, 0x47}}
	return a, nil
}

var _handlersHooksGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xd1\xaa\xe2\x30\x10\x86\xaf\x33\x4f\x31\x14\x16\x5a\xb0\x2d\x7b\xbb\xb8\x57\x22\xbb\xbd\x38\x22\x47\x5f\x60\x88\x93\xa6\xd8\x26\x32\x99\x2a\x22\x7d\xf7\x43\xad\x07\x8e\x37\x21\x5f\x86\x3f\xff\x97\x5c\xc8\x9e\xa9\x65\xf4\x14\x4e\x3d\x4b\x02\xe8\x86\x4b\x14\xc5\x1c\x4c\xe6\x06\xcd\xc0\x64\x8f\x47\xd5\x3c\x0f\xf7\xa4\x1e\xcb\x69\xc2\x3a\x5d\xed\x3c\x89\x69\x59\xeb\xd4\xb5\x81\xfa\x19\xd2\x3d\x59\xea\xfb\x0c\x0a\x00\x37\x06\x8b\x07\xd6\x4d\x0c\xae\x6b\x73\xeb\x5a\x4c\x57\x5b\x2d\x58\xfc\xd8\xe3\x03\x8c\xb0\x8e\x12\xd0\xba\x16\xa6\x57\xb4\x09\xca\x22\xe3\x45\xff\x2f\x76\x39\x8b\x6c\x3c\x05\xb4\x9e\xc2\xba\x44\x16\x89\x52\xcc\x61\x8b\x7f\xfe\xe2\x40\x67\xce\xe7\x11\xc6\x54\x1d\x9e\x46\x2b\xfc\x5d\x80\x59\xec\xaa\x5d\xd4\xce\xdd\x73\xbb\xc2\x97\x64\x75\x68\xfe\x35\xbb\xe3\x1b\x1f\xb7\x9f\x1f\x05\x18\x65\x19\xba\x40\xca\xdb\xb9\x63\xbe\xdd\x0d\x5a\x3d\xc1\xe5\xd9\xaf\x94\xad\x70\x5d\xda\x02\xc0\xd4\x35\xee\x7b\xb2\x8c\x37\x4f\xca\x57\x16\x4c\x7e\xd4\x53\xbc\x85\xe5\x53\xbb\xd0\xe2\x3d\x8e\x78\xa3\xa0\xe8\x59\x18\xc0\x7c\xbf\x63\x5d\xe2\x7b\x11\x4c\xf0\x15\x00\x00\xff\xff\xf0\x19\x98\x3b\x92\x01\x00\x00")

func handlersHooksGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGoTpl,
		"handlers/hooks.go.tpl",
	)
}

func handlersHooksGoTpl() (*asset, error) {
	bytes, err := handlersHooksGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.go.tpl", size: 402, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x31, 0xa9, 0x1c, 0x49, 0xec, 0xf0, 0xf8, 0xcb, 0xac, 0xec, 0x63, 0x6a, 0x23, 0xb0, 0xab, 0x33, 0x9f, 0x6b, 0xe7, 0xda, 0xf3, 0xec, 0xc1, 0xf1, 0x32, 0xf6, 0x58, 0xc7, 0x12, 0x38, 0x33}}
	return a, nil
}

var _handlersMiddlewaresGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\xd1\x6f\xdc\xb6\x0f\x7e\xb6\xfe\x0a\xfe\xfc\xf2\x3b\x0f\x17\xf9\xbd\x43\x1e\xb6\xa2\x5b\x0a\x24\x59\xd0\xa4\xe8\x80\x61\x58\x75\x36\xcf\x26\x2a\x4b\x9e\x44\xdf\xe5\x10\xdc\xff\x3e\x50\xb6\x2f\xbe\x0e\x49\xbb\x27\x5b\x22\xf9\xf1\xfb\x48\x4a\xea\x4d\xf5\xc5\x34\x08\xad\x71\xb5\xc5\x10\x95\xa2\xae\xf7\x81\x61\xa5\xb2\xfc\xe9\x49\xbf\x4f\xab\x3b\xc3\x2d\x5c\x1c\x8f\x50\xc6\x5d\x95\xab\xac\xdf\x80\x18\xef\x7e\x3e\x37\xe7\x4a\x65\x79\x43\xdc\x0e\x1b\x5d\xf9\xae\x6c\xbc\x6f\x2c\x96\xc3\x40\x75\x7e\x6e\x71\x44\xd4\x78\x5f\xb6\x66\xff\xa5\xec\xa8\xae\x2d\xee\x4d\xc0\x5c\x65\xd6\x37\xb0\xf4\x8c\x14\x86\x3e\xa2\x2b\xad\x6f\xc2\x10\x05\xc7\x21\x97\x2d\x73\x9f\xab\x42\xa9\xb2\x84\x4f\xc1\xf4\xef\x5c\xdd\x7b\x72\x1c\xc1\x54\x15\xf6\x1c\x81\x5b\x84\x88\x61\x47\x15\xfe\x3f\x02\x3a\xa6\x80\x50\x79\x6b\xb1\x62\xf2\x0e\xfc\x16\x70\x0e\x5a\x43\xf4\xc0\xad\x61\x30\x02\x18\x91\xc5\xfc\xcc\x2b\x42\x65\x1c\x6c\x10\xf6\xc1\xf4\x3d\xd6\x60\x82\x1f\x5c\x0d\xb8\xc3\x70\x58\xf8\xc1\x0a\x75\xa3\xd7\x89\x43\x8c\x02\x65\x7d\xd3\x90\x6b\xc0\xb8\x1a\xc8\x45\x0e\x43\x87\x8e\x8d\x30\x28\xd6\x69\xd7\x73\x8b\x21\x9e\x90\x23\x26\x82\x3b\xb4\x87\x39\x4b\xf4\x1d\x0a\x16\x3e\x6b\x74\x35\x38\xcf\x73\xec\x94\xf5\xd9\x1e\xf0\xef\x81\x42\xca\x3b\x70\x2b\xda\x2b\xc3\x42\x3b\xf1\x2a\xb4\xa0\xdd\x7a\xc6\x51\xb3\x54\x6a\x4b\xce\xd8\xa5\x92\x99\xcf\x9e\xac\x15\xe5\xe2\xe4\x07\xc6\xd0\xf9\xc8\x0b\x47\x81\x5a\x91\x46\x0d\xa6\xef\x2d\x61\x0d\x5b\x0a\x91\x0b\xb5\x1d\x5c\x75\xde\x9a\x15\x39\x88\xbb\x4a\x9f\x36\x8a\xf3\x25\x3c\x29\x95\x95\x25\xdc\x99\x18\xc1\x2c\xc9\x1c\xfc\x00\x7b\xe3\xf8\x94\x83\xfd\x54\xfb\x59\xb3\x4e\x91\xbe\x97\xc2\x1a\x6b\x0f\xd0\x0b\x08\xb9\x45\x51\x36\x07\x70\xa6\x9b\x34\x9f\x10\xd9\x8b\x3a\x7c\xac\xec\x50\x63\x9d\x50\xa4\x9a\xe9\x87\x9c\x16\x01\x3f\x59\xfb\xee\x51\x86\x6a\x25\xd5\xbc\x39\xd1\x5a\x43\x7e\xcf\x86\x87\x98\xaf\x21\xbf\x23\xd7\xe4\xc5\x42\x00\x39\x30\x49\xdf\xb5\xd9\xa0\xc5\xfa\xe6\xbf\xcb\x79\x68\x31\xe2\xd9\x18\x36\xc8\x49\x99\xc4\xb4\xb8\x10\x97\x94\x99\x34\xf5\x14\xc6\x16\x80\x09\x4d\x9a\x36\xd8\xb7\xe8\xe6\x5c\x33\x32\x9d\x66\x7a\x88\x23\x83\x7d\x20\x46\x68\xd0\x61\xa0\x0a\x3a\x64\xf9\x34\x46\x46\x4c\x26\x69\x49\x23\x95\xb0\x32\x2e\x61\x05\x4c\x17\xc6\x92\xcf\x48\x67\xeb\x03\x6c\x03\xe2\x98\xf2\xdb\xa7\xbf\x3c\xa9\x6f\x7c\x0a\x36\x0e\xf0\xd1\x74\xbd\xc5\xaf\xfb\x31\xd5\x74\x6a\x0b\x86\xe0\xc3\x5b\x3f\x38\xc6\xb0\x8a\x6c\x38\xd6\xd3\xaa\x78\xb1\x47\x57\x7e\x2f\xa2\xa5\x2a\x87\xf3\x61\x93\x5d\x88\xe4\x1a\x8b\x5f\xf5\x83\x9c\x7e\x37\xf2\x99\x67\x16\x2e\xe1\x7c\x26\x56\xff\xf6\x29\x94\x02\x00\x28\x4b\xb8\xf7\xdd\x79\x3b\xd9\x03\x75\x7d\xf0\xbb\xf1\x7c\xcd\x97\x85\xdf\xa6\x13\x8c\x91\xe3\x1c\xfa\x31\x22\x7c\x7e\x0e\xd5\xbf\x22\x5f\xfb\xa6\xc1\xf0\x79\x9c\x60\x87\x5b\x62\xd8\x06\xdf\x01\xb1\xca\x5e\xaa\xd4\x02\x61\xa6\x77\x3d\x26\x5d\x8d\x70\x6b\x70\x64\x8b\xe2\xbb\x10\xc6\x88\x07\xff\xd6\x3b\xc6\x47\x9e\x10\xce\x83\x3f\x11\xb7\x57\xcc\xfd\x6f\xe9\x64\x7e\x13\xe3\xea\xe1\xe1\xee\xc4\x44\x6e\x90\x55\x80\x1f\xe4\xae\xd7\x1f\xc6\x82\x14\x52\x24\xfd\x0b\xa1\xad\xe5\xbe\xc8\xb2\xed\xf8\xfb\xe6\x72\x61\x90\xfd\x2c\xef\x90\x5b\x5f\xe7\x6f\x20\xe8\x9b\xf4\xbb\x4e\xdb\x43\xb0\xf9\x1b\xa9\x6a\xd0\x1f\x3f\x5c\xeb\x7b\x96\xe9\x5e\x15\x62\x3c\x2a\x95\x49\x9f\xa7\x06\xa6\x19\x9c\x1a\x71\xb1\x31\xe9\x98\x04\x53\x91\x6b\x54\x96\xd1\x16\xa8\x96\xb4\x41\x5f\xa1\xa9\x31\x48\x4b\x56\xf9\xef\x17\x13\xd1\x8b\xf7\x75\x5e\xfc\x28\x3e\xff\xbb\x84\x3c\x4f\x5c\x27\xb2\x7f\xe4\x13\xe8\x5f\x54\xe7\x7f\xc2\x25\x50\x2d\xc9\x01\x6d\xc4\x57\xfd\xe4\x21\xd5\xb7\xb8\x9f\x39\xbf\x40\x39\x62\x8c\xe4\xdd\xf7\x53\xbe\x9f\x02\x5e\xa3\x3c\x81\x9e\x53\x96\xe4\x01\x79\x08\x0e\x46\x3f\x95\x1d\x0b\x39\x60\xd3\x26\x39\x75\x54\xcf\x2f\xc1\xfd\xf8\x1c\xcb\x3b\xd0\x6f\xf4\xd3\x93\x9e\x36\xf4\xad\xe9\xf0\x78\x94\x15\x86\xe2\x15\x9b\x50\x5a\x42\xff\x13\x00\x00\xff\xff\x82\x26\x31\x7b\xbe\x08\x00\x00")

func handlersMiddlewaresGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersMiddlewaresGoTpl,
		"handlers/middlewares.go.tpl",
	)
}

func handlersMiddlewaresGoTpl() (*asset, error) {
	bytes, err := handlersMiddlewaresGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/middlewares.go.tpl", size: 2238, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x81, 0xdf, 0x14, 0xea, 0xb, 0xd3, 0x61, 0xc5, 0x68, 0x7a, 0x91, 0x55, 0xdd, 0xc7, 0xd5, 0x26, 0xc4, 0xd7, 0xf6, 0x7f, 0xc, 0x3, 0x12, 0x14, 0x31, 0x64, 0xa4, 0x6f, 0xe6, 0x79, 0x79, 0xbf}}
	return a, nil
}

var _svcClientGrpcClientGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4f\x6f\xdb\x3a\x12\x3f\x8b\x9f\x62\xd6\x08\x16\x52\xa0\xd0\xf7\x2e\x7c\xa9\xd3\x2d\xba\xd8\xa6\x46\x1a\xf4\x1d\x8a\xa2\x60\xa8\x91\x4c\x58\x26\x55\x92\xb6\x13\x08\xfa\xee\x0f\x43\x52\x8e\x9c\x3a\x7e\x3d\x18\x16\x39\xc3\xf9\xf3\xfb\xcd\x70\x38\x9f\xc3\xd2\x54\x08\x0d\x6a\xb4\xc2\x63\x05\x8f\xcf\xb0\x16\x87\x0d\x87\xdb\x2f\x70\xf7\xe5\x01\x3e\xdc\x7e\x7a\xe0\x6c\x3e\x87\x7b\xb4\x3b\xad\x95\x6e\x82\x1c\x0e\xaa\x6d\xc1\xec\xd1\x1e\xac\xf2\x08\x7e\xad\x1c\xd4\xaa\xc5\xa0\xfb\x0d\xad\x53\x46\xbf\x83\xbe\xe7\xe9\x7b\x18\x26\x02\xb8\x15\x1e\xa7\x52\x5a\x0f\x03\x23\x95\x95\x90\x1b\xd1\x20\x34\xb6\x93\xd0\x59\xb3\x57\x15\x3a\x10\xd0\xdc\xaf\x96\x20\x5b\x85\xda\x43\x6d\x2c\xf8\x35\x92\x81\xaf\x68\xf7\x4a\x22\xbf\x13\x5b\x1c\x06\x70\x69\xc9\xba\x89\x19\xc6\xd4\xb6\x33\xd6\x43\xce\xb2\x99\x34\xda\xe3\x93\x9f\xb1\x6c\xd6\x18\xd3\xb4\xc8\x1b\xd3\x0a\xdd\x70\x63\x9b\x39\x69\xbf\x2d\x99\x6f\xd1\x8b\x4a\x78\x11\x54\x94\x5f\xef\x1e\xb9\x34\xdb\x79\xb7\x69\xe6\x68\xad\xb1\x6e\xc6\x4e\x25\x8d\xb9\xd9\x28\x3f\xa7\x1f\xea\xaa\x33\x4a\x93\x63\xb2\xe5\xad\xd0\x2e\x04\xf5\x86\xfe\x51\x21\x05\xc5\xb2\xf9\x1c\x1e\x08\xe6\x94\x32\xcb\x66\x7d\xcf\x3f\x85\xcc\x56\xc2\xaf\xe1\x66\x18\x60\xee\xf6\x94\x40\xf7\x08\x24\x5c\xbd\x3f\x15\xcf\x58\x11\x30\xbe\xc3\x03\x58\xf4\x3b\xab\x1d\x08\x3d\x82\x06\x8f\x42\x6e\x62\x09\x9c\xc2\x2d\x8d\xd6\x28\xbd\x32\x9a\xc3\x27\x0f\xca\x11\xf8\x64\xc7\xa2\xeb\x8c\x76\xea\x51\xb5\xca\x3f\x83\xa9\x03\x2b\x52\xb4\x2d\x5a\xf0\x06\x2a\x25\xda\x12\x84\xae\xa0\x15\x1e\x2d\xc8\xd6\x38\x2c\xa3\xd2\x8b\x4d\x56\xef\xb4\xa4\x98\x72\xda\x84\x6b\xca\x97\x2f\x83\xeb\xa5\xd1\xba\x04\xd3\x91\x9e\x03\xce\xd3\xf6\x97\xb0\x51\x40\xde\x3d\xf2\xdf\x6a\x80\x56\x68\x4b\x08\x8c\x14\xd0\xb3\x6c\x2f\x2c\x48\x99\xb2\x59\x1a\x5d\xab\x86\xb1\x8c\x8a\xe8\x67\x09\x35\xbc\x5b\x80\x15\xba\xc1\xa3\x9f\x9e\x65\x19\x5a\x4b\x82\x3a\xff\xb7\x94\x05\xcb\x32\x55\x93\x41\xf8\xd7\x02\xb4\x6a\x83\x46\x16\x11\xa4\x75\x72\xe6\xf8\x5f\x56\x74\x39\x5a\x5b\xc2\x4c\x0a\xad\x8d\x07\xd1\x75\xed\x73\xb2\x3c\x23\x43\x03\xcb\x06\xc6\x32\x39\x49\xc4\x91\xa7\xef\x3f\x4e\xca\xe2\x24\x53\x72\x77\x4e\xfa\x1e\x6b\x63\x31\xa7\x60\x52\x59\x7f\x13\xed\x0e\xdd\x83\xf9\x78\xbf\x5a\x7e\x4e\xd5\x9a\x4b\xc9\xd7\x28\x2a\xb4\xae\x28\x4a\x72\x9f\xf5\xfd\x0d\x1c\x94\x5f\xc3\x95\x47\x72\xce\x87\x81\x65\x93\xdd\x6e\xd3\x10\x98\x24\xba\xf2\xc8\x53\x4f\x46\x7c\xc9\x1b\x69\x46\xcc\xae\xd4\xa8\x34\xb2\xf0\x19\xfd\xda\x54\x2e\x2a\x06\xec\xfb\xfe\xc1\xfc\xdf\x1c\xd0\xc2\x95\x4a\x24\x7d\x48\xdd\x00\x63\x5b\xf0\x71\x27\x9c\x0a\xf8\x92\x9b\xb7\x0f\x2e\xe0\x14\x91\x3b\x3c\x44\x50\xf2\x78\x96\x10\xd1\x65\xfa\x9e\xf5\xfd\x98\xd3\x30\xf0\xbe\x9f\xc6\x1b\x37\x67\x53\x55\xf5\x7a\xf3\x83\x96\xa6\x42\x02\x75\x22\xbd\xc7\x5f\x3b\x74\x7e\xd4\xb9\xc5\xb3\x3a\xa1\x43\x70\x54\x0a\x05\xfb\xd1\x04\x70\xaf\x14\x1f\xc5\xc3\xd0\x0f\xa3\xca\x49\x65\x70\xce\xd3\x7e\x71\x44\x28\x2f\xc2\x4e\x22\x02\x75\x95\xc8\x4b\x5f\xe3\x07\x03\x80\x23\xbc\xa1\xc4\xdc\x5e\x12\x4c\xa3\x1d\x47\x86\xfa\x7e\xca\xe3\x6b\x12\xe9\xd2\xa0\x66\x18\x4f\xf0\x49\x6a\x13\x26\x2e\xf0\x34\x89\x67\x6c\x98\xa3\xb5\x92\x7a\x87\xc5\x6b\x9f\x70\x83\x48\x20\x44\x24\xd9\xe5\xd0\xe2\x40\xb9\x08\x3a\xdd\x54\x02\x4e\x2f\x52\x1e\x4f\x8c\x2a\xff\xa5\xab\xc7\xaf\x45\xb8\xe4\xf6\x68\xbd\x03\x41\x76\xc3\xf5\x77\x26\x2d\xb0\x48\xfd\xec\x0d\x08\xd8\x39\xb4\x37\x95\xd9\x0a\xa5\xdf\x50\x8d\x3e\x38\xac\xac\xda\x0a\xab\xda\x67\x3a\x53\xef\x5a\x50\x1a\x44\xba\x8f\xd2\xf5\x77\x31\x91\xfc\x27\xa4\xfe\xe6\xcb\xf8\x5f\x86\xea\xbf\x0f\xc1\x28\xed\xd1\xd6\x42\x62\x3f\x14\x90\x4f\x56\xd3\x3b\x30\xc6\xfd\x6e\xf1\x72\x8e\xe7\xd7\x6f\x56\x63\x71\x24\x2b\x9c\x1b\x89\x3a\x52\xf9\x8a\xb0\xd8\x1e\x7f\x44\xd8\xa5\x4e\x3a\xcb\x57\x3c\x90\x34\xde\xa2\xeb\x9f\xa9\x88\x0e\x02\x6f\x17\xb8\x0d\x5a\x7f\xc4\xd7\xa5\x3c\xce\xd1\x35\x46\xf0\x87\x64\xfd\x0a\x53\x29\xc5\x73\x86\xa8\x20\x38\xe5\xe9\xd7\x6f\x2c\x31\xff\xdc\xe1\xc9\xd8\x03\xe7\xed\x4e\x7a\xf2\x91\x26\x02\x7c\xff\xe1\xbc\x55\xba\x49\x7d\x38\x1d\x3b\x91\x0f\x4a\x37\xac\x02\xee\x5b\x53\xa9\x5a\xa1\x8b\x43\xfc\xf8\x3e\xa0\x91\x1a\xbc\x9d\x9c\xa7\xa3\xf9\xf5\x34\x80\x22\x66\xc9\x22\x88\x4b\xff\x34\x0e\xac\xaf\xa8\xab\x7c\x83\xcf\x61\xca\xc7\x88\x8a\x53\x63\xfd\x31\xd7\x60\xd6\xc0\x39\xc3\x61\x32\x9b\x71\xdc\xc1\x02\xc8\x24\x9b\xce\x6a\x9a\x7f\x43\xf2\x7f\x69\x68\x86\x58\x46\x70\x0a\x38\x37\x7e\xa7\x45\xf9\x2a\x3a\xe9\x9f\x7e\xaf\x81\x6d\x05\xd7\xe3\x13\x92\x7f\xbe\x2d\x5e\x6b\x84\xe0\x69\x60\x76\x42\x4d\x99\xc9\xc6\xb7\xca\xe6\xe5\xad\x12\xc2\x0b\x63\x52\xd5\xb0\x2f\xc1\x04\x99\xf4\x4f\x3c\x64\x93\x6f\x0a\x9e\xa7\xd8\xff\x43\xc2\x38\x51\xa3\xe1\x05\xbd\x4a\x08\xef\xb0\x2c\x61\x53\xc2\x3e\xcc\x94\x21\xbc\x4f\xe2\x6b\x27\xaa\x4e\xdf\x3b\xd7\xdb\x0a\x16\x70\x4c\xe0\x7f\x46\xe9\xfc\x7a\x5b\x95\x2f\x5b\x2b\x3a\x13\xad\x72\xce\x8b\x62\x34\x97\x90\x91\xfe\x29\xa2\xff\x77\x00\x00\x00\xff\xff\x8b\x8c\x74\x6f\x77\x0c\x00\x00")

func svcClientGrpcClientGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGoTpl,
		"svc/client/grpc/client.go.tpl",
	)
}

func svcClientGrpcClientGoTpl() (*asset, error) {
	bytes, err := svcClientGrpcClientGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.go.tpl", size: 3191, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x9c, 0x1e, 0xf9, 0xb2, 0x33, 0x92, 0xf4, 0x36, 0x92, 0x5e, 0xbc, 0x90, 0xf6, 0xad, 0x67, 0x85, 0xc4, 0x65, 0xd0, 0x49, 0x51, 0x6d, 0x79, 0xcc, 0xd1, 0xa4, 0x63, 0xb, 0xf3, 0x0, 0x2e}}
	return a, nil
}

var _svcClientHttpClientGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\xbd\xa7\xf0\xdc\xc1\x3e\x04\x4b\x47\x24\x72\x81\x28\x7c\x5a\x84\x49\x22\x63\x89\xc1\xf2\xdd\x91\x50\xf7\xf7\x22\x64\xa5\x1b\x40\x47\xfd\xbe\x64\x47\x87\x55\x1f\x26\x87\xfb\x14\xc7\x7b\x6a\x75\x7c\xb8\xe9\x13\xdd\x79\x1f\xf4\x18\x46\x6d\xdc\x41\xab\x64\x2e\x11\xad\xaa\x12\x6f\xa5\x5c\x37\xe8\x84\xf1\xe5\x4f\xcb\x59\x89\x33\x97\x5f\x00\x00\x00\xff\xff\x39\x4e\x2a\xed\x65\x00\x00\x00")

func svcClientHttpClientGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGoTpl,
		"svc/client/http/client.go.tpl",
	)
}

func svcClientHttpClientGoTpl() (*asset, error) {
	bytes, err := svcClientHttpClientGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.go.tpl", size: 101, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x66, 0xd0, 0xaa, 0x0, 0x46, 0x7, 0x64, 0xd2, 0x77, 0xb, 0xea, 0x1, 0x50, 0x47, 0x83, 0x41, 0xe1, 0xc3, 0xab, 0x25, 0x16, 0xe, 0x0, 0x6a, 0xbe, 0x3c, 0x5d, 0xbc, 0x12, 0x23, 0xfc, 0x19}}
	return a, nil
}

var _svcConfigGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xc1\x4a\x43\x41\x0c\x45\xd7\x2f\x5f\x11\xba\xd2\x85\x9d\x6f\x90\xaa\x75\x59\x4a\x7f\x60\x3a\x93\x37\x2f\xd4\x66\xc6\x24\x53\x10\xf1\xdf\x65\x90\xb7\x52\x30\x90\x45\xc8\xb9\xf7\x72\x5b\x4c\x97\x58\x08\xed\x96\x00\xf8\xda\xaa\x3a\xde\xc1\xb4\x29\xec\x4b\x3f\x6f\x53\xbd\x86\x52\x1f\x2e\xec\x61\xac\x6b\x14\x1b\x4c\x58\xdc\xdb\x06\xee\x01\x42\xc0\x5d\x95\x99\x0b\xa6\x2a\x1e\x59\x0c\x7d\x21\x54\x7a\xef\xac\x94\x71\x66\x7a\xcb\x86\x73\x55\xd4\x2e\xc2\x52\x30\xa2\x91\xde\x48\xc1\x3f\x1a\xad\x6a\x73\xed\xc9\xf1\x13\xa6\xd7\xd3\xe9\xf0\x98\xb3\xe2\xef\x31\x57\x96\x02\xd3\x13\x9d\x7b\xf9\x9b\x59\x91\xfd\xf1\xb0\xfb\xc7\x65\x4f\x42\xca\x69\xe4\x1d\xc9\x5a\x15\xa3\x67\x49\x35\x93\xe2\xa8\xb7\xfd\x39\xd6\xd7\x4b\x97\x04\x5f\xf0\x1d\x00\x00\xff\xff\x22\x60\xfa\x2e\x31\x01\x00\x00")

func svcConfigGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcConfigGoTpl,
		"svc/config.go.tpl",
	)
}

func svcConfigGoTpl() (*asset, error) {
	bytes, err := svcConfigGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/config.go.tpl", size: 305, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0x42, 0xb6, 0x56, 0xec, 0x8d, 0xd5, 0xc3, 0xa4, 0xd1, 0xd3, 0xb3, 0xd9, 0x90, 0x88, 0x46, 0x5d, 0x3, 0x9a, 0x74, 0x97, 0x1e, 0xd8, 0x3c, 0x96, 0xcb, 0x60, 0x8d, 0x98, 0xf, 0x80, 0xc3}}
	return a, nil
}

var _svcEndpointsGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdf\x6f\xdb\x38\xf2\x7f\x96\xfe\x8a\x59\xa3\x5f\xd4\x2e\x54\x65\xbf\xaf\x29\xf2\x70\xd7\x76\xb7\x05\xae\x3f\xb0\xe9\x5e\x1f\x8a\x62\x41\x4b\x63\x9b\x88\x44\x6a\x49\xca\x4e\xce\xd0\xff\x7e\x18\xfe\x90\x29\x4b\x76\x92\xed\xa1\x7b\x38\x6c\x80\x36\xb6\xc8\x19\xce\x7c\xe6\x33\xc3\x21\x95\x8b\x0b\x78\x29\x4b\x84\x35\x0a\x54\xcc\x60\x09\xcb\x3b\xd8\xb0\xdd\x4d\x0e\xaf\x3e\xc0\xfb\x0f\x9f\xe0\xf5\xab\xb7\x9f\xf2\xf4\xe2\x02\x7e\x41\xd5\x0a\xc1\xc5\xda\x8e\xc3\x8e\x57\x15\xc8\x2d\xaa\x9d\xe2\x06\xc1\x6c\xb8\x86\x15\xaf\xd0\xce\xfd\x27\x2a\xcd\xa5\xb8\x84\xfd\x3e\xf7\x9f\xbb\x2e\x1a\x80\x57\xcc\x60\x3c\x4a\xdf\xbb\x2e\x4d\x1b\x56\xdc\xb0\x35\x82\xde\x16\x29\xcd\xff\x14\xd4\x42\x21\x85\x61\x5c\x68\xa8\xd1\x6c\x64\xa9\xc1\x48\xa8\xd9\x0d\x02\x17\x25\xdf\xf2\xb2\x65\x15\xa0\x28\x1b\xc9\x85\xd1\xb0\x52\xb2\x06\x8d\x6a\xcb\x0b\xd4\x19\x69\x52\xf8\x7b\x8b\xda\x00\x13\x25\x28\xd4\x8d\x14\x1a\xc1\xdc\x35\x68\x35\xd1\x54\x72\x42\x6a\x3c\x68\xc9\x80\x69\xd8\x61\x55\xd1\x6f\x14\x85\x2c\x51\x69\x52\x40\xfa\x4a\xf4\xdf\x57\x52\x79\x41\xab\x2d\xb3\x0f\x18\x81\xb3\x02\xd9\x2a\xd0\x6d\xd3\x48\x45\xd0\x1a\xc5\x84\xa6\xcf\xb4\x1c\x67\x15\xff\x17\x33\x5c\x0a\xd2\xb6\x92\xaa\x66\x46\xe7\x69\xca\x6b\x3b\x63\x9e\x26\xb3\x55\x6d\x66\x69\x32\x23\xcf\xf1\xd6\x7e\x14\x68\x2e\x36\xc6\x34\xb3\x14\x00\x22\x7d\xb3\x35\x37\x9b\x76\x99\x17\xb2\xbe\x58\xcb\xe7\x37\xdc\x5c\xd0\xbf\x7e\x82\x17\x4a\x93\x13\x13\x83\xcb\x34\xa5\x59\xc2\x6c\xbf\xcf\x3f\xfe\xfd\xad\xb5\xe4\x23\x33\x1b\x78\xde\x75\xb3\x74\x61\x23\xf2\xba\xc7\xb8\x90\x55\x85\x85\xd1\xc1\x59\xb3\x89\xb0\x03\xb3\x61\x06\x0a\x59\x37\x84\x0c\x13\xc0\xca\x32\x04\x24\x87\xb7\xe6\xa9\x26\x65\x35\x32\x61\x08\xff\x25\x42\xab\xb1\x24\xa0\x19\x6c\xb0\x6a\x50\x81\x36\xaa\x2d\x4c\x46\xc3\x7e\xa9\xe9\x95\xb8\x30\x12\x18\xa9\xd3\x5c\xac\x2b\x84\x86\x29\x56\xa3\x41\x45\x5c\xa4\xe7\x6f\x05\x30\x17\x62\x95\x01\x37\x4f\x35\x2d\xb6\x6a\x2b\x1b\xaa\x55\x2b\x0a\x0a\x83\x37\x59\x20\x45\x4a\x82\x6c\x6c\x42\x80\x24\xd9\x06\xd5\xf3\xb0\x20\x29\x5c\x32\xcd\x75\x0e\x3f\x49\x05\x78\xcb\xea\xa6\xc2\x0c\xee\x64\x0b\x35\x5f\x6f\x0c\x34\x4c\x13\x4d\x22\xa8\xc8\xc0\x7e\x21\xb7\x4e\xa3\x64\xd9\x16\x68\x61\x60\x02\x28\x40\xf9\x1b\x26\xca\x8a\x6c\xdc\x71\xb3\x01\x64\xc5\xc6\xb3\x1d\xe6\x61\xf5\x05\xec\xb8\xc2\x12\xda\xc6\x29\xd5\x0d\x16\x7c\xc5\x0b\x68\x98\xd9\xe4\x30\x7f\x6b\xed\xe3\x9a\xf4\x2f\xd9\xb2\xba\x03\x06\x35\xd7\xc6\x65\x0a\x94\xa8\xf9\x5a\x90\x28\x17\x5b\x79\x83\x16\xca\x6b\x17\x96\x3e\xb3\xac\x89\x38\x0c\xb6\x0b\x06\xa9\x08\x48\xe6\x8b\x18\xdd\xa2\xe2\x28\xcc\x10\xdd\x28\x70\x87\x24\xad\xee\x28\x95\x9d\x3a\x2c\xcf\x85\x91\xd2\xc9\x61\xc5\x09\xe1\x1a\x1d\xad\x0e\xf6\x72\x61\x50\xad\x18\x11\x6a\x3a\x12\xa4\xac\x5f\x6c\xba\x50\xb4\xb4\x18\x0c\x13\x25\x7f\x8f\xbb\x97\xde\x9f\x42\xd6\x4b\x2e\x2c\x4e\xb5\x37\x31\x0a\x6c\xe6\xcb\x89\x69\x95\x00\x6e\x99\x4c\x06\x16\xac\xaa\x50\x39\x32\x7b\x63\xf3\xd4\xba\x33\x02\x74\x6f\x33\xb9\x59\xe6\xbf\x8a\xde\x4b\x2c\xf7\xfb\x9f\xe5\x7b\x56\x23\xe4\x41\x9c\xbe\x75\xdd\xb5\x45\xde\x8a\x90\xa1\xee\xeb\x87\xc6\xd1\x17\x00\x6a\xd6\x7c\xd1\x46\x71\xb1\xfe\xfa\xe5\x6b\xef\x54\x1e\xcf\xeb\x85\x7f\x71\x05\xf1\x55\xa8\x63\xb1\xf0\x41\xd4\x0d\xfb\xb9\x3f\xb5\xa2\x88\xe4\x5d\x11\x7d\x1d\x0a\xe3\xa4\xbc\x1b\x0d\x73\x07\x0a\x3c\xdb\xe9\x99\x35\x3e\x56\x40\xb9\x32\xb7\xb1\x08\xa2\x9f\x69\x9b\x51\x19\x3c\xf3\x4f\xad\x41\x8b\x34\xdd\xef\x15\x13\x6b\x84\x27\x1c\x2e\xaf\x0e\x78\xbd\x73\x5c\xee\x3a\xbb\xdc\x7e\x0f\x7c\x65\x63\x35\x17\xd2\xc0\x13\x1e\x14\x5c\x1b\x85\xac\x5e\x44\x8f\xdd\x6a\xe1\xb9\x97\x4f\xf6\xfb\x27\xdc\xc7\x20\x84\x90\x9e\x07\x1e\xe5\xe1\x61\x58\x0d\x45\x49\xb2\xfb\xfd\x73\xfa\xd8\x75\x69\x97\xa6\xe4\x13\xbc\xc7\x5d\xcf\x81\xf9\x22\xe2\xc3\x3e\x4d\x3c\x8f\xfa\x67\xfb\x34\x49\x46\x61\xbe\x74\x48\xdd\xe0\xfc\x01\xc1\x5e\x64\x5e\xc5\x51\xb0\x2f\xc7\x2a\xce\x84\x3c\xd2\x32\x0c\xf9\xe5\x19\x2d\xe3\xc0\xf7\x6a\xe2\xc0\x5f\xc2\x94\x3f\x0f\x0d\x3f\xa9\xb4\xd8\xc6\xb5\xea\xfb\x50\x82\x7e\x6c\x44\xe7\x51\x56\x2f\x20\x22\xca\xbc\x30\xb7\xe0\x37\xef\xfc\xa5\xfb\x9d\x51\x05\x7d\xd6\x2c\xf3\x3e\xc3\x0f\x0b\x77\xdd\x02\xe6\xe3\x31\xb7\x7a\xd7\x65\x80\x4a\x49\xb5\xf0\x25\x23\xfc\x84\x5e\xc6\x0e\x93\xbf\x98\x4f\x90\x95\x6c\xa1\xb5\x17\x03\x59\xbe\xb2\x42\x3f\x5c\x81\xe0\xd5\x91\x5e\xa7\xdb\x12\x52\xf0\xca\x6a\x1f\x8c\x77\xe9\xc4\xcc\x60\x4c\x7e\xc6\x8f\x45\x46\x0a\xd3\xa1\x9e\x38\x65\x5c\xc2\x50\x48\xdf\xd1\xae\x15\xc7\xd5\xee\x8b\x4f\x0c\xda\xb8\x76\x5d\x9a\x0c\x43\xfd\xc4\xe0\x44\xb4\x93\xff\x54\xb8\xfb\x90\x93\x5d\x53\x20\x6b\xb0\x5e\xc7\x66\xc4\x75\x7b\x31\xae\x17\xa7\x41\xb7\x29\x30\xc9\xa0\xd0\xc9\xf6\xdb\xdf\x9e\x88\xd3\xf7\xb4\xd1\x63\xc7\x89\x49\xda\x1c\x56\xfb\x9d\x90\xf3\x3a\xa7\xe2\x16\xb8\x39\x29\xbe\xed\x69\xa7\xf3\x23\xea\x5b\x43\xa7\xa5\xee\xe3\xdd\x43\xf8\x37\xcd\xc3\x23\xc9\xed\x90\x6b\xd3\x32\x87\x6f\x07\x16\x26\x81\x86\x31\x1d\x3f\x2b\xd6\xfc\xad\xaa\x5e\xdf\x16\xd8\x18\xd8\x29\xd6\x68\xd7\xa4\xf5\xd1\x5c\x71\xac\x4a\xea\x50\xfd\xee\x7e\x28\xef\x96\xb9\xb6\xbb\x99\x68\xbb\xf3\x77\xbc\x2c\x2b\xdc\x31\xe5\x8e\x4f\xbf\xea\x70\xa0\xa2\xa3\x44\xd3\x54\x77\xd4\xa4\x50\xe3\x65\x48\x79\xdd\xcf\xb6\x9d\x25\x6e\x51\xdd\xf5\xd4\xa2\x02\x43\x3d\x48\xe8\xb5\x49\x9f\xdb\x0c\xa8\xf7\xca\xa2\xd6\xa7\x60\x82\xfa\x6e\xea\x56\xb1\x24\xb1\xe5\x1d\x08\x0a\xbb\xeb\xc7\xf1\xb6\xa8\xda\x12\x4b\x77\x96\x5a\x22\x99\x40\x3e\x37\x58\xe6\x23\x34\xe6\x07\x9b\x32\x98\x5d\x1b\x66\x5a\x3d\xcb\x60\xf6\x91\x8b\xf5\x6c\x91\x86\x42\xf9\x2c\xaa\x94\xa7\xe4\x61\x02\x95\xec\x60\x4d\x9e\xe7\x6e\x93\x20\x46\x27\x5c\xf8\xc7\x97\x57\x71\xfb\xe0\xe0\xdf\x77\xb4\x83\xd2\x1e\x7c\xcf\x7e\x90\x7c\x73\x89\x48\x9c\x8a\x59\x94\x03\xb3\x4b\xd8\x77\xb4\xe5\x25\x11\xad\x92\x43\x47\x90\x74\x69\x9a\x50\x80\x7f\x23\xef\x6c\x12\x5a\x2b\x7b\x4f\xc9\x78\xbe\xa2\x61\x79\x43\xc3\xc1\xd7\x2f\x78\xfb\xf5\x05\xfc\x20\x6f\xec\x8c\xa4\x61\x82\x17\xf3\x55\x6d\xf2\xeb\x46\x71\x61\x56\xf3\xd9\xeb\xa0\xa2\x27\xc5\xd3\xff\xd3\x4f\xa1\x94\xa8\x81\x7c\xc0\x5b\xae\xcd\x0b\xd0\x88\x31\x97\x7a\x3a\xea\x7c\x2d\x67\x64\xd4\x62\x91\x26\x09\x59\x5d\x62\x85\x06\xe7\xc1\x02\x3b\x76\x70\x80\x8b\xe2\x60\x7e\x1f\x91\xef\x86\xfd\x44\x75\x21\x8b\xae\xae\x86\xe1\x38\x51\x67\x26\xb7\x4b\xb8\x8a\x80\x99\x4f\x4e\x19\x57\xb6\xee\x6c\xac\x5d\x09\xf9\x07\x5b\x62\x85\xe5\x81\xd9\xee\x1e\x65\x8d\x26\xe4\x61\x7c\xb6\x75\xe9\xb8\xdb\xa0\xe8\x47\x65\x94\x7a\x5e\x99\xcb\xa0\xcc\x55\x0c\x9f\xd4\xad\x9b\x0c\xee\x72\x86\xb9\xfb\x1d\x5e\xd0\x11\x4f\xf1\xc2\x9d\xbd\x23\x1b\x36\xbc\xd8\x58\x51\x4d\xc6\x8f\x4d\xf0\xe7\x1a\x2f\x1d\x4e\x75\x52\xf9\x53\xcd\xd8\x2b\xbb\x7b\xb9\x64\xcc\xc6\xbb\xde\xc4\x46\x98\x9e\xf2\xeb\x0f\xd7\xd9\x91\x51\x99\xf7\xd3\x22\xae\xb0\x40\xbe\x75\xe7\x5f\xeb\xe2\xd1\xb5\x42\x0e\xd7\x88\x93\x6a\xec\x48\x38\x97\x0f\xb7\x04\x4a\x86\x12\x0d\xe3\x95\x3d\x44\x87\x4c\xb6\x17\x3c\xfe\xf0\xcf\x2a\x6e\xee\xf2\x73\x05\x71\xe0\x7d\x5c\x17\x1f\x8d\xe9\x5f\x55\xf3\xaf\xaa\xf9\xe7\x55\xcd\x81\x9a\x6c\x5a\x62\xaa\x88\xc6\xdf\xee\xa9\xa6\x3e\x63\x3e\x73\xb3\x79\x63\x4c\xe3\xda\x9c\x33\x65\x03\x85\x51\x77\x94\xe9\x2b\x5e\x61\x09\x6f\x46\x57\x28\xe7\x2b\xca\xf4\x19\xfb\x21\x1d\x9b\xbb\x31\x03\xe9\x97\xf9\xd3\x9b\xb6\x29\xc4\xe6\x3a\x72\xea\x91\x4d\xdc\xbd\xfa\x4e\x60\xf7\x5f\x5f\xa1\x48\x3e\x49\x92\x89\x0a\xf5\x20\x9a\xfe\xcf\x97\xaa\x2d\x3b\xb0\xfa\xe4\x8d\xa3\xf5\x52\x06\x2f\x31\x1f\xdd\x69\x7d\xe1\xa2\xf8\xfa\x02\x82\xc3\x41\xe1\x15\x65\x12\x8a\x72\x2e\x33\x88\xc9\x64\x8d\x06\xac\x34\x1e\xcf\xb7\xf7\x48\xa7\xec\xc8\xe0\xff\x17\xd1\xf4\x2f\x3f\x7e\x85\xab\x81\x5e\x8f\xc5\x29\x03\xe1\x2a\xb8\x3a\xac\x40\x43\xf2\xfb\xc2\x23\x05\x7e\x8f\xba\x33\x5e\xff\x44\x1a\x9f\x4e\xdf\x23\xf1\x9e\x51\xa1\xd3\x78\x40\x1a\x87\xcb\x85\x07\xb1\xc1\x6f\x36\x67\xf9\x10\x8c\x08\xa4\x08\x89\x76\x3f\x33\xec\x1e\x12\xb8\x31\x16\x3b\x65\xd5\x70\x97\x1b\x40\x78\x74\x53\xe5\xfe\x3f\x6b\x74\x44\x14\xc7\x92\x9f\xd1\x8c\x63\xee\xae\x28\xdc\xdb\xb3\x69\xa3\x80\x69\x2d\x0b\x6e\x5f\xcb\x5a\x36\xd0\x16\xb1\xe6\x5b\x14\x87\x5e\x2f\x9d\xb8\x83\x9c\x5a\xee\x38\xae\x8b\x93\x50\xd8\xf2\xbb\x0a\x1e\x3c\x26\x4a\x49\xb8\xc1\x8e\xd2\x24\x3c\xba\x27\x33\x7f\x5c\x78\xa8\xae\x9d\xed\xc3\xfb\x6a\x02\x82\xaf\x09\x2b\x38\x73\x4d\x0d\xee\xe5\xcc\x59\x68\x26\xd5\x8f\x39\xef\x5f\xee\x9e\x5b\xcd\x6e\x53\x0e\x95\xa3\xcb\xf5\x01\x11\xbc\xa6\x21\x11\x8e\xbc\x0b\x4c\xa0\xf0\x9e\xf3\xef\xdb\xe8\x70\x9f\xcf\x2b\x56\x55\x4b\x56\xdc\x9c\x77\xfa\x9c\x7d\x8e\x38\xde\xe3\x21\x71\x4e\x42\x74\x4c\x9d\x80\x57\x44\x9d\x60\xd8\x31\x43\x06\xef\x22\x26\x29\x32\x7e\x07\xf1\x28\x8e\x0c\x16\x18\x03\xe6\xff\x22\xe0\xec\x7a\x03\x96\x0c\x5f\x9e\x0c\x68\xe2\x75\x1d\xd3\x64\xe8\xe2\x34\x4f\x26\x9c\xfc\x56\xa2\xdc\xe3\xf8\x04\x53\xa6\x3c\x3f\x6b\xa2\xe3\x8a\x77\xfb\x98\x2b\xa7\x80\x3a\x26\x4b\x40\xed\x5e\xb2\x44\x6f\x9c\x22\xa2\x14\xad\x36\xb2\xb6\xef\x22\x21\x9e\x31\xe4\x08\x70\xa1\x0d\x32\x7b\xdd\xe0\xdf\x16\x6f\x10\x4a\x5c\xb1\xb6\x32\xb4\xcf\x9f\x23\x51\xa4\x76\x8c\xe3\xc6\x0d\xc2\x83\xdf\x76\x1d\xc8\x14\xbf\x42\x1b\x10\xc9\xeb\x1c\x12\x29\x76\x2e\x26\xd1\xc8\x73\xf7\xb7\x2c\x8f\x21\xcb\x19\x07\x17\x0f\x76\xcc\xb3\x61\x13\xfe\xfc\x21\x66\xc3\xb4\xa7\xc7\x4c\x08\x6e\x47\x4c\x10\xbc\xf2\x28\xbc\x61\xfa\x18\x85\x62\x83\xc5\x8d\xb6\xe7\x82\x93\x34\xe0\xfa\x8f\x26\xd2\x78\xc1\x31\x36\x4b\x29\x2b\xf2\xe0\xb7\x87\xb8\xdb\x3b\x25\x89\xd8\xff\x0e\x00\x00\xff\xff\x4a\x08\x3a\xa4\xb5\x25\x00\x00")

func svcEndpointsGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGoTpl,
		"svc/endpoints.go.tpl",
	)
}

func svcEndpointsGoTpl() (*asset, error) {
	bytes, err := svcEndpointsGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.go.tpl", size: 9653, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x66, 0xd6, 0xfd, 0x4a, 0x8a, 0x91, 0x6d, 0x6, 0xfa, 0x8d, 0xa9, 0xec, 0xeb, 0xfa, 0xb7, 0x31, 0x4a, 0xb9, 0xc8, 0x3, 0xf0, 0x7, 0x87, 0x69, 0x21, 0xcb, 0x42, 0x83, 0x78, 0x27, 0x6, 0x28}}
	return a, nil
}

var _svcServerRunGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xdd\x6e\xdb\x3a\x12\xbe\x96\x9e\x62\x2a\x74\x17\x12\xe0\x52\x05\x76\xbb\x17\xde\xfa\xa2\x8d\xd3\x34\x40\x93\x1a\xb6\xdb\x5e\x1e\xd0\xd2\x48\x26\x22\x91\x3a\x24\x65\x37\x10\xfc\xee\x07\x43\xfd\x58\x4e\x63\xb7\xc5\x01\x8e\x2f\x12\x8a\x33\xfc\x38\xf3\xcd\x1f\xe3\x18\xae\x54\x8a\x90\xa3\x44\xcd\x2d\xa6\xb0\x79\x84\x2d\xdf\x3f\x30\x98\x7f\x86\xfb\xcf\x6b\xb8\x9e\xdf\xae\x99\x1f\xc7\xb0\x44\x5d\x4b\x29\x64\xee\xe4\xb0\x17\x45\x01\x6a\x87\x7a\xaf\x85\x45\xb0\x5b\x61\x20\x13\x05\x3a\xdd\xaf\xa8\x8d\x50\x72\x0a\x4d\xc3\xba\xf5\xe1\x30\x12\xc0\x9c\x5b\x1c\x4b\xe9\xfb\x70\xf0\xfd\x8a\x27\x0f\x3c\x47\x30\xa8\x77\xa8\x7d\x5f\x94\x95\xd2\x16\x42\x1f\x00\x20\xc8\x0a\x9e\x07\xed\x52\x99\x6e\x91\x95\x36\xf0\xbd\x20\x17\x76\x5b\x6f\x58\xa2\xca\xd8\x08\x5d\x57\x06\x65\x5c\xa8\x5c\xd7\x86\xa4\x12\x6d\xf7\x2f\xde\x5a\x5b\x8d\xd7\x71\x55\x69\x95\x05\xbe\xef\xc5\x31\xfc\x27\x85\x05\xd7\xf6\x91\x00\x95\xca\x0b\x64\xb9\x2a\xb8\xcc\x99\xd2\x79\x9c\xeb\x2a\xe9\xf4\xd6\xe4\xed\x0a\xf5\x4e\x24\xe8\x7b\xd5\x06\x82\xa6\x61\x8b\xf7\xb7\xce\xda\x05\xb7\x5b\x78\x75\x38\xd0\x2d\x4d\xc3\x4e\x37\x21\x36\xbb\xe4\x8c\x64\xcb\x65\x5a\xa0\x36\x81\x1f\xf9\xfe\x8e\x6b\x98\x63\xc6\xeb\xc2\x5e\x29\x99\x89\x1c\xcc\x2e\x61\xed\xd2\xf7\xb3\x5a\x26\x20\xa4\xb0\x61\x04\x8d\xef\x11\x31\x6c\x65\xb5\x90\xf9\x57\xae\xc3\x7f\x9f\x1c\x64\x73\xdc\xd4\xf9\xbb\x34\xd5\x13\x08\x52\x5a\x33\x9e\xa6\x3a\x98\x40\x30\x7d\xf3\xfa\x7f\xaf\x69\xe1\x54\x80\xcb\x14\x4a\xb4\x5a\x24\x06\x0a\x61\x2c\x4a\x20\x4d\x34\x26\x88\x7e\x76\xc9\xc7\xf5\x7a\xd1\xdd\x41\xb4\x8e\xaf\x78\xe3\xae\x20\x85\xdf\x46\xbd\x59\x2e\xae\x3a\x54\xa2\x7f\x8c\xfa\x5f\x87\x9a\x2f\x17\x57\x10\x12\x76\xf4\x23\xb8\x8b\xd5\x17\x83\x80\x72\x27\xb4\x92\x25\x4a\x0b\x3b\xae\x05\xdf\x14\x68\x26\x20\x32\x30\x68\x19\x7c\x28\x78\x6e\x60\xcb\x77\x08\x95\x16\x4a\x0b\xfb\xe8\x52\x1b\xae\xe5\x8e\xf4\x0d\xf3\x3d\x91\x39\x60\x98\xce\x40\x19\x76\x83\x16\xe5\x2e\x0c\xe6\xd7\xef\xbf\xdc\xfc\xf1\x6e\x3e\x5f\x06\xd1\xff\x5b\x85\x17\x33\x08\x02\x0a\x8a\x77\x26\x0a\x30\x73\x8a\xbe\x77\x70\xa8\x2e\xc1\x4f\x51\x17\x9f\x97\x6b\xc2\x73\xa2\x73\x78\x3d\xe1\x30\x83\xac\xb4\x6c\x55\x69\x21\x6d\x16\x06\xd3\x7f\x99\x60\xe2\x8e\x46\xfd\x15\xcf\x18\x4e\xa7\x7f\xcd\xee\xd1\x3d\x63\xb3\x9f\xc1\xa4\x60\xfd\x1a\x66\x1f\xd6\x11\xe6\xa1\x4b\xea\x7b\xdc\x5f\xcb\xb4\x52\x42\x5a\x13\x9a\xb6\xc4\xa0\xda\xb0\xa6\x61\x5d\xc1\xb1\x7b\x5e\xe2\xe1\xb0\x72\x2d\x22\x72\x65\x31\x9c\xa0\xbb\xe2\x18\xde\xd7\x46\x48\x34\x06\x52\x55\x72\x21\x59\x9b\x09\xdf\x34\xaf\xfa\xaa\x85\xbd\xb0\x5b\x28\x45\x9a\x16\xb8\xe7\x1a\x0d\x83\x15\x22\xf4\x25\x18\x8f\x25\xb9\xf2\xbd\xde\x92\xd9\xa0\xc2\x08\xae\x43\xeb\x0d\xed\x52\xae\x37\x67\xb8\xde\xa3\x6a\x0e\x7d\xaf\x69\x34\x97\x39\xc2\x4b\x41\xd4\x0d\x0e\xdd\xa1\xdd\xaa\xd4\x50\x17\xf0\x3d\xea\x6a\x4d\x43\xb9\x49\xe5\x18\x4a\x65\xe1\xa5\x60\x4b\xfc\xb3\x46\x63\x57\x56\x23\x2f\xa3\xd1\xb6\xa9\x94\x34\xd8\xef\x1f\x0e\xae\x2b\x7a\x5e\xd3\xac\xd5\x27\xb5\x47\x4d\x5a\x2d\x61\x83\x55\x33\xc7\xd9\x1d\x7f\xc0\xa6\xf9\x41\x7a\x74\x05\xba\x5f\xd3\x00\xca\x94\xa0\xbd\xa6\x41\x99\xd2\x82\x1c\xc5\x81\xf4\x69\x8b\x78\x12\xba\xe8\x9f\xf4\x76\x30\x85\x3d\xe3\x11\xcc\xe0\x02\x1b\x97\xdc\x3c\x66\x8d\xc1\x02\x13\x1a\x8f\xc7\x4c\xfb\xcd\x04\x3a\xb2\xf5\x24\x85\x8e\x94\x0d\x2a\xc4\xae\x46\x5b\x6b\x09\xc3\x1e\x15\x08\x4d\xe1\x5a\x82\xb1\x5c\x5b\x03\x1c\x24\xee\x81\x9a\x6d\x37\x2e\x27\xe0\xba\x61\xff\x41\x84\x72\x70\x0d\xbf\xdb\x6b\x6d\xb6\x5b\x24\xa4\x8a\x1b\x83\x29\x24\xed\x70\x21\xe5\x42\xe5\x39\xea\xb6\x0c\x97\xb5\x0c\x93\x6c\x3c\x74\xdc\xa0\xe9\xcb\x60\x3a\x72\xe2\x1e\xf7\x7d\x19\x44\x4f\xb2\xe2\xb9\x62\x26\xe7\x44\x06\x49\x96\xb3\x1b\x7a\x75\x88\x84\x3a\x4c\x1f\xda\x6b\x99\xa8\x14\x35\xcc\x66\x20\x45\xe1\x5a\xc7\xcf\x34\xbb\x0e\x40\x5f\x24\xef\x54\x7b\x35\xea\x2d\x2e\x8e\x77\x98\x6c\xb9\x14\x09\x2f\x8e\x65\x89\x5a\x27\x64\x67\xc9\x1f\x30\x24\x31\xa0\xd6\x4a\x77\x65\x7c\x2b\x2d\x6a\x5d\x57\xb6\xf7\x95\xf9\x5e\xae\x8e\x8e\x0f\xf2\x8f\xed\x4e\x48\x70\xdd\xd9\x76\xa0\xb6\x13\xa9\x3f\x48\xc4\xb6\xf3\xda\x1b\x30\x3e\x39\xce\xd9\x37\x61\xb7\x1f\x04\x16\xa9\x09\xdb\x57\x0b\x6b\xbf\x48\xd7\x0b\xac\xe6\xd2\x50\x47\x0f\xa6\xdd\x04\x0f\x26\x4e\xe0\xc6\xe1\xb4\xcd\x5f\xa2\xe9\x38\xe9\x7d\xcf\x3b\x44\xec\x56\x66\x2a\x0c\x5a\x2b\x84\xcc\xdd\x48\xf4\x4a\x17\x3d\x9a\xd1\x5d\xe4\xf0\xae\xfe\x4e\xa1\xf3\x4a\xd6\x7a\x12\x06\xb1\xbb\xa5\x7d\x1b\xc5\xc1\xa4\x55\xef\xdc\xfc\x40\x6e\x38\x09\xbb\x95\x29\x7e\x8f\x2e\x1c\x4d\xca\xb4\x10\x12\xcf\x23\x5c\xb5\x0a\x97\x30\xe8\x8f\x28\x2e\x60\x2c\x5a\x85\x4b\x18\xe6\xb1\xdc\xa8\xe2\x3c\xc4\xca\xc9\x2f\x21\x58\xcd\x93\x0b\x36\xac\x49\x1c\x39\x7e\x5d\x52\xbd\x7d\xd5\x6a\x7e\x72\xdc\xbf\x93\xa9\x23\x3a\x3c\x0d\x12\x94\x34\xa2\xc3\x2e\x65\xdc\x03\x69\x08\xf5\x93\x94\xe9\xbb\xd4\xdf\x48\x1c\xc2\x3f\x93\x37\xc3\xe3\xed\x5c\xda\x78\xde\xb6\xef\xf2\x34\x37\x48\xbf\x4f\xfa\x27\x16\x4d\x8e\x2d\x6b\xf2\x93\x22\x8f\x7e\x81\xac\xe3\xb3\x72\x3b\xe6\xca\x35\xba\x73\x5c\xfd\x4e\x79\xc1\xe8\x77\x4a\x17\x5d\x11\x4c\x4e\x15\x9e\xf2\x36\x3c\x4f\x07\xb5\x33\xec\x15\x72\x42\xad\x85\x38\x94\x68\x3b\x47\xc3\xc0\x26\x55\x30\x39\x41\x22\x65\x91\x39\xdd\x17\xc7\x16\x38\xd0\x84\x5a\xd3\x67\x3b\x1c\x28\x58\x94\x70\x46\xef\xc6\xc1\x21\xa8\xf6\x71\x34\x9e\x28\x9e\xe7\x3a\xb2\x7b\x45\xf7\x75\xaf\x5d\xd5\x57\x1b\xb6\xc4\x9c\x2c\xd2\x67\x1e\x59\xa1\x99\x80\xd1\xbb\x93\xec\x36\xac\x0d\x52\x21\xc7\x71\x59\xd6\xf2\x85\xff\x2c\xfd\xd7\xd4\x58\xc3\xb7\xaf\x5c\x8f\xec\x38\xc2\xef\xc2\x06\x11\x4d\xb6\xbf\x02\x00\x00\xff\xff\x29\x38\x88\x13\x88\x0e\x00\x00")

func svcServerRunGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGoTpl,
		"svc/server/run.go.tpl",
	)
}

func svcServerRunGoTpl() (*asset, error) {
	bytes, err := svcServerRunGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.go.tpl", size: 3720, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x70, 0xe1, 0xbe, 0xb9, 0x6, 0x4f, 0x1b, 0x1e, 0x53, 0x86, 0xa7, 0xdf, 0x9b, 0xe8, 0x54, 0x30, 0xfc, 0xd3, 0x32, 0xe2, 0xe3, 0xa9, 0xca, 0x61, 0x1c, 0xce, 0x63, 0xb9, 0x6c, 0x2a, 0xc9, 0x82}}
	return a, nil
}

var _svcTransport_grpcGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4b\x6f\xe3\x36\x10\x3e\x8b\xbf\x62\x6a\x2c\x0a\x6b\xe1\x50\x3d\x07\xc8\x65\x93\x74\x13\xb4\x79\x20\x4d\xb7\x87\xc5\x62\x41\x4b\x63\x89\xb0\x44\x2a\x24\x6d\xc7\x25\xf4\xdf\x17\x43\x3d\x2c\x27\x8e\x93\x83\x01\x8b\xf3\xcd\xeb\xfb\x86\x23\x25\x09\x9c\xeb\x0c\x21\x47\x85\x46\x38\xcc\x60\xbe\x85\x42\x6c\x96\x1c\x2e\xee\xe0\xf6\xee\x11\x2e\x2f\xae\x1f\x39\x4b\x12\x78\x40\xb3\x52\x4a\xaa\x3c\xd8\x61\x23\xcb\x12\xf4\x1a\xcd\xc6\x48\x87\xe0\x0a\x69\x61\x21\x4b\x0c\xd8\x6f\x68\xac\xd4\xea\x14\xbc\xe7\xdd\xff\xa6\x19\x19\xe0\x42\x38\x1c\x5b\xe9\xb9\x69\x18\xab\x45\xba\x14\x39\x82\x5d\xa7\x8c\xf0\x8f\x7d\x58\xa8\x8d\x5e\xcb\x0c\x2d\x58\x34\x6b\x34\x27\x56\x66\x08\x73\xa9\x32\xa9\x72\x0b\x0b\x6d\xc0\x15\x08\xf9\xc3\xfd\x39\x38\x23\x94\xad\xb5\x71\xa1\x96\x6b\x07\x2b\x27\x4b\xf9\x3f\xda\x00\x19\xac\x49\x6e\xea\x94\xff\x13\xc2\x71\xc6\x64\x45\x87\x30\x65\xd1\x44\xa1\x4b\x0a\xe7\xea\x09\x8b\x26\xa9\x56\x0e\x9f\xdd\x84\xb1\x68\x92\x6b\x9d\x97\xc8\x73\x5d\x0a\x95\x73\x6d\xf2\x10\x22\xa9\xd0\x89\x4c\x38\x41\x18\x3a\x18\x32\xc0\x24\x97\xae\x58\xcd\x79\xaa\xab\x24\xd7\x27\x4b\xe9\x12\xfa\xed\x97\x40\x6e\x7d\xab\x54\x8d\x4c\x91\x45\xf5\x1c\x26\xde\xf3\xfb\x2f\xd7\xa1\xac\x7b\xe1\x0a\x38\x69\x9a\x09\x8b\x03\x2f\x37\x62\x89\x5f\x1f\xee\xcf\xdb\xea\xa1\x12\x4b\xb4\x20\xc0\xa2\x03\xbd\x00\x54\x59\xad\xa5\x72\x16\xc4\x5a\xc8\x52\xcc\x4b\x04\x41\xf6\x40\x8f\xf7\xbc\x4b\xc3\x6f\x45\x85\x4d\xd3\x53\xb0\x58\xa9\xf4\x45\xe4\xe9\x2e\xd4\x65\xff\x6f\x06\xba\x76\x52\x2b\x0b\x9c\xf3\xbd\x7e\x3b\x32\xef\x82\x39\x86\x7a\xce\xdf\xc8\x05\x9e\x45\x76\x84\xb5\x70\x7a\x06\xdf\x7f\xbc\x1d\xcc\xb3\x28\x3a\x64\xfd\x82\x0b\x6d\x70\xda\x2b\xf0\xa8\xcf\x5b\xb9\xe2\x19\x8b\x9a\x97\x39\xce\x40\xd4\x35\xaa\x6c\xba\x77\x3c\xb4\xc3\x39\x8f\x59\x64\xd0\xad\x8c\x82\xdf\x29\x5b\x9b\xc3\x07\x79\xbc\x87\x47\xfd\xb7\xde\xa0\x81\xbd\x96\xa0\x69\x58\xe4\xbd\x11\x2a\x47\xf8\x24\xa9\x91\xc1\x7e\x83\xae\xd0\x99\x25\x44\xe4\x7d\xef\xfe\x49\x76\x5c\x9c\xc2\x7e\x4b\xb7\xb8\xe9\x58\x67\x51\x14\x0d\xcc\x73\xef\x07\x97\x5e\x84\x19\x21\x2e\x30\xd5\x59\x10\x6b\x84\x78\xc0\xa7\x15\xda\x16\x70\xa9\x0e\x02\x6c\xad\x95\xc5\x80\xd8\x63\x82\x73\x4e\x87\xc4\x9d\xf7\x27\x34\x45\x54\x79\xc3\x9a\x30\x72\x3b\x42\x40\x56\x75\x89\x15\xd2\x54\xd0\x8d\xf2\xfe\xab\x0e\x54\x1c\xd6\x5a\x2a\x87\x66\x21\x52\x64\x6e\x5b\xe3\x38\x8e\x75\x66\x95\x3a\xf0\x0c\x00\x68\x5a\xfe\x55\x43\x64\xcc\x8e\x47\x65\xec\x7d\xce\x0f\x50\x0e\xf0\x82\xf3\x2b\xa1\xb2\x12\x0d\xdb\x35\xdc\x76\xdb\x85\x09\x8b\x65\x54\xb1\xd3\xbb\xe6\x3f\xde\xf7\xbb\xa5\x86\x9b\x37\xb5\xf0\x79\x97\x2a\xde\x85\x1f\xaa\x9f\xa6\xee\x19\xba\x85\xc4\xbb\x49\x9f\x81\xc1\x27\xf8\x1c\xee\xda\x0e\xdf\x4d\x41\xd3\xc4\x30\x7d\x6d\x6b\x07\xa0\x69\x66\x80\xc6\x68\x4a\xc5\xa2\x9f\x14\xa8\x0e\x27\x54\x24\x4d\xdd\x2b\xf6\xda\x4b\x47\xf3\x44\x95\x84\xcc\x31\x8b\xe4\x22\x38\xfd\x76\x06\x4a\x96\x14\xaa\xbf\x43\x4a\x96\x21\x5e\xb8\x8a\xdd\x99\xc1\x9a\x1f\xa9\x28\x9e\x91\x17\x6b\x98\xf7\xad\x1a\xa4\x45\xc7\x67\x3b\xee\xef\x93\x99\x24\x70\xec\x66\x80\xa4\x4d\xf8\xe2\x2d\xd0\x3a\x74\x88\x3f\x49\x0d\x57\x08\x47\x5c\xaf\xd1\xd0\x1e\x0d\x37\xa0\xdd\x9e\xaf\x87\xca\x74\x91\x9d\x06\x01\x2b\x8b\xe6\x24\xd3\x95\x90\xea\x18\x98\xc3\xbd\x91\x95\x30\xb2\xdc\x92\xcb\x62\x55\x82\x54\x61\x85\x8f\x96\xf1\xb1\x3e\xa6\x3f\x5f\x8f\x02\xf5\xf2\x80\x4f\xbb\xd1\xf3\x34\x00\xa3\xa7\xb1\xe2\x34\x37\xa7\x67\xbd\xcf\x21\x55\xfa\x19\x1a\xa9\xf7\x74\x44\xa0\x76\xdd\x7c\x48\xa0\xa3\x9b\xe9\xa0\x42\xad\x47\x0f\x79\x4b\xa2\xf7\xc9\xef\x52\x04\xa9\x8e\x08\x5a\x97\xdb\x0f\x29\x74\xb4\x91\x43\x12\x0d\x15\x7c\x50\x23\x5b\x13\x8b\xbd\xd7\xd1\xbb\x33\x92\xc9\xd6\x87\x74\xba\xc2\xb2\x46\x63\x59\x5b\xfa\xab\x97\xe6\xe1\xf5\x52\x65\x03\x92\xdf\x5c\xc4\x2f\x01\x54\x25\x2d\xc9\xe5\x0c\xd6\xa1\xd2\xa0\x7d\x95\x85\x45\x20\x17\xb0\x1e\x2f\x86\xf6\x3b\x07\x61\x89\xdb\x20\x72\x96\xd1\x17\xa7\x76\x05\x31\xdb\x67\xa1\x9d\x5b\x09\x07\xd3\x65\x0c\x9b\x42\xa6\x45\x80\x96\x25\x94\xa4\x52\x17\x45\xa8\x2c\xbc\x7b\xe8\x33\x8d\x9f\x0b\xa5\x95\x4c\x45\x79\x85\x22\x43\xf3\x17\x6e\xe9\x2b\xc8\x75\x89\xac\x6e\x27\x45\x3a\x48\x85\x82\x39\xf6\x21\xd2\x14\xad\xc5\x8c\x72\xa3\x74\x05\x9a\x2e\x33\xd9\x89\x8a\xb3\xa1\xd7\xff\xa4\x2b\xbe\x89\x72\x85\xed\xde\xa3\x5e\xbf\xff\xf1\x23\x7e\x17\xf8\x46\x75\xd3\x65\xbc\x8b\x10\x5e\xb1\x83\x74\xa9\x7b\x66\x0d\xfb\x15\x00\x00\xff\xff\x5b\x5f\x39\x83\x97\x0b\x00\x00")

func svcTransport_grpcGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGoTpl,
		"svc/transport_grpc.go.tpl",
	)
}

func svcTransport_grpcGoTpl() (*asset, error) {
	bytes, err := svcTransport_grpcGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.go.tpl", size: 2967, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0x5c, 0xc0, 0xb8, 0x1, 0x8, 0x16, 0x5d, 0x8e, 0xf2, 0xf1, 0xb6, 0xc8, 0xc6, 0x74, 0x4d, 0x74, 0xf4, 0xc5, 0x6d, 0x94, 0xbf, 0xb, 0x6, 0xa8, 0xd0, 0xd4, 0x30, 0x85, 0xf9, 0x3, 0x87}}
	return a, nil
}

var _svcTransport_httpGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0a\xc2\x50\x0c\x06\xe0\xbd\xa7\xc8\xdc\xe1\xe5\x1a\x1d\x85\xbe\x0b\x84\xfa\xdb\x82\xd1\x3c\xd2\xa0\x43\xc8\xdd\x05\xe9\xfe\x7d\x99\x3c\xd3\x0a\xd0\x21\xdf\x27\xef\x78\xc3\x25\xcc\xf9\x88\x18\x1c\x78\x0d\x95\xc0\xc9\x27\xfc\x03\x6f\xbb\xd1\xc3\x9c\x36\xbb\x83\x66\xae\x9a\x32\x37\x51\xa5\xb6\xf4\x7e\x5b\xa0\x03\xde\xd6\x3f\xed\x57\xa5\x56\x35\xfd\x02\x00\x00\xff\xff\xed\x08\x4c\xd3\x65\x00\x00\x00")

func svcTransport_httpGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGoTpl,
		"svc/transport_http.go.tpl",
	)
}

func svcTransport_httpGoTpl() (*asset, error) {
	bytes, err := svcTransport_httpGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.go.tpl", size: 101, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x64, 0x8, 0xe3, 0xbb, 0xa, 0x8e, 0xd7, 0x35, 0xcc, 0x32, 0xc4, 0x22, 0x4, 0x9c, 0xff, 0x72, 0x2f, 0xaa, 0x4, 0x6f, 0x28, 0x21, 0xbb, 0x31, 0x58, 0x2d, 0x34, 0xf0, 0xdb, 0xca, 0x76, 0xb5}}
	return a, nil
}

var _svcTransport_wsGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\xdd\x6f\xdb\x38\x12\x7f\x16\xff\x8a\x59\xa3\x28\xa4\xc0\x91\xbb\x8b\x7b\x39\x6f\xf3\xd0\x26\xb9\x6d\x71\x9b\x36\x88\xd3\xcd\x43\x11\x74\x19\x69\x2c\xf3\x2c\x91\x3a\x8a\x8a\x9d\x33\xf4\xbf\x1f\x86\xa4\xbe\x6c\xa7\x9b\xbd\x5b\x03\x8d\x4d\x0e\x67\x38\x1f\xbf\xf9\x60\x67\x33\x38\x57\x29\x42\x86\x12\x35\x37\x98\xc2\xc3\x13\xac\xf8\x66\x1d\xc3\xc5\x67\xf8\xf4\xf9\x16\x2e\x2f\x3e\xde\xc6\x6c\x36\x83\x1b\xd4\xb5\x94\x42\x66\x96\x0e\x1b\x91\xe7\xa0\x1e\x51\x6f\xb4\x30\x08\x66\x25\x2a\x58\x8a\x1c\xed\xd9\xdf\x50\x57\x42\xc9\x39\xec\x76\xb1\xff\xdd\x34\x03\x02\x5c\x70\x83\x43\x2a\xad\x9b\x86\xb1\x92\x27\x6b\x9e\x21\x54\x8f\x09\x63\xa2\x28\x95\x36\x10\xb2\x60\x92\x28\x69\x70\x6b\x26\x2c\x98\xa0\x4c\x54\x2a\x64\x36\xfb\x57\xa5\x24\x6d\x64\xc2\xac\xea\x87\x38\x51\xc5\x2c\x53\xa7\x6b\x61\x66\xf4\x0f\x65\x5a\x2a\x21\xcd\xc1\x09\x95\xe5\x38\xab\x6b\x91\x1e\x50\xb4\xc8\x73\x3e\xdb\xe0\x43\xa5\x92\x35\xee\x73\x56\x42\xd7\x65\x85\x72\x96\xab\x4c\xd7\x15\x51\x25\x9a\xd9\xca\x98\x92\x7e\x57\x4f\x32\xa1\x6f\x23\x0a\x9c\xb0\x60\x36\x83\x5b\x72\x49\x85\xfa\x51\x24\xc8\x82\xf2\x01\x26\xbb\x5d\x7c\xfd\xfe\xa3\xb5\xea\x9a\x9b\x15\x9c\x36\xcd\x84\x45\x8c\x25\x4a\x56\xd6\xce\x52\xc9\xec\x8e\x0b\x03\xee\x73\x06\x3f\xbd\x81\x13\x20\x91\xf1\x02\x13\x25\x53\x16\x94\x42\x66\xd7\xa8\x85\x4a\xfd\x91\xb0\x63\x3a\x81\xbf\x47\x30\x83\x1f\xdf\xb0\x60\xb7\x3b\x05\xb1\x84\xcc\x40\xfc\xe1\xf6\xf6\xfa\x03\xe6\x25\xea\x78\xe1\x94\x89\xef\x16\x57\x7c\xbb\x10\xff\x41\x78\x03\x4d\xc3\x02\x12\x54\xf0\xed\x15\x56\x15\xcf\xd0\x12\xce\x28\x38\xdf\x63\x25\x3e\xba\x05\x65\x4a\x32\x22\xc6\xcc\x53\x89\xe0\x65\x40\x65\x74\x9d\x18\xd8\xb1\xe0\x0a\xcd\xca\x29\x5b\x19\x4d\xf0\xe9\x3e\xbf\x53\x04\xe7\x93\xc2\x1e\x98\xfc\xce\x82\x0b\x6e\xb8\x23\x11\x25\xbe\xe1\x9b\x56\x9c\x3f\x9a\x72\xc3\xa7\xaa\x10\x06\x8b\xd2\x3c\x11\xcb\xb9\x2a\x0a\x2e\xd3\xe7\xa5\x27\xee\xc0\x98\xeb\x06\xff\x5d\x63\x65\x3e\x5e\x3c\xc7\xa5\xdd\x81\x6f\x62\xcc\xd8\x78\x2b\xaf\x95\xca\x07\x26\xe6\xaa\x95\x70\xe2\xc0\x11\x5f\x4a\xa3\x9f\x58\x50\x97\x99\xe6\x29\x02\x40\x87\xaa\xf8\x8b\xdb\xd3\x2c\x68\x21\x5a\x41\xc1\xcb\xaf\x4e\x93\xfb\x76\x33\xbe\xf4\x3f\x58\x90\x62\xa2\x52\xd4\x15\x0c\xcf\x2d\x6b\x99\x84\x7b\x6e\x8a\x20\x14\xd2\xa0\x5e\xf2\x04\x77\xcd\x14\x50\x6b\xa5\x23\x16\x24\xb9\x40\xba\xc6\x09\x38\x39\xb7\xcb\xfb\x07\xa5\x72\x16\x10\x6e\xe3\x9b\xbb\xab\xda\xe0\xb6\xb3\xcf\x9d\x18\x58\x28\xd2\xce\x43\xee\xfe\xa1\xd1\xfb\x56\x27\x4a\x4a\x4c\x0c\xe5\xf9\x49\x6f\xf7\xb9\x92\x92\x10\xae\xf2\x96\xeb\xda\x2a\x90\x98\x6d\x2b\xc7\x67\x39\x1d\xa5\x6f\xc6\x02\x55\x1b\x48\x56\x5c\xb6\xb8\x22\x0d\xc9\x72\xf8\x84\x1b\x62\x0f\x49\x8b\xd1\xf5\x53\xe8\xdd\xda\xba\xb0\x8a\xdc\x65\x64\x49\x09\xf3\x33\x78\x4d\xab\x1d\x0b\xc8\x88\xb9\xbd\x3a\x57\xd9\x94\x05\xad\xa7\xe6\x50\xf0\x35\x86\xfb\xde\x8a\xe8\x88\x8f\xe9\xfc\x48\x48\x49\x62\x70\x83\x3c\x7d\x5f\x2f\x97\xa8\x29\x4d\xe6\x00\x3f\xbe\xf9\xe9\x6f\xc4\x18\xdc\x51\xa5\x1c\x92\x5a\x4a\x43\x7f\x3a\xb5\x07\x97\x3f\x87\x09\xab\x48\x0b\x8b\x39\x1c\x30\xbc\x1c\x1c\x24\xa9\x61\x94\xca\x9a\xcb\x0c\xe1\x95\x20\xff\x74\xe9\xee\x92\xb7\x6a\x1a\xd6\xc6\x68\xb7\xa3\xc2\x42\x29\x17\x4a\x65\xe0\x95\x88\x7d\x32\x2d\x8c\x46\x5e\x44\x83\xed\xaa\x54\xb2\xc2\x76\x7f\x20\x83\x3e\x65\xdc\x19\xfc\x75\xb2\xdb\xbd\x12\xf1\x27\x5e\x60\xd3\x4c\xee\xe1\xac\x0f\x61\x3c\xa0\x74\x09\x31\x16\xd3\xba\xe1\x50\x4a\x47\x1b\x10\x86\x76\xf8\xd2\xe5\x56\xb6\x92\x51\x0b\x0a\x34\x9a\x5a\x4b\x28\x3b\xac\x85\xa5\x83\x4f\x04\xef\xd2\xd4\xc1\x21\x7c\x1e\xe3\x11\x78\xc8\xf8\xbc\x99\x9f\x01\x75\x9b\xf8\x13\x6e\x16\x36\x3a\x21\x65\xa4\x45\xa1\x3b\x47\xa8\x11\xe9\xbc\x33\x49\xa4\x16\x89\xdd\x05\x73\xe8\x7f\x13\x85\x52\xa8\x3d\x5d\x4e\x5b\x10\x97\x71\xae\xb2\xf8\x4e\x98\xd5\x3f\x04\xe6\x69\x15\xfa\xa4\x70\x2b\x8b\xcc\x89\xd1\x5c\x56\xd4\x7d\x26\x73\x98\xdc\x5d\xbe\x5f\x7c\x3e\xff\xe7\xe5\xed\xc4\x82\x73\xe2\xa0\x3f\x99\xf7\x2a\x34\x16\x66\x89\xd9\xce\xbb\xcc\x24\xf9\xbf\xf1\xbc\xc6\xb0\xdd\x79\xcf\x93\x75\xa6\x55\x2d\xd3\x30\x9a\xc2\xe0\x8a\xe9\xf0\x0a\x2b\x49\xd5\xc6\x63\x7b\x98\xd2\x0e\x81\x41\x62\xf5\xff\x28\x97\x2a\x9c\x7c\xbd\x5b\xdc\x83\xd3\xa7\xb5\x1d\xd3\x49\xc4\x82\x32\xf6\x09\xfa\x35\xa1\x00\x1b\x5d\x63\x1f\xb0\xe4\x48\xc0\x34\x16\xea\x11\xdb\x98\x39\x89\x3e\x3c\x91\xad\x06\xf1\xaf\x2a\x59\x53\x44\x52\x5c\xa2\x86\x32\xfe\x22\x73\xbf\x23\x96\xf0\x6d\x0a\x6a\x4d\xa1\x1a\x5c\xec\xca\xc1\xcf\x44\x20\xaf\x7e\x83\x33\xaf\x6a\xdc\x87\x29\x3e\xcf\x55\x85\x24\x24\x48\x31\x47\x83\x61\x27\x60\xea\x4f\x47\x64\x75\xa7\x70\xd2\x6b\xa5\x91\xa7\xde\x35\x55\x68\x95\x74\xaa\xd9\x9c\xb6\xeb\x20\x89\x09\x03\xf1\xd8\x38\x12\x18\x46\x8c\xf5\x49\xfa\x27\xba\x7f\x32\x54\x7e\x81\x86\x8a\xd8\xaf\xa2\x10\x26\x1c\xcf\x05\x11\x55\x8a\x36\x71\xc8\x43\xa8\x35\xf9\xe7\x18\xff\x05\xf2\x34\x17\x12\x43\x3b\xbf\x7c\x52\x9b\x30\x8a\xdf\xa5\x69\x37\xaf\x44\xd1\xcf\x96\xfd\x87\x33\x90\xc2\xd6\x66\x1f\x49\x57\x91\xf6\x45\x5e\x2b\x99\x7d\xe0\x32\xcd\x51\x87\xd6\x17\xae\xd6\x45\xae\x90\x0d\xd8\xff\x47\x65\x58\xd0\x44\x8c\x05\x4b\x2f\xeb\xdb\x14\x4a\xfe\x94\x2b\x9e\x4e\x8f\x1a\x79\xd3\x87\x89\xbc\x1e\xb4\xce\x18\x58\x43\x5b\x7d\x6d\xf8\x58\x7d\x91\xb8\x2d\x2d\x96\x2d\x3c\x2e\x49\xef\x10\xb5\x9e\x0e\x4e\x59\xca\x2f\x4a\xc8\xec\xdd\x86\x3f\x1d\x50\xde\x3d\x48\xa5\x0b\x9e\xd3\xa2\xd6\xe8\xe0\x10\xf8\xe4\xa1\xe4\xec\x84\x46\xc3\x5c\xaa\xbb\x9b\x21\x21\x31\x94\x4b\x41\xd0\x00\xe6\x15\xbe\x50\xc4\x90\x8f\xfe\x3c\x68\xe4\x6b\x2a\x12\x64\xfb\x23\xd7\x50\x54\x59\xd7\xa5\x3b\x6f\x9c\xb9\x49\xee\x8b\x2c\xb8\xae\x56\x3c\x0f\x3b\x9f\xbe\x2e\xaa\xec\x10\x00\x7f\xa8\x86\x90\x8f\x3c\x17\x29\x14\x7e\x30\xd4\x98\xa0\x78\x74\xd5\x61\xa4\x54\x5b\x4d\x69\x40\xb0\xb1\x1b\x95\xc7\xb0\x9d\x3a\xa7\xa4\xb7\x6f\x73\x91\xd7\xbb\x4d\x7a\x9f\x66\x7d\x9f\xea\x8f\xb6\xf9\x3f\x6c\x45\x76\x38\xed\xb1\x62\x79\xbb\xe6\x34\x60\x0d\xe9\x37\x8d\xba\xd1\x88\x7d\x1f\x3f\xb0\xf7\xf9\xbe\x5f\x5c\x12\xd8\xeb\x68\x9e\xf5\xee\x99\x44\x07\x62\xa8\x6e\x0b\x59\xe3\x88\x60\x23\xaa\x7d\xc3\xee\x6c\xc0\x30\x89\x13\xb3\x9d\x5a\xcb\x22\x0f\xe8\xfd\x80\x05\x2f\xd1\x0b\xb7\x98\xd4\x86\x14\xeb\x9e\x65\x87\x08\xd4\x7c\xd3\x5d\x6d\x51\x73\xe5\x31\xd3\x2a\x66\x59\x8e\xea\xf0\x22\x25\x3c\x04\x73\x52\xa3\x15\xe9\xd4\xb0\xdd\xd6\x79\x25\x68\xf1\x1d\x24\x31\x0d\x9f\x6f\x4f\x5b\x50\xfb\x9b\x5c\x10\x6d\x97\xec\x63\x3a\x75\x34\x0a\xaa\xef\xcc\x64\x8c\xdb\xec\xde\x1a\x73\xcb\xd0\x2d\xa7\xfd\x5d\x8d\x85\xec\x33\xfd\xc0\xbe\xaf\xc7\x0d\xc1\x88\x64\x8d\xd6\x4f\xae\x9a\xe1\xe6\xd6\xee\x84\xfd\xe3\x30\x3a\xd2\x36\x1c\x5b\xbc\x30\xaa\xb4\xad\xe9\xbb\x6d\xa4\x2b\x84\x15\xe6\xe8\x1e\x01\x41\xc2\x2b\x6c\xa1\xd5\x26\xc9\xdb\x53\xeb\xa8\xb9\x87\xc7\x0f\xbe\x2d\x06\xcf\x35\x87\xbb\x81\x39\xe1\x5e\x75\xbb\x6a\x45\x4b\x91\x1f\xa9\x0d\x7f\x5c\x1d\x5c\xa0\xa9\x54\x51\x90\xfb\x5b\x7d\x98\x47\x70\x3b\x32\x71\xf4\x33\x9d\xad\x76\x69\xcb\xe6\xe0\xe9\x7b\x93\x5f\x8f\xb2\x7d\x04\x57\xef\xa0\x67\x13\xe6\x65\x46\x0c\xd1\xda\x67\xf3\x3e\x56\x6d\xf5\xed\x8b\xed\x4b\x3c\x7d\x8b\x5b\xd3\x39\xda\x66\xf6\x11\x4f\xbf\x4c\x47\x82\xe6\x81\x7e\x4d\x0b\x94\xb7\xa7\x1e\x70\xe7\x73\xf6\xa7\xf1\x70\x2d\x64\xd6\x69\xf9\xf5\xfe\xe1\xc9\xe0\xae\xf9\xff\x35\xa5\x04\xf1\x6e\x1c\xc7\x73\x9c\x7e\xdd\xfc\x48\x33\x13\xd2\x0c\x15\x6e\x60\x65\x4c\xd9\xbd\x6a\xac\xda\x7a\x0a\x1a\x4e\xfc\xbe\x4d\x6b\x9b\x68\x64\x5d\x07\x8d\x32\xf6\x0f\xc6\xf6\x95\x18\x6e\xa6\xa0\x1d\xc4\xd9\x11\x7c\x8c\x46\x20\x37\xb0\x5a\x29\xe3\xa7\x47\xc4\x82\x4c\xb5\x73\xe7\x78\x62\x1c\x52\xf6\x6a\x07\x19\xf8\xa2\x87\xde\x5f\xf1\xc8\xdb\xf3\xe4\xe1\x53\x2c\x24\xf0\xed\xff\x4f\xcf\xf1\x57\xea\x5e\x3b\xb4\x8e\x7d\x5d\x3e\xc4\xbb\xdd\x2f\x8a\x84\x0d\x34\x6c\x9a\xdd\xf8\xa1\xe9\x87\x42\x3d\xdd\x1f\x45\x5c\x06\xbf\xd6\x7d\x8f\xec\x8c\xf7\x03\xee\x6e\xe7\xde\x84\xff\x0d\x00\x00\xff\xff\x21\x71\xe5\x63\x26\x15\x00\x00")

func svcTransport_wsGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_wsGoTpl,
		"svc/transport_ws.go.tpl",
	)
}

func svcTransport_wsGoTpl() (*asset, error) {
	bytes, err := svcTransport_wsGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_ws.go.tpl", size: 5414, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x20, 0x61, 0x6, 0xf6, 0xe1, 0x7b, 0x8e, 0x6c, 0xae, 0x7c, 0x88, 0x36, 0xbb, 0xd2, 0x73, 0x7f, 0xaa, 0x8a, 0xcd, 0x50, 0x93, 0xa1, 0xc6, 0x95, 0xdd, 0xfc, 0x70, 0x9f, 0xed, 0xef, 0x2e, 0x9f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.go.tpl":             cmdNameMainGoTpl,
	"handlers/handlers.go.tpl":         handlersHandlersGoTpl,
	"handlers/handlers.methods.go.tpl": handlersHandlersMethodsGoTpl,
	"handlers/hooks.go.tpl":            handlersHooksGoTpl,
	"handlers/middlewares.go.tpl":      handlersMiddlewaresGoTpl,
	"svc/client/grpc/client.go.tpl":    svcClientGrpcClientGoTpl,
	"svc/client/http/client.go.tpl":    svcClientHttpClientGoTpl,
	"svc/config.go.tpl":                svcConfigGoTpl,
	"svc/endpoints.go.tpl":             svcEndpointsGoTpl,
	"svc/server/run.go.tpl":            svcServerRunGoTpl,
	"svc/transport_grpc.go.tpl":        svcTransport_grpcGoTpl,
	"svc/transport_http.go.tpl":        svcTransport_httpGoTpl,
	"svc/transport_ws.go.tpl":          svcTransport_wsGoTpl,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": {nil, map[string]*bintree{
		"NAME": {nil, map[string]*bintree{
			"main.go.tpl": {cmdNameMainGoTpl, map[string]*bintree{}},
		}},
	}},
	"handlers": {nil, map[string]*bintree{
		"handlers.go.tpl":         {handlersHandlersGoTpl, map[string]*bintree{}},
		"handlers.methods.go.tpl": {handlersHandlersMethodsGoTpl, map[string]*bintree{}},
		"hooks.go.tpl":            {handlersHooksGoTpl, map[string]*bintree{}},
		"middlewares.go.tpl":      {handlersMiddlewaresGoTpl, map[string]*bintree{}},
	}},
	"svc": {nil, map[string]*bintree{
		"client": {nil, map[string]*bintree{
			"grpc": {nil, map[string]*bintree{
				"client.go.tpl": {svcClientGrpcClientGoTpl, map[string]*bintree{}},
			}},
			"http": {nil, map[string]*bintree{
				"client.go.tpl": {svcClientHttpClientGoTpl, map[string]*bintree{}},
			}},
		}},
		"config.go.tpl":    {svcConfigGoTpl, map[string]*bintree{}},
		"endpoints.go.tpl": {svcEndpointsGoTpl, map[string]*bintree{}},
		"server": {nil, map[string]*bintree{
			"run.go.tpl": {svcServerRunGoTpl, map[string]*bintree{}},
		}},
		"transport_grpc.go.tpl": {svcTransport_grpcGoTpl, map[string]*bintree{}},
		"transport_http.go.tpl": {svcTransport_httpGoTpl, map[string]*bintree{}},
		"transport_ws.go.tpl":   {svcTransport_wsGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
