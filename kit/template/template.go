// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/cmd/NAME/main.go.tpl (429B)
// NAME-service/handlers/handlers.go.tpl (1.312kB)
// NAME-service/handlers/handlers.methods.go.tpl (785B)
// NAME-service/handlers/hooks.go.tpl (402B)
// NAME-service/handlers/middlewares.go.tpl (3.17kB)
// NAME-service/svc/client/grpc/client.go.tpl (3.191kB)
// NAME-service/svc/client/http/client.go.tpl (101B)
// NAME-service/svc/config.go.tpl (305B)
// NAME-service/svc/endpoints.go.tpl (9.248kB)
// NAME-service/svc/server/run.go.tpl (4.055kB)
// NAME-service/svc/transport_grpc.go.tpl (2.967kB)
// NAME-service/svc/transport_http.go.tpl (101B)
// NAME-service/svc/transport_ws.go.tpl (6.4kB)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x3f\x8f\xe2\x30\x14\xc4\xeb\xbc\x4f\xf1\x94\x2a\x14\x67\xf7\x48\x54\xe4\x0a\x9a\x03\x01\xb7\xbd\x49\xc6\x8e\x45\x70\x90\xed\x04\xad\x22\x7f\xf7\x95\x03\xbb\xa2\xd8\xca\x7f\x7e\xf3\x34\xf3\x46\x4a\xde\x0e\x2d\xd8\xc0\xc1\xab\x88\x96\x2f\x9f\xdc\xa9\xc7\x55\x70\xbd\xe7\x7f\xfb\x33\xff\xad\x77\x67\x41\x52\xf2\x11\x7e\x74\xce\x3a\xb3\x70\x7e\xd8\xbe\xe7\x61\x82\x7f\x78\x1b\xc1\xb1\xb3\x81\xb5\xed\xb1\x68\x3f\xe0\x83\x1d\xdc\x9a\xe7\x59\xbc\xee\x29\xbd\x01\xae\x55\xc4\x3b\xcd\xef\x94\x88\xee\xaa\xb9\x2a\x03\xbe\x29\xeb\x88\xec\xed\x3e\xf8\xc8\x15\x15\xa5\xee\x95\x29\x89\x0a\x29\xf9\x9c\xad\x4e\xf0\x93\x6d\x40\x45\x39\xcf\x62\xb7\xe8\x0e\x2a\x76\xfc\x27\x25\x96\x61\x6a\x64\x80\x9f\xe0\xcb\xdf\x05\x9d\x72\x6d\x0f\x1f\x4a\x5a\x11\xe9\xd1\x35\x8b\x61\xb5\xe2\x79\x71\xf8\x7f\x6f\x55\x04\xab\xb6\xf5\x08\x01\x81\xad\xe6\xd8\x21\x37\x33\x81\x2f\x80\xfb\xd9\x3c\xc2\xe5\xca\x72\xbc\x40\x45\x3e\xc4\x41\xf9\x80\x6a\x45\x54\x34\xda\xf0\x7a\xc3\xcf\x28\xa2\x86\x56\x63\x1f\xb7\x83\xd3\xd6\x3c\xe1\x86\xbf\x93\x88\x13\x5e\xa4\x6a\xb4\xc9\xc3\xaf\xa9\xe3\xe8\x9e\x3f\x89\xbe\x02\x00\x00\xff\xff\xa6\x55\x21\xaa\xad\x01\x00\x00")

func cmdNameMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGoTpl,
		"cmd/NAME/main.go.tpl",
	)
}

func cmdNameMainGoTpl() (*asset, error) {
	bytes, err := cmdNameMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.go.tpl", size: 429, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x19, 0x81, 0xb3, 0x16, 0x98, 0x2a, 0x16, 0x86, 0xb1, 0xd0, 0x5, 0x92, 0x9e, 0x76, 0x94, 0x12, 0x0, 0x49, 0x46, 0xdc, 0x33, 0x10, 0x56, 0x65, 0xd1, 0x10, 0x32, 0xa8, 0x45, 0xea, 0xaa, 0x93}}
	return a, nil
}

var _handlersHandlersGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\x41\x8f\xd3\x3c\x10\x86\xcf\x99\x5f\x31\x8a\xaa\x55\xb2\xea\xba\xf7\x4f\xfa\x2e\x20\x16\x81\x96\xb2\xa2\x20\x8e\xc8\x9b\x4c\x13\x8b\xc4\x0e\xf6\xa4\xdd\x95\xe5\xff\x8e\xdc\x98\x92\x76\x55\xb8\xac\x84\x2f\x89\xc7\xf3\x8e\xfd\xbc\x63\x79\x90\xd5\x77\xd9\x10\xb6\x52\xd7\x1d\x59\x07\xa0\xfa\xc1\x58\xc6\x02\xb2\xbc\x32\x9a\xe9\x91\x73\xc8\xf2\x46\x71\x3b\x3e\x88\xca\xf4\x2b\xa7\xec\x38\x38\xd2\xab\xce\x34\x76\x74\x39\x40\x36\x3c\x60\xee\xbd\xb8\x7f\xf5\xee\x20\xbe\x97\xdc\xe2\x4d\x08\x39\x94\x00\x3b\x69\xf1\xce\x34\x0d\x59\xbc\x9e\x14\xe2\x8d\x66\xfb\x04\xb0\x5a\xe1\x9a\xf6\x1b\xb2\x3b\x55\x11\x5a\xe2\xd1\x6a\x87\x12\xb5\x54\x3b\x5a\xa2\x63\xc9\xd4\x91\x73\xa8\xfa\xa1\xa3\x9e\x34\x4b\x56\x46\xa3\xd9\x62\x12\x09\xd8\x8e\xba\x9a\x55\x29\x4a\x1c\x1e\x84\xf7\x6f\xcd\x5a\xf6\x84\xe2\x57\x5e\x9c\x85\x10\x67\x64\xd1\x43\xd6\x99\x06\xff\xfb\x1f\xd3\x79\xd6\xb4\x2f\xca\x43\x50\x6c\x88\x6f\x8d\xed\x25\x33\xd9\xe2\x2a\xad\xbf\xdf\x7c\x5c\x1f\xa3\x3e\x94\x90\x25\xa0\x43\x05\xf1\x55\x71\x7b\xab\xa8\xab\x8b\xdc\x4d\xfb\xe5\xcb\xe8\xc7\x67\x73\x67\xf6\x64\xcf\x4f\x91\x97\x00\xd9\x44\x8b\x17\x93\xd2\xcc\x07\x08\x00\xfc\x34\xd0\x5f\x53\xd1\xb1\x1d\x2b\xf6\xb1\x1b\xe2\x8b\x3e\x7a\x46\xf5\x9f\xed\x88\x1b\x78\xbf\x57\xdc\xe2\x82\x29\xba\x22\x30\x04\xc8\xbc\xb7\x52\x37\x84\x0b\x15\x63\x0b\xa6\xa3\xfa\x03\x71\x6b\x6a\x17\x93\x32\xef\x51\x6d\x71\xa1\xc4\x27\xfa\x31\x92\xe3\x0d\x5b\x92\x7d\x2c\x80\xb3\x71\xe8\x52\xe1\x66\x0c\xf3\x7a\x27\x18\x25\x7a\x9f\x22\x85\x9b\x8a\xcd\x3b\xfa\x5c\xf7\xed\x37\xde\x1c\xab\x44\xb2\xd6\xc4\x66\xe3\xd9\x48\xd6\x6b\xd5\x9d\x2c\x25\x1a\xea\x1c\x1d\x91\xdc\x60\xb4\xa3\x17\x65\x52\x1a\xaf\x4f\xae\x68\x32\x2e\x84\x78\xe3\xff\x11\xef\xcb\xa0\x55\xfc\x88\xe9\xc9\x10\xaf\xa7\xef\x12\x2f\xf3\x96\x58\x9c\xaf\x4c\x7e\x47\x2b\x0e\x30\xe5\x73\x98\xf8\x9a\x58\x72\x03\x5e\x50\x5e\xa2\xbf\x8a\xa2\xe5\x45\x13\x74\x9d\xee\x3c\xe9\x3a\x04\xf0\xfe\x06\xa7\xbf\x9f\x01\x00\x00\xff\xff\xc5\x90\xf0\xc5\x20\x05\x00\x00")

func handlersHandlersGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGoTpl,
		"handlers/handlers.go.tpl",
	)
}

func handlersHandlersGoTpl() (*asset, error) {
	bytes, err := handlersHandlersGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.go.tpl", size: 1312, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x0, 0xb5, 0xc3, 0x96, 0xb1, 0xf7, 0x54, 0xe5, 0x4d, 0x90, 0x66, 0x21, 0xf, 0x70, 0x79, 0x62, 0xd7, 0xc9, 0x6d, 0x4e, 0xd1, 0xd7, 0xa2, 0x8d, 0x4a, 0xa2, 0xee, 0x13, 0x88, 0x32, 0x75, 0xdb}}
	return a, nil
}

var _handlersHandlersMethodsGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xc1\x4e\xf3\x30\x10\x84\xcf\xcd\x53\xcc\x21\xfa\x95\xfc\x0a\x7e\x00\x24\x4e\x1c\xb8\x00\x07\xca\x1d\x85\x64\x4b\x2d\xb5\x76\x58\x3b\x6d\xa5\xd5\xbe\x3b\x4a\x9d\x06\x4a\x95\x5b\x25\xf6\x62\x7b\x47\xb3\xf6\x37\x72\x26\x82\xbd\x8d\x6b\xe4\x91\x70\x7b\x07\xa3\x9a\x01\x80\x08\xd7\xee\x83\x90\xdb\x63\xf7\x89\xe2\xda\xb7\x41\x35\x5b\x2c\x44\x60\x57\xc8\xad\x79\xa1\xcf\x9e\x42\x5c\x46\xa6\x7a\x8b\xd1\x78\xaa\x55\xef\x1a\x14\x01\x22\xaf\xfe\xd1\xef\x89\x87\x1b\xcc\x92\x78\x67\x1b\x7a\xae\xb7\xa4\x3a\x1e\x4a\x88\x98\xd4\x29\x42\x9a\xd5\xbd\x1b\x91\x07\x3f\x34\x2f\x6d\x6f\x93\x64\xbe\xe7\x10\x97\x20\x66\xcf\x90\xb3\x67\x0c\xc5\x14\x7b\x76\x70\x76\x73\x26\x8d\x2c\xb4\x09\x34\x01\x85\xce\xbb\x40\xd7\x24\xb2\x0e\xff\x7f\xe2\x9c\x52\x53\xad\xf0\x57\xb4\x57\x01\x6b\xe2\x01\x8d\x77\x91\x0e\xd1\xdc\xa7\xb5\xc2\x3c\x6d\x89\xe2\xb7\x92\xc2\x1e\x82\x38\xb2\x94\x97\x2c\xbb\x9a\xc1\x14\x3a\xcc\x38\xe7\xe0\xff\x0d\xa6\x6a\x36\x03\xd7\x62\xfa\xe6\xe4\x5a\xd5\x4c\xe4\x06\x69\xf7\x15\x00\x00\xff\xff\x66\x64\x40\x3b\x11\x03\x00\x00")

func handlersHandlersMethodsGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersMethodsGoTpl,
		"handlers/handlers.methods.go.tpl",
	)
}

func handlersHandlersMethodsGoTpl() (*asset, error) {
	bytes, err := handlersHandlersMethodsGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.methods.go.tpl", size: 785, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x2c, 0x57, 0x30, 0xb3, 0xdb, 0xb5, 0x5a, 0x84, 0x38, 0x24, 0x7c, 0x45, 0x1c, 0x2, 0x1e, 0x1d, 0xec, 0x1, 0xa6, 0x6a, 0xba, 0xc4, 0x6d, 0x9c, 0x2, 0x42, 0xf3, 0x4e, 0x1, 0xb6, 0x47}}
	return a, nil
}

var _handlersHooksGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xd1\xaa\xe2\x30\x10\x86\xaf\x33\x4f\x31\x14\x16\x5a\xb0\x2d\x7b\xbb\xb8\x57\x22\xbb\xbd\x38\x22\x47\x5f\x60\x88\x93\xa6\xd8\x26\x32\x99\x2a\x22\x7d\xf7\x43\xad\x07\x8e\x37\x21\x5f\x86\x3f\xff\x97\x5c\xc8\x9e\xa9\x65\xf4\x14\x4e\x3d\x4b\x02\xe8\x86\x4b\x14\xc5\x1c\x4c\xe6\x06\xcd\xc0\x64\x8f\x47\xd5\x3c\x0f\xf7\xa4\x1e\xcb\x69\xc2\x3a\x5d\xed\x3c\x89\x69\x59\xeb\xd4\xb5\x81\xfa\x19\xd2\x3d\x59\xea\xfb\x0c\x0a\x00\x37\x06\x8b\x07\xd6\x4d\x0c\xae\x6b\x73\xeb\x5a\x4c\x57\x5b\x2d\x58\xfc\xd8\xe3\x03\x8c\xb0\x8e\x12\xd0\xba\x16\xa6\x57\xb4\x09\xca\x22\xe3\x45\xff\x2f\x76\x39\x8b\x6c\x3c\x05\xb4\x9e\xc2\xba\x44\x16\x89\x52\xcc\x61\x8b\x7f\xfe\xe2\x40\x67\xce\xe7\x11\xc6\x54\x1d\x9e\x46\x2b\xfc\x5d\x80\x59\xec\xaa\x5d\xd4\xce\xdd\x73\xbb\xc2\x97\x64\x75\x68\xfe\x35\xbb\xe3\x1b\x1f\xb7\x9f\x1f\x05\x18\x65\x19\xba\x40\xca\xdb\xb9\x63\xbe\xdd\x0d\x5a\x3d\xc1\xe5\xd9\xaf\x94\xad\x70\x5d\xda\x02\xc0\xd4\x35\xee\x7b\xb2\x8c\x37\x4f\xca\x57\x16\x4c\x7e\xd4\x53\xbc\x85\xe5\x53\xbb\xd0\xe2\x3d\x8e\x78\xa3\xa0\xe8\x59\x18\xc0\x7c\xbf\x63\x5d\xe2\x7b\x11\x4c\xf0\x15\x00\x00\xff\xff\xf0\x19\x98\x3b\x92\x01\x00\x00")

func handlersHooksGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGoTpl,
		"handlers/hooks.go.tpl",
	)
}

func handlersHooksGoTpl() (*asset, error) {
	bytes, err := handlersHooksGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.go.tpl", size: 402, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x31, 0xa9, 0x1c, 0x49, 0xec, 0xf0, 0xf8, 0xcb, 0xac, 0xec, 0x63, 0x6a, 0x23, 0xb0, 0xab, 0x33, 0x9f, 0x6b, 0xe7, 0xda, 0xf3, 0xec, 0xc1, 0xf1, 0x32, 0xf6, 0x58, 0xc7, 0x12, 0x38, 0x33}}
	return a, nil
}

var _handlersMiddlewaresGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x4d\x6f\xdc\x36\x10\x3d\xaf\x7e\xc5\x44\x97\x4a\xc5\x5a\xca\x39\x85\x81\xb6\x86\x13\x07\x70\x12\x23\x76\x90\x02\x41\x50\x73\xc5\x91\x44\x98\x22\x15\x72\xe4\xf5\xc2\xd8\xff\x5e\x0c\x45\xad\x25\xdb\x4d\x52\xf4\xb4\x5a\x92\xf3\xe6\xcd\x9b\x0f\xb2\x17\xd5\x8d\x68\x10\x5a\x61\xa4\x46\xe7\x93\x44\x75\xbd\x75\x04\x59\xb2\x4a\x2b\x6b\x08\xef\x28\x4d\x56\xe9\xfd\x7d\xf1\x36\x6c\x5c\x08\x6a\xe1\x68\xbf\x87\xd2\xdf\x56\x69\xb2\xea\x37\xc0\x9b\x17\x7f\x2e\xb7\xd9\xc6\x20\x95\x83\xd3\xfc\xe9\xc9\x29\xd3\xf8\x34\x49\x56\x69\xa3\xa8\x1d\x36\x45\x65\xbb\xb2\xb1\xb6\xd1\x58\x0e\x83\x92\xe9\x72\xc7\x28\xa5\x1a\x6b\xcb\x56\x6c\x6f\xca\x4e\x49\xa9\x71\x2b\x1c\x3e\x3a\xe5\x95\x1b\x7a\x8f\xa6\xd4\xb6\x71\x83\x9f\x9c\xb6\x44\x7d\x9a\xe4\x49\x52\x96\xf0\xd9\x89\xfe\xd4\xc8\xde\x2a\x43\x1e\x44\x55\x61\x4f\x1e\xa8\x45\xf0\xe8\x6e\x55\x85\xbf\x78\x40\x43\xca\x21\x54\x56\x6b\xac\x48\x59\x03\xb6\x06\x9c\x8c\xd6\xe0\x2d\x50\x2b\x08\x04\x03\x7a\x24\xde\x7e\xe0\xe4\xa1\x12\x06\x36\x08\x5b\x27\xfa\x1e\x25\x08\x67\x07\x23\x01\x6f\xd1\xed\x66\xe7\x20\xc3\xa2\x29\xd6\x81\x83\xf7\x0c\xa5\x6d\xd3\x28\xd3\x80\x30\x12\x94\xf1\xe4\x86\x0e\x0d\x09\x66\x90\xaf\xc3\xaa\xa5\x16\x9d\x3f\x20\x7b\x0c\x04\x6f\x51\xef\x26\x2f\xde\x76\xc8\x58\xf8\x10\xa3\x91\x60\x2c\x4d\xb6\xd1\xeb\xc3\xbe\xc3\x6f\x83\x72\xc1\xef\x40\x2d\xc7\x5e\x09\x62\xda\x81\x57\x5e\x30\xda\x7b\x4b\x38\xc6\xcc\x4a\xd5\xca\x08\x3d\x8f\x64\xe2\xb3\x55\x5a\x73\xe4\x7c\xc8\x0e\x84\xae\xb3\x9e\x66\x07\x19\x2a\x53\x05\x16\x20\xfa\x5e\x2b\x94\x50\x2b\xe7\x29\x4f\xea\xc1\x54\xcb\xd4\x64\xca\x80\xbf\xad\x8a\xc3\x42\xbe\xfc\x0b\xf7\x49\xb2\x2a\x4b\xb8\x10\xde\x83\x98\x93\xd9\xd9\x01\xb6\xc2\xd0\xc1\x07\xd9\xa8\xfd\x14\x73\x11\x2c\x6d\xcf\xc2\x0a\xad\x77\xd0\x33\x88\x32\x33\x51\x36\x3b\x30\xa2\x8b\x31\x1f\x10\xc9\x72\x74\x78\x57\xe9\x41\xa2\x0c\x28\xac\x66\xf8\x50\xa6\xe0\x00\xfe\xd0\xfa\xf4\x8e\x8b\x2a\x63\x35\xdf\x1d\x68\xad\x21\xbd\x24\x41\x83\x4f\xd7\x90\x5e\x28\xd3\xa4\x79\xb2\x7a\x62\xf3\x10\x46\x71\x22\xa8\x6a\x2f\x84\x51\x55\x3e\x8b\x54\x19\x10\x41\x88\x73\xb1\x41\x8d\xf2\xdd\x7f\x8f\xfb\xaa\x45\x8f\x8b\x7a\x6d\x90\x82\x04\x6c\xd3\xe2\x4c\x85\x20\x81\x08\xed\xa1\xdc\x98\x2b\x10\xae\x09\x65\x09\xdb\x16\xcd\xe4\x6b\x42\x56\x87\xe2\x1f\xfc\xc8\x60\xeb\x14\x21\x34\x68\xd0\xa9\x0a\x3a\x24\xfe\x69\x04\xd7\x22\x97\xdc\x9c\x46\xd0\xba\x12\x26\x60\x39\x0c\x63\x67\xce\x67\xa4\x53\x5b\x07\xb5\x43\x1c\x5d\xfe\x78\x44\x94\x87\xe8\x1b\x1b\x8c\x85\x01\xbc\x13\x5d\xaf\xf1\x71\xe2\xa2\xa6\x31\x17\xe8\x9c\x75\x27\x76\x30\x84\x2e\xf3\x24\xc8\xcb\xf8\x2f\x7f\x2e\x99\x01\xeb\xcc\x6e\x39\x68\x56\x65\xb7\xac\x4a\x5e\x05\xaf\x4c\xa3\xf1\x51\x3e\x94\x29\x4e\x47\x3e\x53\x71\xc3\x31\x2c\x8b\x27\x7b\x7a\x26\x4f\x12\x00\x80\xb2\x84\x4b\xdb\x2d\xd3\x49\x16\x54\xd7\x3b\x7b\x3b\x36\xe2\x34\x55\x6c\x1d\x5a\x1d\x3d\xf9\xc9\xf4\x93\x47\xb8\x9e\xd5\xdc\x1b\xa4\x73\xdb\x34\xe8\xae\xc7\x52\x37\x58\x2b\x82\xda\xd9\x0e\x14\xcd\xcb\x75\xa9\xd4\x0c\x61\xa2\x77\x3e\x3a\xcd\x46\xb8\x35\x18\xa5\xf3\xfc\xa7\x10\x46\x8b\x2b\x7b\x32\x5e\x36\x11\x61\x69\xfc\x59\x51\x7b\x46\xd4\x7f\x08\x2d\xfc\x43\x8c\xb3\xab\xab\x8b\x03\x13\x1e\x35\x99\x83\x5f\xf9\x52\x28\x3e\x8e\x82\xe4\x30\x5e\x18\xc5\x6b\x85\x5a\xf2\x6c\x59\xad\xea\xf1\xf3\xd5\xf1\x72\x8f\xb7\x56\x69\x87\xd4\x5a\x99\xbe\x02\x57\xbc\x0b\x9f\xeb\xb0\xcc\xb7\xdb\x2b\xd6\xd6\x15\x9f\x3e\x9e\x17\x97\xe1\x96\xcb\x72\xde\xdc\x27\xc9\x8a\xb3\x1d\xd3\x18\x2a\x31\xa6\xe3\x68\x23\x42\xb3\x38\x51\x29\xd3\x24\xab\x95\xaa\x41\x49\xf6\xec\x8a\x33\x14\x12\x1d\x27\x26\x4b\xff\x3a\x8a\x74\x8f\xde\xca\x34\xff\x8d\xcf\xbc\x38\x86\x34\x0d\x74\x23\xdf\x2f\x69\x04\xfd\x5b\xc9\xf4\x2b\x1c\x83\x92\xec\x1c\x50\x7b\xfc\xee\x39\xbe\x73\x8b\xf7\xb8\x9d\x38\xff\x0b\x65\x8f\xde\x2b\x6b\x7e\x9e\xf2\x65\x34\xf8\x1e\xe5\x08\xba\xa4\xcc\xce\x1d\xd2\xe0\x0c\x8c\xe7\x92\xd5\x3e\xe7\x36\x8b\x8b\xca\x24\xfb\xe4\xe1\xe2\xb8\x1c\x6f\x6f\xbe\x36\xfa\x4d\x71\x7f\x5f\xc4\x85\xe2\xbd\xe8\x70\xbf\xe7\x7f\xe8\xf2\xef\xec\x31\xa5\x05\x34\x3f\x16\x70\x73\x69\xab\x1b\xa4\x37\x83\x70\x12\x7a\x67\x09\xab\xf8\x5c\xd8\x4e\x7b\x0f\xed\xcc\xa3\x15\x2a\x6b\x4c\x7c\x35\x28\x0f\xd6\xe8\x1d\x0c\x7d\xe3\x84\x44\x09\xaa\x0e\xa6\x0d\xa3\x31\x3e\xb3\x0f\x27\xa5\x45\x1f\x2e\xe9\x38\xf6\x78\x46\xf1\xf8\x19\x21\x47\x5a\x28\x21\x3e\xc0\x18\xf8\x56\x68\x25\x43\x4a\x42\x8f\xab\x1a\x49\x75\xc8\x4d\x4e\x0b\x12\xe1\xfa\xbe\x8e\x6f\x9b\x6b\x68\xc7\x69\x0e\xb4\xeb\x11\xae\xef\xef\xaf\xec\xb9\xdd\xa2\x83\x67\x24\x09\xe7\xf9\xf1\x10\x27\x7a\x25\x3c\x15\x51\xf0\x85\x2e\x59\x45\x77\x13\xb5\x22\xb6\xdc\x7a\x7a\x4e\x8d\x8a\xbf\xb1\x8c\xfb\x9c\x17\x6e\xc9\x27\xdd\x98\x3d\x41\x0b\x6a\xe4\xb3\x1c\x55\x74\x17\xa6\xca\xe3\x4c\x7d\x70\xaa\x51\xe6\xa4\xc5\xea\x06\x1d\x54\xfc\x3b\x46\x6c\xc3\x06\xb4\xa1\x3a\x27\x9d\x62\x13\xc0\x06\x6b\xeb\x30\x26\x8a\x87\xe5\x33\x22\xfe\xee\x11\x61\xf1\x58\x75\x4a\x6b\x51\x6e\x71\xe3\xc7\x42\xe0\x6c\x74\x8c\x23\x91\x84\xd2\xfe\x91\x58\x0b\x6a\xd9\xff\xd1\x67\x63\xad\x66\x2d\x62\x4c\xb3\xb6\xfb\x92\x8e\x5e\xd2\xaf\x09\xf7\xa4\x46\x93\x8d\x87\x72\x38\x3e\x86\x97\xa1\xef\xa2\x82\xe4\x06\x4c\x56\xfb\x64\x35\x04\x79\x19\x65\x70\xba\xb8\x10\xce\x63\x34\xfa\xf2\xf2\x6b\x1e\x70\x78\xff\xc5\x31\xeb\x3d\x47\xa8\x85\xf6\x23\x44\x5c\x88\xcf\xfa\xe2\xf4\xdb\x20\xf4\x6b\xab\x65\x36\x14\x67\xd6\xd3\x9a\xf9\x59\x7e\xe8\xed\x93\x7f\x02\x00\x00\xff\xff\xd9\xee\xaf\x6d\x62\x0c\x00\x00")

func handlersMiddlewaresGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersMiddlewaresGoTpl,
		"handlers/middlewares.go.tpl",
	)
}

func handlersMiddlewaresGoTpl() (*asset, error) {
	bytes, err := handlersMiddlewaresGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/middlewares.go.tpl", size: 3170, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb3, 0x35, 0xee, 0x15, 0xfa, 0xb6, 0xcd, 0xf9, 0x83, 0x9c, 0xb3, 0xd, 0x9f, 0x8d, 0xd4, 0xba, 0x5f, 0x28, 0x57, 0x79, 0xc, 0xe3, 0xd1, 0xe4, 0x1a, 0x4a, 0x16, 0x6c, 0xf0, 0x40, 0xb, 0xfc}}
	return a, nil
}

var _svcClientGrpcClientGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4f\x6f\xdb\x3a\x12\x3f\x8b\x9f\x62\xd6\x08\x16\x52\xa0\xd0\xf7\x2e\x7c\xa9\xd3\x2d\xba\xd8\xa6\x46\x1a\xf4\x1d\x8a\xa2\x60\xa8\x91\x4c\x58\x26\x55\x92\xb6\x13\x08\xfa\xee\x0f\x43\x52\x8e\x9c\x3a\x7e\x3d\x18\x16\x39\xc3\xf9\xf3\xfb\xcd\x70\x38\x9f\xc3\xd2\x54\x08\x0d\x6a\xb4\xc2\x63\x05\x8f\xcf\xb0\x16\x87\x0d\x87\xdb\x2f\x70\xf7\xe5\x01\x3e\xdc\x7e\x7a\xe0\x6c\x3e\x87\x7b\xb4\x3b\xad\x95\x6e\x82\x1c\x0e\xaa\x6d\xc1\xec\xd1\x1e\xac\xf2\x08\x7e\xad\x1c\xd4\xaa\xc5\xa0\xfb\x0d\xad\x53\x46\xbf\x83\xbe\xe7\xe9\x7b\x18\x26\x02\xb8\x15\x1e\xa7\x52\x5a\x0f\x03\x23\x95\x95\x90\x1b\xd1\x20\x34\xb6\x93\xd0\x59\xb3\x57\x15\x3a\x10\xd0\xdc\xaf\x96\x20\x5b\x85\xda\x43\x6d\x2c\xf8\x35\x92\x81\xaf\x68\xf7\x4a\x22\xbf\x13\x5b\x1c\x06\x70\x69\xc9\xba\x89\x19\xc6\xd4\xb6\x33\xd6\x43\xce\xb2\x99\x34\xda\xe3\x93\x9f\xb1\x6c\xd6\x18\xd3\xb4\xc8\x1b\xd3\x0a\xdd\x70\x63\x9b\x39\x69\xbf\x2d\x99\x6f\xd1\x8b\x4a\x78\x11\x54\x94\x5f\xef\x1e\xb9\x34\xdb\x79\xb7\x69\xe6\x68\xad\xb1\x6e\xc6\x4e\x25\x8d\xb9\xd9\x28\x3f\xa7\x1f\xea\xaa\x33\x4a\x93\x63\xb2\xe5\xad\xd0\x2e\x04\xf5\x86\xfe\x51\x21\x05\xc5\xb2\xf9\x1c\x1e\x08\xe6\x94\x32\xcb\x66\x7d\xcf\x3f\x85\xcc\x56\xc2\xaf\xe1\x66\x18\x60\xee\xf6\x94\x40\xf7\x08\x24\x5c\xbd\x3f\x15\xcf\x58\x11\x30\xbe\xc3\x03\x58\xf4\x3b\xab\x1d\x08\x3d\x82\x06\x8f\x42\x6e\x62\x09\x9c\xc2\x2d\x8d\xd6\x28\xbd\x32\x9a\xc3\x27\x0f\xca\x11\xf8\x64\xc7\xa2\xeb\x8c\x76\xea\x51\xb5\xca\x3f\x83\xa9\x03\x2b\x52\xb4\x2d\x5a\xf0\x06\x2a\x25\xda\x12\x84\xae\xa0\x15\x1e\x2d\xc8\xd6\x38\x2c\xa3\xd2\x8b\x4d\x56\xef\xb4\xa4\x98\x72\xda\x84\x6b\xca\x97\x2f\x83\xeb\xa5\xd1\xba\x04\xd3\x91\x9e\x03\xce\xd3\xf6\x97\xb0\x51\x40\xde\x3d\xf2\xdf\x6a\x80\x56\x68\x4b\x08\x8c\x14\xd0\xb3\x6c\x2f\x2c\x48\x99\xb2\x59\x1a\x5d\xab\x86\xb1\x8c\x8a\xe8\x67\x09\x35\xbc\x5b\x80\x15\xba\xc1\xa3\x9f\x9e\x65\x19\x5a\x4b\x82\x3a\xff\xb7\x94\x05\xcb\x32\x55\x93\x41\xf8\xd7\x02\xb4\x6a\x83\x46\x16\x11\xa4\x75\x72\xe6\xf8\x5f\x56\x74\x39\x5a\x5b\xc2\x4c\x0a\xad\x8d\x07\xd1\x75\xed\x73\xb2\x3c\x23\x43\x03\xcb\x06\xc6\x32\x39\x49\xc4\x91\xa7\xef\x3f\x4e\xca\xe2\x24\x53\x72\x77\x4e\xfa\x1e\x6b\x63\x31\xa7\x60\x52\x59\x7f\x13\xed\x0e\xdd\x83\xf9\x78\xbf\x5a\x7e\x4e\xd5\x9a\x4b\xc9\xd7\x28\x2a\xb4\xae\x28\x4a\x72\x9f\xf5\xfd\x0d\x1c\x94\x5f\xc3\x95\x47\x72\xce\x87\x81\x65\x93\xdd\x6e\xd3\x10\x98\x24\xba\xf2\xc8\x53\x4f\x46\x7c\xc9\x1b\x69\x46\xcc\xae\xd4\xa8\x34\xb2\xf0\x19\xfd\xda\x54\x2e\x2a\x06\xec\xfb\xfe\xc1\xfc\xdf\x1c\xd0\xc2\x95\x4a\x24\x7d\x48\xdd\x00\x63\x5b\xf0\x71\x27\x9c\x0a\xf8\x92\x9b\xb7\x0f\x2e\xe0\x14\x91\x3b\x3c\x44\x50\xf2\x78\x96\x10\xd1\x65\xfa\x9e\xf5\xfd\x98\xd3\x30\xf0\xbe\x9f\xc6\x1b\x37\x67\x53\x55\xf5\x7a\xf3\x83\x96\xa6\x42\x02\x75\x22\xbd\xc7\x5f\x3b\x74\x7e\xd4\xb9\xc5\xb3\x3a\xa1\x43\x70\x54\x0a\x05\xfb\xd1\x04\x70\xaf\x14\x1f\xc5\xc3\xd0\x0f\xa3\xca\x49\x65\x70\xce\xd3\x7e\x71\x44\x28\x2f\xc2\x4e\x22\x02\x75\x95\xc8\x4b\x5f\xe3\x07\x03\x80\x23\xbc\xa1\xc4\xdc\x5e\x12\x4c\xa3\x1d\x47\x86\xfa\x7e\xca\xe3\x6b\x12\xe9\xd2\xa0\x66\x18\x4f\xf0\x49\x6a\x13\x26\x2e\xf0\x34\x89\x67\x6c\x98\xa3\xb5\x92\x7a\x87\xc5\x6b\x9f\x70\x83\x48\x20\x44\x24\xd9\xe5\xd0\xe2\x40\xb9\x08\x3a\xdd\x54\x02\x4e\x2f\x52\x1e\x4f\x8c\x2a\xff\xa5\xab\xc7\xaf\x45\xb8\xe4\xf6\x68\xbd\x03\x41\x76\xc3\xf5\x77\x26\x2d\xb0\x48\xfd\xec\x0d\x08\xd8\x39\xb4\x37\x95\xd9\x0a\xa5\xdf\x50\x8d\x3e\x38\xac\xac\xda\x0a\xab\xda\x67\x3a\x53\xef\x5a\x50\x1a\x44\xba\x8f\xd2\xf5\x77\x31\x91\xfc\x27\xa4\xfe\xe6\xcb\xf8\x5f\x86\xea\xbf\x0f\xc1\x28\xed\xd1\xd6\x42\x62\x3f\x14\x90\x4f\x56\xd3\x3b\x30\xc6\xfd\x6e\xf1\x72\x8e\xe7\xd7\x6f\x56\x63\x71\x24\x2b\x9c\x1b\x89\x3a\x52\xf9\x8a\xb0\xd8\x1e\x7f\x44\xd8\xa5\x4e\x3a\xcb\x57\x3c\x90\x34\xde\xa2\xeb\x9f\xa9\x88\x0e\x02\x6f\x17\xb8\x0d\x5a\x7f\xc4\xd7\xa5\x3c\xce\xd1\x35\x46\xf0\x87\x64\xfd\x0a\x53\x29\xc5\x73\x86\xa8\x20\x38\xe5\xe9\xd7\x6f\x2c\x31\xff\xdc\xe1\xc9\xd8\x03\xe7\xed\x4e\x7a\xf2\x91\x26\x02\x7c\xff\xe1\xbc\x55\xba\x49\x7d\x38\x1d\x3b\x91\x0f\x4a\x37\xac\x02\xee\x5b\x53\xa9\x5a\xa1\x8b\x43\xfc\xf8\x3e\xa0\x91\x1a\xbc\x9d\x9c\xa7\xa3\xf9\xf5\x34\x80\x22\x66\xc9\x22\x88\x4b\xff\x34\x0e\xac\xaf\xa8\xab\x7c\x83\xcf\x61\xca\xc7\x88\x8a\x53\x63\xfd\x31\xd7\x60\xd6\xc0\x39\xc3\x61\x32\x9b\x71\xdc\xc1\x02\xc8\x24\x9b\xce\x6a\x9a\x7f\x43\xf2\x7f\x69\x68\x86\x58\x46\x70\x0a\x38\x37\x7e\xa7\x45\xf9\x2a\x3a\xe9\x9f\x7e\xaf\x81\x6d\x05\xd7\xe3\x13\x92\x7f\xbe\x2d\x5e\x6b\x84\xe0\x69\x60\x76\x42\x4d\x99\xc9\xc6\xb7\xca\xe6\xe5\xad\x12\xc2\x0b\x63\x52\xd5\xb0\x2f\xc1\x04\x99\xf4\x4f\x3c\x64\x93\x6f\x0a\x9e\xa7\xd8\xff\x43\xc2\x38\x51\xa3\xe1\x05\xbd\x4a\x08\xef\xb0\x2c\x61\x53\xc2\x3e\xcc\x94\x21\xbc\x4f\xe2\x6b\x27\xaa\x4e\xdf\x3b\xd7\xdb\x0a\x16\x70\x4c\xe0\x7f\x46\xe9\xfc\x7a\x5b\x95\x2f\x5b\x2b\x3a\x13\xad\x72\xce\x8b\x62\x34\x97\x90\x91\xfe\x29\xa2\xff\x77\x00\x00\x00\xff\xff\x8b\x8c\x74\x6f\x77\x0c\x00\x00")

func svcClientGrpcClientGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGoTpl,
		"svc/client/grpc/client.go.tpl",
	)
}

func svcClientGrpcClientGoTpl() (*asset, error) {
	bytes, err := svcClientGrpcClientGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.go.tpl", size: 3191, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x9c, 0x1e, 0xf9, 0xb2, 0x33, 0x92, 0xf4, 0x36, 0x92, 0x5e, 0xbc, 0x90, 0xf6, 0xad, 0x67, 0x85, 0xc4, 0x65, 0xd0, 0x49, 0x51, 0x6d, 0x79, 0xcc, 0xd1, 0xa4, 0x63, 0xb, 0xf3, 0x0, 0x2e}}
	return a, nil
}

var _svcClientHttpClientGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\xbd\xa7\xf0\xdc\xc1\x3e\x04\x4b\x47\x24\x72\x81\x28\x7c\x5a\x84\x49\x22\x63\x89\xc1\xf2\xdd\x91\x50\xf7\xf7\x22\x64\xa5\x1b\x40\x47\xfd\xbe\x64\x47\x87\x55\x1f\x26\x87\xfb\x14\xc7\x7b\x6a\x75\x7c\xb8\xe9\x13\xdd\x79\x1f\xf4\x18\x46\x6d\xdc\x41\xab\x64\x2e\x11\xad\xaa\x12\x6f\xa5\x5c\x37\xe8\x84\xf1\xe5\x4f\xcb\x59\x89\x33\x97\x5f\x00\x00\x00\xff\xff\x39\x4e\x2a\xed\x65\x00\x00\x00")

func svcClientHttpClientGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGoTpl,
		"svc/client/http/client.go.tpl",
	)
}

func svcClientHttpClientGoTpl() (*asset, error) {
	bytes, err := svcClientHttpClientGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.go.tpl", size: 101, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x66, 0xd0, 0xaa, 0x0, 0x46, 0x7, 0x64, 0xd2, 0x77, 0xb, 0xea, 0x1, 0x50, 0x47, 0x83, 0x41, 0xe1, 0xc3, 0xab, 0x25, 0x16, 0xe, 0x0, 0x6a, 0xbe, 0x3c, 0x5d, 0xbc, 0x12, 0x23, 0xfc, 0x19}}
	return a, nil
}

var _svcConfigGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xc1\x4a\x43\x41\x0c\x45\xd7\x2f\x5f\x11\xba\xd2\x85\x9d\x6f\x90\xaa\x75\x59\x4a\x7f\x60\x3a\x93\x37\x2f\xd4\x66\xc6\x24\x53\x10\xf1\xdf\x65\x90\xb7\x52\x30\x90\x45\xc8\xb9\xf7\x72\x5b\x4c\x97\x58\x08\xed\x96\x00\xf8\xda\xaa\x3a\xde\xc1\xb4\x29\xec\x4b\x3f\x6f\x53\xbd\x86\x52\x1f\x2e\xec\x61\xac\x6b\x14\x1b\x4c\x58\xdc\xdb\x06\xee\x01\x42\xc0\x5d\x95\x99\x0b\xa6\x2a\x1e\x59\x0c\x7d\x21\x54\x7a\xef\xac\x94\x71\x66\x7a\xcb\x86\x73\x55\xd4\x2e\xc2\x52\x30\xa2\x91\xde\x48\xc1\x3f\x1a\xad\x6a\x73\xed\xc9\xf1\x13\xa6\xd7\xd3\xe9\xf0\x98\xb3\xe2\xef\x31\x57\x96\x02\xd3\x13\x9d\x7b\xf9\x9b\x59\x91\xfd\xf1\xb0\xfb\xc7\x65\x4f\x42\xca\x69\xe4\x1d\xc9\x5a\x15\xa3\x67\x49\x35\x93\xe2\xa8\xb7\xfd\x39\xd6\xd7\x4b\x97\x04\x5f\xf0\x1d\x00\x00\xff\xff\x22\x60\xfa\x2e\x31\x01\x00\x00")

func svcConfigGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcConfigGoTpl,
		"svc/config.go.tpl",
	)
}

func svcConfigGoTpl() (*asset, error) {
	bytes, err := svcConfigGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/config.go.tpl", size: 305, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0x42, 0xb6, 0x56, 0xec, 0x8d, 0xd5, 0xc3, 0xa4, 0xd1, 0xd3, 0xb3, 0xd9, 0x90, 0x88, 0x46, 0x5d, 0x3, 0x9a, 0x74, 0x97, 0x1e, 0xd8, 0x3c, 0x96, 0xcb, 0x60, 0x8d, 0x98, 0xf, 0x80, 0xc3}}
	return a, nil
}

var _svcEndpointsGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x4b\x8f\xdb\x46\x12\x3e\x8b\xbf\xa2\x22\x78\x61\xc9\xa0\x39\xd9\xeb\x18\x73\xd8\xb5\x9d\xd8\xc0\xfa\x81\x8c\xb3\x3e\x18\x46\xd0\x22\x4b\x52\x63\xc8\x6e\xa6\xbb\x25\xcd\x2c\xc1\xff\xbe\xa8\x7e\x90\x4d\x91\xd2\xcc\xc4\x48\x16\x0b\xf8\x10\x58\xd3\x8f\xea\xaa\xef\xfb\xaa\xfa\xc1\x5c\x5c\xc0\x4b\x59\x20\x6c\x50\xa0\x62\x06\x0b\x58\xdd\xc1\x96\x1d\x6e\x32\x78\xf5\x01\xde\x7f\xf8\x04\xaf\x5f\xbd\xfd\x94\x25\x17\x17\xf0\x0b\xaa\x9d\x10\x5c\x6c\x6c\x3f\x1c\x78\x59\x82\xdc\xa3\x3a\x28\x6e\x10\xcc\x96\x6b\x58\xf3\x12\xed\xd8\x7f\xa3\xd2\x5c\x8a\x4b\x68\x9a\xcc\xff\x6e\xdb\xa8\x03\x5e\x31\x83\x71\x2f\xfd\xdd\xb6\x49\x52\xb3\xfc\x86\x6d\x10\xf4\x3e\x4f\x68\xfc\xa7\x60\x16\x72\x29\x0c\xe3\x42\x43\x85\x66\x2b\x0b\x0d\x46\x42\xc5\x6e\x10\xb8\x28\xf8\x9e\x17\x3b\x56\x02\x8a\xa2\x96\x5c\x18\x0d\x6b\x25\x2b\xd0\xa8\xf6\x3c\x47\x9d\x92\x25\x85\xbf\xef\x50\x1b\x60\xa2\x00\x85\xba\x96\x42\x23\x98\xbb\x1a\xad\x25\x1a\x4a\x41\x48\x8d\xbd\x95\x14\x98\x86\x03\x96\x25\xfd\x8b\x22\x97\x05\x2a\x4d\x06\xc8\x5e\x81\xfe\xef\xb5\x54\x7e\xa2\xb5\x96\xda\x06\x46\xe0\xac\x41\xee\x14\xe8\x5d\x5d\x4b\x45\xd0\x1a\xc5\x84\xa6\xdf\xb4\x1c\x67\x25\xff\x0f\x33\x5c\x0a\xb2\xb6\x96\xaa\x62\x46\x67\x49\xc2\x2b\x3b\x62\x91\xcc\xe6\xeb\xca\xcc\x93\xd9\x9c\x22\xc7\x5b\xfb\x53\xa0\xb9\xd8\x1a\x53\xcf\x93\x59\x6f\x6c\xbe\xe1\x66\xbb\x5b\x65\xb9\xac\x2e\x36\xf2\xf9\x0d\x37\x17\xf4\x5f\x37\xc0\xcf\x48\x66\x27\x06\x86\x78\x69\x48\xbd\x82\x79\xd3\x64\x1f\xff\xf9\xd6\xba\xf1\x91\x99\x2d\x3c\x6f\xdb\x79\xb2\xb4\x74\xbc\xee\x00\xce\x65\x59\x62\x6e\x74\x88\xd4\x6c\x23\xe0\xc0\x6c\x99\x81\x5c\x56\x35\xc1\xc2\x04\xb0\xa2\x08\x6c\x64\xf0\xd6\x3c\xd5\x64\xac\x42\x26\x0c\x81\xbf\x42\xd8\x69\x2c\x08\x65\x06\x5b\x2c\x6b\x54\xa0\x8d\xda\xe5\x26\xa5\x6e\xbf\xd4\xf4\x4a\x5c\x18\x09\x8c\xcc\x69\x2e\x36\x25\x42\xcd\x14\xab\xd0\xa0\x22\x21\x52\xfb\x5b\x01\xcc\xf1\xab\x52\xe0\xe6\xa9\xa6\xc5\xd6\xbb\xd2\xf2\xb4\xde\x89\x9c\x38\xf0\x2e\x0b\x24\x9a\x24\xc8\xda\x66\x03\x48\x9a\x5b\xa3\x7a\x1e\x16\x24\x83\x2b\xa6\xb9\xce\xe0\x27\xa9\x00\x6f\x59\x55\x97\x98\xc2\x9d\xdc\x41\xc5\x37\x5b\x03\x35\xd3\xa4\x91\x08\x2a\x72\xb0\x5b\xc8\xad\x53\x2b\x59\xec\x72\xb4\x30\x30\x01\x44\x50\xf6\x86\x89\xa2\x24\x1f\x0f\xdc\x6c\x01\x59\xbe\xf5\x52\x87\x45\x58\x7d\x09\x07\xae\xb0\x80\x5d\xed\x8c\xea\x1a\x73\xbe\xe6\x39\xd4\xcc\x6c\x33\x58\xbc\xb5\xfe\x71\x4d\xf6\x57\x6c\x55\xde\x01\x83\x8a\x6b\xe3\xd2\x04\x0a\xd4\x7c\x23\x68\x2a\x17\x7b\x79\x83\x16\xca\x6b\x47\x4b\x97\x56\xd6\x45\x1c\x92\xed\xc8\x20\x13\x01\xc9\x6c\x19\xa3\x9b\x97\x1c\x85\x19\xa2\x1b\x11\xd7\x67\x68\x79\x47\x79\xec\xcc\x61\x71\x8e\x46\xca\x25\x87\x15\x27\x84\x2b\x74\xb2\xea\xfd\xe5\xc2\xa0\x5a\x33\x12\xd4\x34\x13\x64\xac\x5b\x6c\xba\x4a\xec\x68\x31\x18\x26\x4a\xf6\x1e\x0f\x2f\x7d\x3c\xb9\xac\x56\x5c\x58\x9c\x2a\xef\x62\x44\x6c\xea\x6b\x89\xd9\x29\x01\xdc\x2a\x99\x1c\xcc\x59\x59\xa2\x72\x62\xf6\xce\x66\x89\x0d\x67\x04\x68\x43\x09\x97\xfd\x2a\xba\x10\xb1\x68\x9a\x9f\xe5\x7b\x56\x21\x64\x61\x2e\xfd\xd5\xb6\xd7\x16\xf6\x64\x46\x2e\xba\xdf\x1f\x6a\x27\x5c\x00\xa8\x58\xfd\x45\x1b\xc5\xc5\xe6\xeb\x97\xaf\x5d\x38\x59\x3c\xce\xcd\xfc\xc5\x15\xc1\x57\xa1\x76\xc5\x33\xfb\x79\xae\xdb\x8f\xfd\x69\x27\xf2\x30\xd9\x55\xcd\xd7\xa1\x12\x4e\x4e\x76\xbd\x61\x6c\x3f\xdb\xcb\x9b\x1a\xac\xcf\xf1\x6c\x4a\x8e\x85\x05\x3f\xcc\xfb\x4c\x9b\x8a\x4a\xe1\x99\x6f\xb5\xae\x2c\x93\xa4\x69\x14\x13\x1b\x84\x27\x1c\x2e\xaf\x7a\x8c\xde\x39\xf1\xb6\x6d\x32\x6b\x1a\xe0\x6b\xcb\xcc\x42\x48\x03\x4f\x78\x98\x7d\x6d\x14\xb2\x6a\x19\x35\xbb\xa5\x42\x3b\x4d\x9e\x35\xcd\x13\xee\x11\x0f\x6c\xcd\x82\x5e\xb2\xd0\x62\x17\x41\x51\xd0\x94\xa6\x79\x4e\x3f\xdb\x36\x69\x93\x84\xe2\x80\xf7\x78\xe8\x88\x5e\x2c\x23\xd2\x9b\x64\xe6\xc5\xd2\xb5\x35\xc9\x6c\xcc\xe8\xe5\x0c\xec\xce\xb6\x78\x00\xad\xcb\xd4\x5b\x38\x62\xf6\x72\x6c\xe2\x0c\xbf\x91\x95\x21\xc5\x97\x67\xac\x8c\x89\xee\xcc\xc4\x5c\x4f\x45\xf3\x50\xbe\xc9\xa0\x05\x36\xae\x46\x7f\xba\x06\x2c\x8b\x8b\x28\x5d\x97\x10\xc9\x62\x91\x9b\x5b\xf0\x5b\x72\xf6\xd2\xfd\x9b\x52\x69\x7c\x56\xaf\xb2\x2e\x7b\xfb\x25\xdb\x76\x09\x8b\x71\x9f\x5b\xb7\x6d\x53\x40\xa5\xa4\x5a\x92\x3a\x66\xb3\x70\x30\xb1\xad\x14\x1d\x66\x13\x8a\x24\x17\x68\xc9\x25\x4d\xe1\x6b\x3b\xf6\x87\x2b\x10\xbc\x74\x56\x82\xcc\x04\x2f\xad\x21\x6a\x6b\x93\xbe\x3d\xac\x92\x9d\xf1\x6b\x99\xd2\xf4\xc4\x4e\x8c\xd5\xee\xb4\x4e\x84\xbc\xa3\x5d\x25\x66\xc5\xee\x5b\x4f\x0c\x5a\x56\x1c\x0d\x31\x51\x4f\x0c\x4e\x71\xf5\x8d\x64\x39\xb6\xc8\x97\x29\xa0\x34\xd8\x00\xe3\xa5\xe3\x72\xba\x84\x51\x6e\x0f\x11\xb4\x42\x9d\x24\x3c\x1c\x27\xbb\x6d\xa8\x21\x9e\xbb\x83\x65\xd4\xec\xb8\x8c\x59\x26\xf3\xbf\x13\x24\xde\xc8\x14\x0f\x41\x3b\x6e\xfc\xbe\x13\x84\xce\x8e\xb4\x68\x5d\xf1\xc3\xa6\xb4\x30\xa9\x06\xaf\x87\xae\x6f\x1f\xd8\xf6\x1d\x9e\x17\xcf\xfa\x2c\xd0\x1e\xd3\xff\x59\xb1\xfa\x1f\x65\xf9\xfa\x36\xc7\xda\xc0\x41\xb1\x5a\xbb\x43\x4b\x87\xe4\x9a\x63\x59\xd0\x89\xcd\xef\x76\x7d\x25\xb4\x4a\xb1\xbb\xfd\xc4\x31\x34\x7b\xc7\x8b\xa2\xc4\x03\x53\xee\x2e\xf1\xab\x0e\xb7\x0b\x3a\x57\xd7\x75\x79\x47\x9b\x36\x1d\x44\x0c\x19\xaf\xba\xd1\xf6\xa4\x85\x7b\x54\x77\x1d\xad\x94\x97\xb4\x27\x87\xb3\x27\xd9\x73\x85\x93\xce\x22\x69\x74\x14\xc8\x99\xa0\x73\x28\x9d\xde\xb0\xa0\x69\xab\x3b\x10\xc4\x86\x3b\x9f\xe2\x6d\x5e\xee\x0a\x2c\xdc\xc5\x62\x85\xe4\x02\xc5\x5c\x63\x91\x8d\xd0\x58\xf4\x3e\xa5\x30\xbf\x36\xcc\xec\xf4\x3c\x85\xf9\x47\x2e\x36\xf3\x65\x12\xea\xcb\xb3\xa8\xc0\x9c\x9a\x0f\x13\xa8\xa4\xbd\x37\x59\x96\xb9\x92\x6a\x95\xc5\x85\x6f\xbe\xbc\x8a\x77\x57\x07\x7f\xd3\x36\x96\xd4\xe7\x70\x5f\xf5\xfc\xe6\x94\x9c\xcd\x23\x8d\xce\x2f\xa1\x69\x53\x6f\x35\x08\x6a\xd6\x6f\x9b\xb3\x36\x49\x66\x44\xed\x6f\x14\x97\xcd\x0a\xeb\x5f\x17\x23\xb9\xcd\xd7\xd4\x2d\x6f\xa8\x3b\x44\xf9\x05\x6f\xbf\xbe\x80\x1f\xe4\x8d\x13\x7a\xcd\x04\xcf\x17\xeb\xca\x64\xd7\xb5\xe2\xc2\xac\x17\xf3\xd7\xc1\x44\x27\x87\xa7\x7f\xd3\x4f\xa1\x90\xa8\x81\x02\xc0\x5b\xae\xcd\x0b\xd0\x88\xb1\x8a\x3a\x21\xea\x6c\x23\xe7\xe4\xd4\x72\xe9\xea\xe0\xac\xc0\x12\x0d\x2e\x82\x07\xb6\xaf\x0f\x80\x8b\xbc\x77\xbf\xe3\xe2\xaf\x43\x9d\xaf\xad\x0b\x57\x57\x30\xc0\x3f\xd4\x81\xc9\xad\x04\xae\xa2\xd0\x17\x93\x43\x96\x7d\x59\x38\xc9\xa0\x2b\x09\xff\x62\x2b\x2c\xb1\xe8\x95\xea\x1e\x09\x36\x68\x42\x5e\xc5\x77\x37\x97\x5e\x87\x2d\x8a\xae\x57\x46\xa9\xe4\x8d\xb9\x8c\x48\x5d\x05\xf0\x49\xba\x73\x83\xc1\xbd\x3c\x30\xf7\x78\xc1\x73\xba\xc2\x28\x9e\xbb\xbb\x65\xe4\xc3\x96\xe7\x5b\x3b\x55\x93\xf3\x63\x17\xfc\xb9\xdd\xcf\x0e\xb7\x16\xa9\xfc\xa9\x7d\x1c\x95\xdd\x15\x5c\x72\xa5\xe3\x1d\x64\x62\x53\x49\x4e\xc5\xf5\x87\xeb\xe6\xc8\xa9\xd4\xc7\x69\x11\x57\x98\x23\xdf\xbb\xfb\x9d\x0d\xf1\xe8\xda\x9c\xc1\x35\xe2\xa4\x19\xdb\x13\xee\x9d\xc3\x12\x4f\x12\x2f\xd0\x30\x5e\xda\x4b\x62\xc8\x4f\xfb\x7a\xe1\x2f\xb7\xac\xe4\xe6\x2e\x3b\x57\xe0\x06\xd1\xc7\x75\xee\xd1\x98\x7e\xaf\x82\xdf\xab\xe0\x9f\x53\x05\x07\xf3\xd2\xe9\x23\xf8\xc3\x8b\xa2\x17\xfe\x67\x6e\xb6\x6f\x8c\xa9\xdd\xe9\xe3\x4c\xf6\xa3\x30\xea\x8e\x12\x76\xcd\x4b\x2c\xe0\xcd\xe8\xbe\x7f\xbe\x30\x4c\x5f\x13\x1f\x72\x90\x72\x0f\x3b\x20\xfd\x32\xff\xf3\xb3\xd4\x14\x62\x0b\x1d\x05\xf5\xc8\xb3\xd5\xbd\xf6\x4e\x60\xf7\xbd\xd0\xfc\xbf\x15\x9a\x3d\xeb\x65\x7c\xfa\x3d\x8c\xa2\x94\x21\x4a\xcc\x46\xcf\x30\x5f\xb8\xc8\xbf\xbe\x80\x10\x70\x30\x78\x45\xa9\x83\xa2\x58\xc8\x14\x62\xf5\x58\xa7\x01\x4b\x8d\xc7\xe3\xed\xeb\xc7\x29\x3f\x52\xf8\xfb\x32\x1a\xfe\xe5\xc7\xaf\x70\x35\xb0\xeb\xb1\x38\xe5\x20\x5c\x85\x50\x87\x25\x67\xa8\x76\x5f\x69\xa4\xc0\xbf\xa2\xd0\x8c\xd7\x3f\x91\xb7\xa7\xf3\xf5\x68\x7a\xa7\xa8\x70\x42\x78\x40\xde\xda\x1c\x7d\x98\x14\xee\x53\x42\x58\xbe\x97\xc3\x03\xd4\x10\x89\xa1\x1f\x7d\xca\x07\x2b\x99\x01\x48\x8e\xf7\x36\x99\x64\xbe\x73\x28\xa2\xdf\x71\xff\x33\x9a\x31\x93\xee\x96\xef\xbe\xd5\x4c\xaf\x0f\x4c\x6b\x99\x73\xfb\x05\xd0\x72\x4c\x95\x7e\xc3\xf7\x28\xfa\x93\x57\x32\xf1\x30\x36\xb5\xdc\x31\x5b\xcb\x93\x51\xdb\x2a\xba\x0e\x11\x3c\x8e\x01\xff\x72\x11\x89\x3f\x34\xdd\x93\x6f\x3f\x2e\x3d\x54\xd7\xce\xf7\xe1\xcb\x29\x01\xc1\x37\x84\x15\x9c\x79\x30\x05\xf7\x29\xe0\x2c\x34\x93\xe6\xc7\x4a\xf6\xdf\x11\xcf\xad\x66\x95\xec\x50\x39\x7a\xe6\x1d\x08\xc1\x5b\x1a\x0a\xe1\x28\xba\xa0\x04\xa2\xf7\x5c\x7c\xdf\x26\x87\xfb\x62\x5e\xb3\xb2\x5c\xb1\xfc\xe6\x7c\xd0\xe7\xfc\x73\xc2\xf1\x11\x0f\x85\x73\x12\xa2\x63\xe9\x04\xbc\x22\xe9\x04\xc7\x8e\x15\x32\x78\x15\x9f\x94\xc8\xf8\x35\xfc\x51\x1a\x19\x2c\x30\x06\xcc\x7f\x7c\x3e\xbb\xde\x40\x25\xc3\x67\xfc\x81\x4c\xbc\xad\x63\x99\x0c\x43\x9c\xd6\xc9\x44\x90\xdf\x2a\x94\x7b\x02\x9f\x50\xca\x54\xe4\x67\x5d\x74\x5a\xf1\x61\x1f\x6b\xe5\x14\x50\xc7\x62\x09\xa8\xdd\x2b\x96\xe8\xdb\x47\x24\x94\x7c\xa7\x8d\xac\xec\x87\x5e\x88\x47\x0c\x35\x02\x5c\x68\x83\xcc\x5e\xfe\xfd\xb7\xc9\x2d\x42\x81\x6b\xb6\x2b\x0d\xed\xde\xe7\x44\x14\x99\x1d\xe3\xb8\x75\x9d\xf0\xe0\x2f\x2f\xbd\x98\xe2\x8f\x39\x03\x21\x79\x9b\x43\x21\xc5\xc1\xc5\x22\x1a\x45\xee\xfe\xb7\x89\xc7\x88\xe5\x4c\x80\xcb\x07\x07\xe6\xd5\xb0\x0d\x1f\xdb\x63\x35\x4c\x47\x7a\xac\x84\x10\x76\xa4\x04\xc1\x4b\x8f\xc2\x1b\xa6\x8f\x51\xc8\xb7\x98\xdf\x68\x7b\xc2\x3f\x29\x03\xae\xff\x68\x22\x8d\x17\x1c\x63\xb3\x92\xd2\x7e\x0d\xf8\xed\x21\xe1\x76\x41\x49\x12\xf6\x7f\x03\x00\x00\xff\xff\x3a\x1d\x6e\x31\x20\x24\x00\x00")

func svcEndpointsGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGoTpl,
		"svc/endpoints.go.tpl",
	)
}

func svcEndpointsGoTpl() (*asset, error) {
	bytes, err := svcEndpointsGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.go.tpl", size: 9248, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf8, 0x61, 0xdc, 0x19, 0xf5, 0x9b, 0x12, 0xa8, 0xfc, 0xdc, 0xca, 0xbe, 0xa8, 0x25, 0xbe, 0x40, 0x7, 0x37, 0x15, 0x29, 0x8d, 0xec, 0x3d, 0x90, 0x97, 0xd7, 0xa4, 0x87, 0x67, 0xaa, 0x81, 0x24}}
	return a, nil
}

var _svcServerRunGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x4b\x6f\xe3\x46\x12\x3e\x93\xbf\xa2\x86\xc8\x2e\xc8\x05\xa7\x19\x60\x37\x7b\xd0\x46\x87\x19\xcb\xe3\x18\x98\x87\x20\x29\xc9\x71\xd1\x22\x8b\x54\xc3\x64\x37\xb7\xbb\x29\xd9\x20\xf4\xdf\x17\xd5\x7c\x88\xb2\x2d\x79\x82\x00\xf1\x61\x44\xb2\xaa\xbf\xaa\xfa\xea\xd1\x35\x49\x02\x37\x2a\x43\x28\x50\xa2\xe6\x16\x33\xd8\x3e\xc1\x8e\x1f\x1e\x18\x2c\xbe\xc1\xd7\x6f\x1b\xb8\x5d\xdc\x6f\x98\x9f\x24\xb0\x42\xdd\x48\x29\x64\xe1\xe4\x70\x10\x65\x09\x6a\x8f\xfa\xa0\x85\x45\xb0\x3b\x61\x20\x17\x25\x3a\xdd\xdf\x50\x1b\xa1\xe4\x0c\xda\x96\xf5\xcf\xc7\xe3\x44\x00\x0b\x6e\x71\x2a\xa5\xf7\xe3\xd1\xf7\x6b\x9e\x3e\xf0\x02\xc1\xa0\xde\xa3\xf6\x7d\x51\xd5\x4a\x5b\x08\x7d\x2f\x48\x95\xb4\xf8\x68\x03\x1f\x00\x20\xc8\x4b\x5e\xf4\x8f\xca\x0c\xdf\x2a\x1b\xf8\x5e\x50\x08\xbb\x6b\xb6\x2c\x55\x55\x62\x84\x6e\x6a\x83\x32\x29\x55\xa1\x1b\x43\x52\x89\xb6\xff\x49\x76\xd6\xd6\xd3\xe7\xa4\xae\xb5\xca\x03\xdf\xf7\x92\x04\xfe\x99\xc1\x92\x6b\xfb\x44\x80\x4a\x15\x25\xb2\x42\x95\x5c\x16\x4c\xe9\x22\x29\x74\x9d\xf6\x7a\x1b\x0a\x7c\x8d\x7a\x2f\x52\xf4\xbd\x7a\x0b\x41\xdb\xb2\xe5\xc7\x7b\xe7\xf8\x92\xdb\x1d\xbc\x3f\x1e\xc9\x4a\xdb\xb2\xf3\x8f\x90\x98\x7d\x7a\x41\xb2\xe3\x32\x2b\x51\x9b\xc0\x8f\x7c\x7f\xcf\x35\x2c\x30\xe7\x4d\x69\x6f\x94\xcc\x45\x01\x66\x9f\xb2\xee\xd1\xf7\xf3\x46\xa6\x20\xa4\xb0\x61\x04\xad\xef\x11\x31\x6c\x6d\xb5\x90\xc5\x6f\x5c\x87\x7f\x3f\x3b\xc8\x16\xb8\x6d\x8a\x0f\x59\xa6\x63\x08\x32\x7a\x66\x3c\xcb\x74\x10\x43\x30\xfb\xe9\xc7\x7f\xff\x48\x0f\x4e\x05\xb8\xcc\xa0\x42\xab\x45\x6a\xa0\x14\xc6\xa2\x04\xd2\x44\x63\x82\xe8\x2d\x23\xbf\x6c\x36\xcb\xde\x06\xd1\x3a\x35\xf1\x93\x33\x41\x0a\x7f\x18\xf5\x6e\xb5\xbc\xe9\x51\x89\xfe\x29\xea\xbf\x1c\x6a\xb1\x5a\xde\x40\x48\xd8\xd1\x4b\x70\x97\xab\x5f\x0d\x02\xca\xbd\xd0\x4a\x56\x28\x2d\xec\xb9\x16\x7c\x5b\xa2\x89\x41\xe4\x60\xd0\x32\xf8\x54\xf2\xc2\xc0\x8e\xef\x11\x6a\x2d\x94\x16\xf6\xc9\x55\x39\xdc\xca\x3d\xe9\x1b\xe6\x7b\x22\x77\xc0\x30\x9b\x83\x32\xec\x0e\x2d\xca\x7d\x18\x2c\x6e\x3f\xfe\x7a\xf7\xdf\x0f\x8b\xc5\x2a\x88\xfe\xd3\x29\xbc\x9b\x43\x10\x50\x52\xbc\x0b\x59\x80\xb9\x53\xf4\xbd\xa3\x43\x75\xb5\x7e\x8e\xba\xfc\xb6\xda\x10\x9e\x13\x5d\xc2\x1b\x08\x87\x39\xe4\x95\x65\xeb\x5a\x0b\x69\xf3\x30\x98\xfd\xcd\x04\xb1\x3b\x1a\x0d\x26\x5e\x71\x9c\x4e\x7f\x9f\xdf\x13\x3b\x53\xb7\x5f\xc1\xa4\x64\x7d\x1f\xe6\x90\xd6\x09\xe6\xb1\x2f\xea\xaf\x78\xb8\x95\x59\xad\x84\xb4\x26\x34\x5d\x8b\x41\xbd\x65\x6d\xcb\xfa\x86\x63\x5f\x79\x85\xc7\xe3\xda\x4d\x8b\xc8\xb5\xc5\x78\x82\x6c\x25\x09\x7c\x6c\x8c\x90\x68\x0c\x64\xaa\xe2\x42\xb2\xae\x12\x7e\xd7\xbc\x1e\xba\x16\x0e\xc2\xee\xa0\x12\x59\x56\xe2\x81\x6b\x34\x0c\xd6\x88\x30\xb4\x60\x32\x95\x14\xca\xf7\x06\x4f\xe6\xa3\x0a\x23\xb8\x1e\x6d\x70\xb4\x2f\xb9\xc1\x9d\xd1\xbc\x47\xdd\x1c\xfa\x5e\xdb\x6a\x2e\x0b\x84\x1f\x04\x51\x37\x06\xf4\x05\xed\x4e\x65\x86\xa6\x80\xef\xd1\x54\x6b\x5b\xaa\x4d\x6a\xc7\x50\x2a\x0b\x3f\x08\xb6\xc2\xff\x35\x68\xec\xda\x6a\xe4\x55\x34\xf9\x6c\x6a\x25\x0d\x0e\xdf\x8f\x47\x37\x15\x3d\xaf\x6d\x37\xea\xb3\x3a\xa0\x26\xad\x8e\xb0\xd1\xab\xb9\xe3\xec\x0b\x7f\xc0\xb6\x7d\x21\x3d\x85\x02\xfd\x5f\xdb\x02\xca\x8c\xa0\xbd\xb6\x45\x99\xd1\x03\x05\x8a\x23\xe9\xb3\x0e\xf1\x2c\x75\xd1\x5f\x19\xed\xe8\x0a\x7b\x25\x22\x98\xc3\x15\x36\xae\x85\x79\xaa\x1a\x83\x25\xa6\x74\x53\x9e\x2a\xed\x0f\x16\xd0\x89\xad\x67\x25\x74\xa2\x6c\x54\x21\x76\x35\xda\x46\x4b\x18\xbf\x51\x83\xd0\x85\xdc\x48\x30\x96\x6b\x6b\x80\x83\xc4\x03\xd0\xb0\xed\x6f\xce\x18\xdc\x34\x1c\x5e\x88\x50\x0e\x6e\xe0\xf7\xdf\x3a\x9f\xed\x0e\x09\xa9\xe6\xc6\x60\x06\x69\x77\xb9\x90\x72\xa9\x8a\x02\x75\xd7\x86\xab\x46\x86\x69\x3e\xbd\x74\xdc\x45\x33\xb4\xc1\x6c\x12\xc4\x57\x3c\x0c\x6d\x10\x3d\xab\x8a\xd7\x9a\x99\x82\x13\x39\xa4\x79\xc1\xee\x68\x01\x11\x29\x4d\x98\x21\xb5\xb7\x32\x55\x19\x6a\x98\xcf\x41\x8a\xd2\x8d\x8e\xb7\x34\xfb\x09\x40\x6f\x24\xef\x55\x07\x35\x9a\x2d\x5d\x1e\x71\xbb\x56\xe9\x03\xda\x3e\x64\xdf\x3b\x98\x9b\xbc\x18\x8a\x77\x14\x77\xd1\x92\xe1\xbb\x86\xeb\x6c\x06\xc4\x47\x98\xda\x47\xe8\x97\x11\xe2\x83\x7e\x63\xd0\xf0\x0f\x77\xd7\xf5\xe5\x1a\x41\xf8\x42\x05\xb5\x56\xda\x51\xe7\x0d\x29\x3d\x65\x7f\x30\xe9\x0c\x91\x89\x18\x7a\x92\x62\xd0\x91\xef\x79\xc7\xd8\xf7\xbc\x6f\x5a\x14\x42\xde\xec\x30\x7d\x40\xdd\xbb\xf3\xc2\xf2\x56\xa9\xf2\x0d\x2b\x67\x38\xe1\x4b\x43\x3d\x4f\x5f\x30\xdd\x71\x29\x52\x5e\x9e\xc6\x17\x6a\x9d\x12\x51\x15\x7f\xc0\x90\xc4\x7d\x5c\xdd\x89\x7b\x69\x51\xeb\xa6\xb6\x83\x51\xe6\x7b\x85\x3a\x79\x30\xca\x7f\xe9\xbe\x84\x04\xd7\x9f\xed\x16\x8f\xee\xe6\x1e\x0e\xba\x08\x3b\xce\x46\x8c\xcf\xae\x36\xd9\xef\xc2\xee\x3e\x09\x2c\x33\x13\x76\xdb\x1d\xeb\xde\x5c\xe4\x81\xd5\x5c\x1a\xba\xf9\x82\x59\xbf\xe9\x04\xb1\x13\xb8\xb5\x61\xd6\xf5\x39\x95\xd3\x69\x23\xa2\xd8\x23\x76\x2f\x73\x15\x06\x9d\x17\x42\x16\x6e\x75\xf0\x2a\x57\xe5\xc4\x72\x5f\xe1\xf8\xa5\x79\xa4\x12\xf7\x2a\xd6\x45\x12\x06\x89\xb3\xd2\xed\x90\x49\x10\x77\xea\x7d\x98\x9f\x28\x0c\x27\x61\xf7\x32\xc3\xc7\xe8\xca\xd1\xb4\xca\x4a\x21\xf1\x32\xc2\x4d\xa7\x70\x0d\x83\xfe\x11\xe5\x15\x8c\x65\xa7\x70\x0d\xc3\x3c\x55\x5b\x55\x5e\x86\x58\x3b\xf9\x35\x04\xab\x79\x7a\xc5\x87\x0d\x89\x23\xc7\xaf\x2b\xaa\x9f\xdf\x77\x9a\x9f\x1d\xf7\x1f\x64\xe6\x88\x0e\xcf\x93\x04\x15\xad\x32\x61\x5f\x32\x6e\x91\x1c\x53\x0d\xa1\x90\x69\xd9\x64\x68\x4e\x1d\x1e\x3d\xab\xa3\x61\xc4\xff\x89\x6a\x22\xa3\x17\x8a\x69\xdc\x7c\x2f\xd5\x92\xe7\xed\x86\x29\x43\x97\x2e\xe9\x0f\x9d\xf0\xcc\xa3\xf8\x34\xef\xe3\x37\x26\x64\x0c\x6e\x7c\x45\xdf\x41\xe4\x69\x35\xdf\x4d\x79\x74\x97\xc5\x18\xe4\x9f\x68\x3d\x98\xfc\x9d\xb3\x46\x26\x82\xf8\x5c\xe1\x39\x7d\xe3\x8a\x3f\xaa\x5d\x20\xb1\x94\x6e\x9c\x12\x95\x12\x6d\x1f\x68\x18\xd8\xb4\x0e\xe2\x33\x24\x52\x16\xb9\xd3\x7d\x77\xba\x46\x46\x9a\x50\xeb\xd3\x9c\xa4\x9c\x51\x31\x1a\xbd\x9f\xe6\x88\xa0\xba\x05\x73\x7a\x2b\x7b\x9e\xbb\xd5\xdc\xff\x44\x86\x99\xa0\xdd\x44\xa8\xb7\x6c\x85\x05\x79\xa4\x2f\x2c\xaa\xa1\x89\xc1\xe8\xfd\x59\xe5\x1b\xd6\x25\xa9\x94\xd3\xbc\xac\x1a\xf9\xce\x7f\x95\xfe\x5b\x1a\xba\xe1\xcf\xef\xdd\xfc\xec\x39\xc2\x47\x61\x83\x88\xb6\x83\xff\x07\x00\x00\xff\xff\x76\x6b\x03\xe9\xd7\x0f\x00\x00")

func svcServerRunGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGoTpl,
		"svc/server/run.go.tpl",
	)
}

func svcServerRunGoTpl() (*asset, error) {
	bytes, err := svcServerRunGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.go.tpl", size: 4055, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc2, 0x98, 0xfb, 0x45, 0xf1, 0xde, 0x6c, 0x57, 0xcb, 0x67, 0xa1, 0xf2, 0xc1, 0xba, 0xee, 0x75, 0xca, 0x7a, 0x4, 0x8f, 0x5f, 0x83, 0x1f, 0x7e, 0x9f, 0x59, 0xe9, 0xcf, 0x2a, 0xd4, 0xdb, 0x88}}
	return a, nil
}

var _svcTransport_grpcGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4b\x6f\xe3\x36\x10\x3e\x8b\xbf\x62\x6a\x2c\x0a\x6b\xe1\x50\x3d\x07\xc8\x65\x93\x74\x13\xb4\x79\x20\x4d\xb7\x87\xc5\x62\x41\x4b\x63\x89\xb0\x44\x2a\x24\x6d\xc7\x25\xf4\xdf\x17\x43\x3d\x2c\x27\x8e\x93\x83\x01\x8b\xf3\xcd\xeb\xfb\x86\x23\x25\x09\x9c\xeb\x0c\x21\x47\x85\x46\x38\xcc\x60\xbe\x85\x42\x6c\x96\x1c\x2e\xee\xe0\xf6\xee\x11\x2e\x2f\xae\x1f\x39\x4b\x12\x78\x40\xb3\x52\x4a\xaa\x3c\xd8\x61\x23\xcb\x12\xf4\x1a\xcd\xc6\x48\x87\xe0\x0a\x69\x61\x21\x4b\x0c\xd8\x6f\x68\xac\xd4\xea\x14\xbc\xe7\xdd\xff\xa6\x19\x19\xe0\x42\x38\x1c\x5b\xe9\xb9\x69\x18\xab\x45\xba\x14\x39\x82\x5d\xa7\x8c\xf0\x8f\x7d\x58\xa8\x8d\x5e\xcb\x0c\x2d\x58\x34\x6b\x34\x27\x56\x66\x08\x73\xa9\x32\xa9\x72\x0b\x0b\x6d\xc0\x15\x08\xf9\xc3\xfd\x39\x38\x23\x94\xad\xb5\x71\xa1\x96\x6b\x07\x2b\x27\x4b\xf9\x3f\xda\x00\x19\xac\x49\x6e\xea\x94\xff\x13\xc2\x71\xc6\x64\x45\x87\x30\x65\xd1\x44\xa1\x4b\x0a\xe7\xea\x09\x8b\x26\xa9\x56\x0e\x9f\xdd\x84\xb1\x68\x92\x6b\x9d\x97\xc8\x73\x5d\x0a\x95\x73\x6d\xf2\x10\x22\xa9\xd0\x89\x4c\x38\x41\x18\x3a\x18\x32\xc0\x24\x97\xae\x58\xcd\x79\xaa\xab\x24\xd7\x27\x4b\xe9\x12\xfa\xed\x97\x40\x6e\x7d\xab\x54\x8d\x4c\x91\x45\xf5\x1c\x26\xde\xf3\xfb\x2f\xd7\xa1\xac\x7b\xe1\x0a\x38\x69\x9a\x09\x8b\x03\x2f\x37\x62\x89\x5f\x1f\xee\xcf\xdb\xea\xa1\x12\x4b\xb4\x20\xc0\xa2\x03\xbd\x00\x54\x59\xad\xa5\x72\x16\xc4\x5a\xc8\x52\xcc\x4b\x04\x41\xf6\x40\x8f\xf7\xbc\x4b\xc3\x6f\x45\x85\x4d\xd3\x53\xb0\x58\xa9\xf4\x45\xe4\xe9\x2e\xd4\x65\xff\x6f\x06\xba\x76\x52\x2b\x0b\x9c\xf3\xbd\x7e\x3b\x32\xef\x82\x39\x86\x7a\xce\xdf\xc8\x05\x9e\x45\x76\x84\xb5\x70\x7a\x06\xdf\x7f\xbc\x1d\xcc\xb3\x28\x3a\x64\xfd\x82\x0b\x6d\x70\xda\x2b\xf0\xa8\xcf\x5b\xb9\xe2\x19\x8b\x9a\x97\x39\xce\x40\xd4\x35\xaa\x6c\xba\x77\x3c\xb4\xc3\x39\x8f\x59\x64\xd0\xad\x8c\x82\xdf\x29\x5b\x9b\xc3\x07\x79\xbc\x87\x47\xfd\xb7\xde\xa0\x81\xbd\x96\xa0\x69\x58\xe4\xbd\x11\x2a\x47\xf8\x24\xa9\x91\xc1\x7e\x83\xae\xd0\x99\x25\x44\xe4\x7d\xef\xfe\x49\x76\x5c\x9c\xc2\x7e\x4b\xb7\xb8\xe9\x58\x67\x51\x14\x0d\xcc\x73\xef\x07\x97\x5e\x84\x19\x21\x2e\x30\xd5\x59\x10\x6b\x84\x78\xc0\xa7\x15\xda\x16\x70\xa9\x0e\x02\x6c\xad\x95\xc5\x80\xd8\x63\x82\x73\x4e\x87\xc4\x9d\xf7\x27\x34\x45\x54\x79\xc3\x9a\x30\x72\x3b\x42\x40\x56\x75\x89\x15\xd2\x54\xd0\x8d\xf2\xfe\xab\x0e\x54\x1c\xd6\x5a\x2a\x87\x66\x21\x52\x64\x6e\x5b\xe3\x38\x8e\x75\x66\x95\x3a\xf0\x0c\x00\x68\x5a\xfe\x55\x43\x64\xcc\x8e\x47\x65\xec\x7d\xce\x0f\x50\x0e\xf0\x82\xf3\x2b\xa1\xb2\x12\x0d\xdb\x35\xdc\x76\xdb\x85\x09\x8b\x65\x54\xb1\xd3\xbb\xe6\x3f\xde\xf7\xbb\xa5\x86\x9b\x37\xb5\xf0\x79\x97\x2a\xde\x85\x1f\xaa\x9f\xa6\xee\x19\xba\x85\xc4\xbb\x49\x9f\x81\xc1\x27\xf8\x1c\xee\xda\x0e\xdf\x4d\x41\xd3\xc4\x30\x7d\x6d\x6b\x07\xa0\x69\x66\x80\xc6\x68\x4a\xc5\xa2\x9f\x14\xa8\x0e\x27\x54\x24\x4d\xdd\x2b\xf6\xda\x4b\x47\xf3\x44\x95\x84\xcc\x31\x8b\xe4\x22\x38\xfd\x76\x06\x4a\x96\x14\xaa\xbf\x43\x4a\x96\x21\x5e\xb8\x8a\xdd\x99\xc1\x9a\x1f\xa9\x28\x9e\x91\x17\x6b\x98\xf7\xad\x1a\xa4\x45\xc7\x67\x3b\xee\xef\x93\x99\x24\x70\xec\x66\x80\xa4\x4d\xf8\xe2\x2d\xd0\x3a\x74\x88\x3f\x49\x0d\x57\x08\x47\x5c\xaf\xd1\xd0\x1e\x0d\x37\xa0\xdd\x9e\xaf\x87\xca\x74\x91\x9d\x06\x01\x2b\x8b\xe6\x24\xd3\x95\x90\xea\x18\x98\xc3\xbd\x91\x95\x30\xb2\xdc\x92\xcb\x62\x55\x82\x54\x61\x85\x8f\x96\xf1\xb1\x3e\xa6\x3f\x5f\x8f\x02\xf5\xf2\x80\x4f\xbb\xd1\xf3\x34\x00\xa3\xa7\xb1\xe2\x34\x37\xa7\x67\xbd\xcf\x21\x55\xfa\x19\x1a\xa9\xf7\x74\x44\xa0\x76\xdd\x7c\x48\xa0\xa3\x9b\xe9\xa0\x42\xad\x47\x0f\x79\x4b\xa2\xf7\xc9\xef\x52\x04\xa9\x8e\x08\x5a\x97\xdb\x0f\x29\x74\xb4\x91\x43\x12\x0d\x15\x7c\x50\x23\x5b\x13\x8b\xbd\xd7\xd1\xbb\x33\x92\xc9\xd6\x87\x74\xba\xc2\xb2\x46\x63\x59\x5b\xfa\xab\x97\xe6\xe1\xf5\x52\x65\x03\x92\xdf\x5c\xc4\x2f\x01\x54\x25\x2d\xc9\xe5\x0c\xd6\xa1\xd2\xa0\x7d\x95\x85\x45\x20\x17\xb0\x1e\x2f\x86\xf6\x3b\x07\x61\x89\xdb\x20\x72\x96\xd1\x17\xa7\x76\x05\x31\xdb\x67\xa1\x9d\x5b\x09\x07\xd3\x65\x0c\x9b\x42\xa6\x45\x80\x96\x25\x94\xa4\x52\x17\x45\xa8\x2c\xbc\x7b\xe8\x33\x8d\x9f\x0b\xa5\x95\x4c\x45\x79\x85\x22\x43\xf3\x17\x6e\xe9\x2b\xc8\x75\x89\xac\x6e\x27\x45\x3a\x48\x85\x82\x39\xf6\x21\xd2\x14\xad\xc5\x8c\x72\xa3\x74\x05\x9a\x2e\x33\xd9\x89\x8a\xb3\xa1\xd7\xff\xa4\x2b\xbe\x89\x72\x85\xed\xde\xa3\x5e\xbf\xff\xf1\x23\x7e\x17\xf8\x46\x75\xd3\x65\xbc\x8b\x10\x5e\xb1\x83\x74\xa9\x7b\x66\x0d\xfb\x15\x00\x00\xff\xff\x5b\x5f\x39\x83\x97\x0b\x00\x00")

func svcTransport_grpcGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGoTpl,
		"svc/transport_grpc.go.tpl",
	)
}

func svcTransport_grpcGoTpl() (*asset, error) {
	bytes, err := svcTransport_grpcGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.go.tpl", size: 2967, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0x5c, 0xc0, 0xb8, 0x1, 0x8, 0x16, 0x5d, 0x8e, 0xf2, 0xf1, 0xb6, 0xc8, 0xc6, 0x74, 0x4d, 0x74, 0xf4, 0xc5, 0x6d, 0x94, 0xbf, 0xb, 0x6, 0xa8, 0xd0, 0xd4, 0x30, 0x85, 0xf9, 0x3, 0x87}}
	return a, nil
}

var _svcTransport_httpGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0a\xc2\x50\x0c\x06\xe0\xbd\xa7\xc8\xdc\xe1\xe5\x1a\x1d\x85\xbe\x0b\x84\xfa\xdb\x82\xd1\x3c\xd2\xa0\x43\xc8\xdd\x05\xe9\xfe\x7d\x99\x3c\xd3\x0a\xd0\x21\xdf\x27\xef\x78\xc3\x25\xcc\xf9\x88\x18\x1c\x78\x0d\x95\xc0\xc9\x27\xfc\x03\x6f\xbb\xd1\xc3\x9c\x36\xbb\x83\x66\xae\x9a\x32\x37\x51\xa5\xb6\xf4\x7e\x5b\xa0\x03\xde\xd6\x3f\xed\x57\xa5\x56\x35\xfd\x02\x00\x00\xff\xff\xed\x08\x4c\xd3\x65\x00\x00\x00")

func svcTransport_httpGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGoTpl,
		"svc/transport_http.go.tpl",
	)
}

func svcTransport_httpGoTpl() (*asset, error) {
	bytes, err := svcTransport_httpGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.go.tpl", size: 101, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x64, 0x8, 0xe3, 0xbb, 0xa, 0x8e, 0xd7, 0x35, 0xcc, 0x32, 0xc4, 0x22, 0x4, 0x9c, 0xff, 0x72, 0x2f, 0xaa, 0x4, 0x6f, 0x28, 0x21, 0xbb, 0x31, 0x58, 0x2d, 0x34, 0xf0, 0xdb, 0xca, 0x76, 0xb5}}
	return a, nil
}

var _svcTransport_wsGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\x5d\x73\xdb\xb8\xce\xbe\x96\x7e\x05\xd6\xd3\xe9\x48\x19\x47\xee\xee\xbc\x37\xaf\x5b\x5f\x34\x4e\x4e\x9b\xb3\x9b\x8f\x89\xd3\xcd\x45\xa7\xd3\x65\x24\x58\xe1\x89\x4c\xea\x50\x54\x9c\x1c\x8f\xfe\xfb\x19\x80\xd4\x87\x1d\xa7\xed\xee\x1e\xcf\x24\xb6\x48\x02\x04\x1e\x3c\x00\x41\x4d\x26\x30\xd7\x19\x42\x8e\x0a\x8d\xb0\x98\xc1\xed\x13\xdc\x89\xf5\x7d\x02\xc7\x17\x70\x7e\x71\x0d\x27\xc7\xa7\xd7\x49\x38\x99\xc0\x15\x9a\x5a\x29\xa9\x72\x9e\x87\xb5\x2c\x0a\xd0\x0f\x68\xd6\x46\x5a\x04\x7b\x27\x2b\x58\xca\x02\x79\xed\xef\x68\x2a\xa9\xd5\x14\x36\x9b\xc4\xff\x6e\x9a\xc1\x04\x1c\x0b\x8b\xc3\x59\x7a\x6e\x9a\x30\x2c\x45\x7a\x2f\x72\x84\xea\x21\x0d\x43\xb9\x2a\xb5\xb1\x10\x85\xc1\x28\xd5\xca\xe2\xa3\x1d\x85\xc1\x08\x55\xaa\x33\xa9\xf2\xc9\xbf\x2a\xad\x68\x20\x97\xf6\xae\xbe\x4d\x52\xbd\x9a\xe4\xfa\xf0\x5e\xda\x09\xfd\xa1\xca\x4a\x2d\x15\x89\x58\x23\x54\xc5\xaa\x5e\x58\xdb\x2d\x98\xdc\x59\x5b\x3e\xd3\xa9\xf3\x02\x27\x75\x2d\xb3\x67\x33\x46\x16\x85\x98\xac\xf1\xb6\xd2\xe9\x3d\xda\x9d\xf9\x4a\x9a\xba\xac\x50\x4d\x0a\x9d\x9b\xba\xa2\x59\x85\xfd\x1e\xd5\x93\x4a\xe9\xdb\xca\x15\x8e\xc2\x60\x32\x81\x6b\x02\xb1\x42\xf3\x20\x53\x0c\x83\xf2\x16\x46\x9b\x4d\x72\x79\x74\xca\x38\x5c\x0a\x7b\x07\x87\x4d\x33\x0a\xe3\x30\x4c\xb5\xaa\x18\x99\x52\xab\xfc\x46\x48\x1b\x00\xc0\x0c\x7e\x79\x03\x07\x40\xfa\x92\x05\xa6\x5a\x65\x61\x50\x4a\x95\x5f\xa2\x91\x3a\x0b\x60\x06\x51\xbb\x1c\x0e\xe0\xff\x63\x98\xc0\xcf\x6f\xc2\x60\xb3\x39\x04\xb9\x84\xdc\x42\xf2\xf1\xfa\xfa\xf2\x23\x16\x25\x9a\x64\xe1\xcc\x48\x6e\x16\x67\xe2\x71\x21\xff\x83\xf0\x06\x9a\x26\x0c\x82\x95\x78\x3c\xc3\xaa\x12\x39\xf2\xe8\x8c\xa2\xf8\x2d\x39\x12\xa2\x2d\x50\x65\xa4\x20\x0e\x43\xfb\x54\x22\xdc\xe0\xed\x82\x41\x9b\x6b\xb5\x94\x39\x54\xd6\xd4\xa9\x85\x4d\x18\x7c\xa8\x85\xc9\xa0\xfd\x2c\x6b\x95\x46\xa9\x7d\x04\x4f\x81\x64\xee\xbe\xc7\x60\xe0\x80\xa0\x4c\xae\xf0\xdf\x35\x56\x36\x86\xe8\xd9\x12\x34\x46\x9b\x38\x0c\x2e\x8c\xcc\xa5\x9a\xdf\x61\x7a\x8f\xc6\xa9\x7c\x26\x7d\xab\x75\x11\x36\xde\x3a\xef\xe1\xc0\xaa\x33\xb4\x77\x9a\xcd\xaa\xac\xa1\x2c\xe8\x3e\x7f\x10\x11\xa7\xa3\x15\x2f\x18\xfd\x11\x06\xc7\xc2\x8a\x00\x80\x86\x93\x2b\xb1\x6e\x75\xf9\x75\x99\xb0\x62\xac\x57\xd2\xe2\xaa\xb4\x4f\xb4\x7e\xae\x57\x2b\xa1\xb2\x97\x55\xa7\x6e\xc1\xb6\x94\x37\xfc\xf4\xf8\x25\x29\xe3\x16\x7c\x95\x3b\x82\x0b\x2b\x6c\x5d\xd1\x42\xa9\x2c\x0c\x3f\x5e\xb0\xe2\x05\x5b\x42\x2d\x2e\x97\x5a\x17\x03\x50\x0a\x9d\x13\xf1\x0e\x1c\xc1\x93\x13\x65\xcd\x53\x18\xd4\x65\x6e\x44\x86\x00\xd0\x65\x46\xf2\xc9\x8d\x99\x30\xc8\xbb\xf0\xfe\x4f\x42\xdb\xe6\x79\x05\x2b\x51\x7e\x76\x50\x7c\x69\x07\x93\x13\xff\x23\x0c\x32\x4c\x75\x86\xa6\x82\xe1\x3a\xb6\x60\x27\x4e\x31\x44\x52\x59\x34\x4b\x91\xe2\xa6\xe9\x37\x4a\x0b\x89\xb4\x8d\x53\x70\x30\xe7\xc7\x2f\xcc\x9a\x80\x52\x39\xb9\xba\x39\xab\x2d\x3e\x76\x58\xb9\x15\x03\xb4\x64\xcf\x6a\xb7\x3f\x03\xd8\x0e\xed\x80\x98\x6a\xa5\x30\xb5\x54\x2c\x0f\x7a\x18\xe7\x5a\x29\x4a\x7a\x5d\xb4\x52\x97\x6c\x00\xa1\xe8\x3f\x3b\x48\x85\x61\xa0\x6b\x0b\xe9\x9d\x50\x2d\xab\xc9\x42\xf2\x1c\xce\x71\x4d\xe2\x11\x59\xb1\xb5\xfd\x18\x7a\x58\x5b\x08\xab\x31\xac\xab\xf9\x32\xdf\xcd\xdc\xd8\xd9\x40\x0e\x96\x30\x9d\xc1\x6b\x7a\xda\x84\x01\xf9\x36\x0d\xa0\xd0\xf9\x38\x0c\x5a\xf4\xa6\xb0\x12\xf7\x18\xed\x22\x18\xd3\x12\x4f\x9b\xe9\x1e\xd6\x90\xba\x80\xd3\xd7\x65\xf2\x94\x3d\x65\x73\x92\xad\xdc\x26\x3d\xc1\x15\x8a\xec\xa8\x5e\x2e\xd1\x50\xfd\x99\x02\xfc\xfc\xe6\x97\xff\xe3\x99\x1b\x3a\xab\x86\x53\xed\x4c\x43\xff\x98\x99\x43\xd5\x5c\x89\x68\xa6\x43\x63\x60\xff\x4b\x54\x63\x5f\x5a\xb6\x4d\xe1\x99\xc0\x8f\x73\x8e\x34\x35\x21\x55\x4f\x23\x54\x8e\xf0\x4a\x12\xbe\x5d\x85\x75\x15\xa9\xe2\xa2\xbc\xd9\x50\x09\xa7\x22\x12\x29\x6d\xe1\x95\x6c\x53\x67\x61\x0d\x8a\x55\x3c\x18\xae\x4a\xad\x2a\x6c\xc7\x59\x3a\x28\x93\xce\xc3\xcf\xa3\xcd\xe6\x95\x4c\xce\xc5\x0a\x9b\x66\xf4\x05\x66\x3d\x15\x92\xc1\x4c\x9f\x58\x24\xdd\xba\xfb\x5c\xb8\x9b\x1b\x4c\x38\x7b\xfd\x79\xd0\x9e\x0d\x74\xfa\x07\x06\x6d\x6d\x14\x94\x1d\x43\xa3\xd2\xb1\x2b\x86\xf7\x59\xe6\x08\xb3\xbf\x62\xbc\x9c\x2e\x31\x78\xa6\xf9\x14\x9c\xce\x80\xce\xf2\xe4\x1c\xd7\x0b\x8e\x48\x44\xc9\xcd\xcc\x75\xeb\x88\x6c\x32\x9b\x06\x01\x48\x0e\x7e\xaf\x7a\x3a\xd8\x86\x66\x28\x0f\xa7\x54\x00\xcb\xb1\xe7\x3b\x94\x49\xa1\xf3\xe4\x46\xda\xbb\x7f\x48\x2c\xb2\x2a\xf2\x69\xe5\x9e\x98\xc7\xa3\xae\xdd\x18\x4d\x61\x74\x73\x72\xb4\xb8\x98\xff\x7a\x72\x3d\x62\x86\x8e\x5c\xa2\x8c\xa6\x81\xdb\xbc\x61\x3a\xa5\xf6\x71\xda\xf9\x4c\xca\x7f\x17\x45\x8d\x84\xc4\x18\x06\xea\xc6\x43\x75\x2c\xa8\x6b\xeb\x29\x3b\x2c\x00\x8e\x58\x41\xca\xb6\x9e\xaa\xa5\x8e\x46\x9f\x6f\x16\x5f\xc0\xed\xdd\x3a\x89\xd9\x28\x0e\x83\x32\xf1\xa9\xfb\x39\xa5\x78\x5a\x53\x63\x1f\xa8\x74\x4f\xa0\x0c\xae\xf4\x03\xb6\xb1\x72\x1a\x7d\x04\x62\x2e\x12\xc9\x6f\x3a\xbd\x27\xd0\x33\x5c\xa2\x81\x32\xf9\xa4\x0a\x3f\x22\x97\xf0\x75\x0c\xfa\x9e\xa2\x31\xd8\xd8\x15\x8a\xb7\x34\x41\x08\x7e\x85\x99\x37\x35\xe9\xe3\x91\xcc\x0b\x5d\x21\x29\x09\x32\x2c\xd0\x62\xd4\x29\x18\xfb\xd5\x31\x79\xdd\x19\x9c\xf6\x56\x19\x14\x99\x87\xa6\x8a\xd8\x48\x67\x1a\xa7\x2a\x3f\x07\x69\x42\xc1\x4e\xb6\x9d\x23\x85\x51\xcc\x19\xfa\x67\x3a\xa8\x74\x68\xf6\x02\x2d\xd5\xab\xdf\xe4\x4a\xda\x68\xbb\xb7\x8a\xc3\x61\x9e\xc8\x25\x95\x05\x42\x66\x9f\xfc\x31\x8a\xac\x90\x0a\x23\xee\xfe\xce\xf5\x3a\x8a\x93\xf7\x59\xd6\x35\x7c\x71\xfc\x96\xc5\x7f\x9a\x81\x92\x5c\xac\x7d\x0c\x5d\x89\xd9\x55\x79\xa9\x55\xfe\x51\xa8\xac\x40\x13\x31\x0a\xae\x78\xc5\xae\x32\x0d\xc4\xff\xa2\x31\x61\xd0\x10\x6e\x4b\xaf\xeb\xeb\x18\x4a\xf1\x54\x68\x91\x8d\xf7\x3a\x79\xd5\x07\x88\xf1\x6e\xc1\x18\x78\x43\x43\x7d\xe2\x9f\x56\x9f\x14\x3e\x96\xcc\x62\x26\xc6\x09\xd9\x1d\xa1\x31\xe3\xc1\x2a\x9e\xf9\xa0\xa5\xca\xdf\xaf\xc5\xd3\xb3\x99\xf7\xb7\x4a\x9b\x95\x28\xe8\xa1\x36\xe8\x88\x10\xf8\xb4\xa1\x2c\xec\x94\xc6\xc3\x2c\xaa\xbb\x9d\x21\x25\x35\x94\x45\x41\xd0\x00\x16\x15\xfe\xa0\x8a\xa1\x1c\xfd\xbb\x35\x28\xee\xa9\x1a\x90\xef\x0f\xc2\xc0\xaa\xca\xbb\xd3\xbc\x43\x63\xe6\x5a\xce\x4f\x6a\x25\x4c\x75\x27\x8a\xa8\xc3\xf4\xf5\xaa\xca\x9f\x13\xe0\xbb\x66\x48\xf5\x20\x0a\x99\xc1\xca\x77\xb0\x06\x53\x94\x0f\xae\x2e\x70\x5d\xb4\x52\xd5\xd8\xda\x45\x5d\x04\x07\x6e\xab\x02\x46\x6d\x63\x3c\x26\xa3\xfd\xa1\x15\x7b\xa3\xdb\x5c\xf7\xd9\xd5\x1f\x42\xfd\xd2\x3e\xed\x03\xee\x9c\x7b\x7e\xb0\x48\x77\xf2\x0c\x24\x22\xfa\x4d\x4d\x38\x9b\x49\x50\xcd\x5a\xb0\x1c\xfc\x6e\x1d\x9f\xf4\xbd\x18\x97\xdf\xbe\xab\x9e\xf2\x54\xf7\xe8\x66\x5d\xeb\xcc\x82\xdc\x9f\xba\xe7\x8b\x5f\xc7\x5d\xa4\xf6\x10\x33\xf8\x36\xc8\x2e\xa3\xd8\x0f\xea\xe2\x3d\xd6\x0e\x62\x32\x3e\xe1\x0b\x6f\x4f\xe0\x7e\xc2\x37\xf2\xb3\xa1\x2d\x47\x22\xf3\x36\x7b\xa2\x51\xf3\xf7\xee\x90\x9c\x71\x03\x7d\xd0\x9c\xc1\xc6\x37\x04\x1d\xb0\x18\xa5\x09\x1f\x2c\x59\x8b\xe0\x5f\xf5\x09\x1f\x31\xad\x2d\x39\xd5\x5d\xc6\xbf\xed\xd5\x56\x8e\xb4\x41\x1c\x0f\xb9\x7d\xe6\x99\xdd\x5a\xed\xf4\xed\x33\x70\x9f\x85\xee\xe7\xd0\x44\x9f\x29\x05\x19\xd9\xea\xf4\x46\xbe\x8c\x7d\xd3\x81\xb7\x03\x6f\xf3\xd2\x01\xc3\xef\x48\xb6\x4f\x18\x2b\xf9\x2e\x3a\x9d\xb9\xfb\xfa\x39\xae\xaf\x79\x24\xea\x6f\xec\xf1\x9e\x73\xc8\x89\x25\x0b\xab\x4b\x3e\xeb\xbe\x7d\x2e\xb5\xf5\xb5\xc2\x02\xdd\x1d\x24\x48\x45\x85\x2d\xc9\xda\xf4\x7b\x77\xc8\x8e\x4c\x7d\xb0\x7f\x6a\x13\xee\xa5\x33\xe7\x66\xe0\x4e\xb4\x53\x34\xcf\x5a\xd5\x4a\x16\x7b\x4a\xce\xf7\x8b\x8e\x0b\x0c\x55\x40\x0a\x4a\xbf\xab\x0f\xcb\x16\x47\xf6\xb4\x30\x7d\x1f\xc8\x45\x34\x1b\x0d\x62\xd6\x1d\x79\xfe\x79\xab\xa0\x6c\xf1\xcb\x03\xf4\x22\xfd\xf7\x3a\xf1\x6d\x7a\x6d\x27\xf6\x76\x1e\x0e\xb6\xf9\x31\xa8\xaf\xf1\xd1\x76\x48\x73\xa2\xee\x81\xfa\xc7\x90\x26\x6e\x3e\xb3\xaf\x69\x99\xf2\xee\xd0\x33\x6e\x3e\x0d\xff\x34\x21\x2e\xa5\xca\x3b\x2b\x3f\x7f\xb9\x7d\xb2\xb8\x69\xfe\xbe\xa5\x94\x21\x1e\xc6\xed\x80\x6e\xe7\x5f\xd7\x91\x52\x23\x86\xd4\x98\x45\x6b\xf0\xaf\x15\x5c\xa6\xb3\xd9\x66\xcf\xeb\x86\x4d\xc8\x37\x69\xfb\xc8\x9e\xfa\xbe\xfb\x48\xa4\xf7\xb9\xd1\xb5\xca\x7c\xab\x5a\x26\xee\x5d\xc6\xc0\x15\x3a\x9b\xc9\x3b\x36\xd8\x35\xee\x6d\xfd\xf2\xab\x5d\xd3\x6e\xe2\xfd\x4d\x0c\xcb\x9d\x70\xd1\x31\x91\x92\x05\x0b\x8f\x61\x1d\x87\x43\x67\x1b\xdf\xb4\x69\xa5\x3a\xfa\x96\x89\xbf\x3f\xb7\x97\xe6\x68\x3d\x06\xe3\xd2\x30\xdc\xb3\xd5\x56\xf7\xe7\xba\x74\xd6\xb2\x75\xcf\x72\xf7\xaa\x38\x0c\x72\xdd\x76\xdc\xdb\xbd\xf2\x70\x66\xa7\xc8\xf5\x81\x58\xc1\x41\x77\xcf\xdd\x29\xa8\xfe\xa6\xcb\x2d\x37\x27\xe3\xd7\x67\xa9\xc8\x2b\x6e\x8c\x28\x4b\x34\x1b\x16\x9c\x92\x94\xcf\xb6\xb8\x71\xde\xf9\x4c\xa3\x68\xba\x9a\x46\x4b\xa2\xa1\x22\x34\x71\xd7\x4a\xc8\x25\xef\x71\xa4\xb3\xa7\x71\x2b\x7a\xe2\x70\xec\x14\xb5\x72\xff\x5c\x5c\x9c\x47\xf1\xdb\xe1\xb2\xd9\x20\x62\x64\xb6\x3f\x9d\x48\x5d\x1b\x9d\x80\xdc\x24\x7d\x83\xb3\xf9\x94\xae\xf8\x4a\x14\xcc\x47\x73\xe2\x28\x22\x97\x50\xa5\x5b\x46\x77\xf7\x39\x2f\x36\x27\x32\xf4\xb6\xb3\xe2\x19\x54\xe9\x60\x3a\xe2\xab\x4d\xb0\xe2\x03\x13\x66\x5c\x11\xe8\xb1\xeb\x10\x48\x88\x02\xf2\xfd\x57\x09\x7f\xef\x4d\xc2\x4e\xe6\x3d\xbf\xfb\x47\x8c\xd7\x0f\xbd\xfe\x70\xf8\x72\x50\x5e\x97\xb7\xc9\x66\xf3\x41\x93\x8e\x81\x49\x4d\xb3\x69\xfa\xc4\x20\xb6\xef\x34\xc0\x8e\x53\xaf\x39\xdb\x9a\xe1\x6d\x6a\xb3\x71\xaf\x1c\xfe\x1b\x00\x00\xff\xff\x86\xec\x56\x8a\x00\x19\x00\x00")

func svcTransport_wsGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_wsGoTpl,
		"svc/transport_ws.go.tpl",
	)
}

func svcTransport_wsGoTpl() (*asset, error) {
	bytes, err := svcTransport_wsGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_ws.go.tpl", size: 6400, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf2, 0xf1, 0x16, 0x7b, 0x41, 0x8c, 0x7, 0xc6, 0x34, 0x7e, 0x28, 0xc5, 0xc6, 0x95, 0x9f, 0xd, 0x9e, 0x12, 0x9e, 0x40, 0xf4, 0xe8, 0x9f, 0xbe, 0xfa, 0x81, 0x19, 0x88, 0xda, 0x39, 0x80, 0xb2}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.go.tpl":             cmdNameMainGoTpl,
	"handlers/handlers.go.tpl":         handlersHandlersGoTpl,
	"handlers/handlers.methods.go.tpl": handlersHandlersMethodsGoTpl,
	"handlers/hooks.go.tpl":            handlersHooksGoTpl,
	"handlers/middlewares.go.tpl":      handlersMiddlewaresGoTpl,
	"svc/client/grpc/client.go.tpl":    svcClientGrpcClientGoTpl,
	"svc/client/http/client.go.tpl":    svcClientHttpClientGoTpl,
	"svc/config.go.tpl":                svcConfigGoTpl,
	"svc/endpoints.go.tpl":             svcEndpointsGoTpl,
	"svc/server/run.go.tpl":            svcServerRunGoTpl,
	"svc/transport_grpc.go.tpl":        svcTransport_grpcGoTpl,
	"svc/transport_http.go.tpl":        svcTransport_httpGoTpl,
	"svc/transport_ws.go.tpl":          svcTransport_wsGoTpl,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": {nil, map[string]*bintree{
		"NAME": {nil, map[string]*bintree{
			"main.go.tpl": {cmdNameMainGoTpl, map[string]*bintree{}},
		}},
	}},
	"handlers": {nil, map[string]*bintree{
		"handlers.go.tpl":         {handlersHandlersGoTpl, map[string]*bintree{}},
		"handlers.methods.go.tpl": {handlersHandlersMethodsGoTpl, map[string]*bintree{}},
		"hooks.go.tpl":            {handlersHooksGoTpl, map[string]*bintree{}},
		"middlewares.go.tpl":      {handlersMiddlewaresGoTpl, map[string]*bintree{}},
	}},
	"svc": {nil, map[string]*bintree{
		"client": {nil, map[string]*bintree{
			"grpc": {nil, map[string]*bintree{
				"client.go.tpl": {svcClientGrpcClientGoTpl, map[string]*bintree{}},
			}},
			"http": {nil, map[string]*bintree{
				"client.go.tpl": {svcClientHttpClientGoTpl, map[string]*bintree{}},
			}},
		}},
		"config.go.tpl":    {svcConfigGoTpl, map[string]*bintree{}},
		"endpoints.go.tpl": {svcEndpointsGoTpl, map[string]*bintree{}},
		"server": {nil, map[string]*bintree{
			"run.go.tpl": {svcServerRunGoTpl, map[string]*bintree{}},
		}},
		"transport_grpc.go.tpl": {svcTransport_grpcGoTpl, map[string]*bintree{}},
		"transport_http.go.tpl": {svcTransport_httpGoTpl, map[string]*bintree{}},
		"transport_ws.go.tpl":   {svcTransport_wsGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
