// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/cmd/NAME/main.go.tpl (429B)
// NAME-service/handlers/handlers.go.tpl (1.312kB)
// NAME-service/handlers/handlers.methods.go.tpl (785B)
// NAME-service/handlers/hooks.go.tpl (402B)
// NAME-service/handlers/middlewares.go.tpl (3.177kB)
// NAME-service/svc/client/grpc/client.go.tpl (3.191kB)
// NAME-service/svc/client/http/client.go.tpl (101B)
// NAME-service/svc/config.go.tpl (305B)
// NAME-service/svc/endpoints.go.tpl (9.506kB)
// NAME-service/svc/server/run.go.tpl (4.055kB)
// NAME-service/svc/transport_grpc.go.tpl (2.967kB)
// NAME-service/svc/transport_http.go.tpl (101B)
// NAME-service/svc/transport_ws.go.tpl (6.42kB)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x3f\x8f\xe2\x30\x14\xc4\xeb\xbc\x4f\xf1\x94\x2a\x14\x67\xf7\x48\x54\xe4\x0a\x9a\x03\x01\xb7\xbd\x49\xc6\x8e\x45\x70\x90\xed\x04\xad\x22\x7f\xf7\x95\x03\xbb\xa2\xd8\xca\x7f\x7e\xf3\x34\xf3\x46\x4a\xde\x0e\x2d\xd8\xc0\xc1\xab\x88\x96\x2f\x9f\xdc\xa9\xc7\x55\x70\xbd\xe7\x7f\xfb\x33\xff\xad\x77\x67\x41\x52\xf2\x11\x7e\x74\xce\x3a\xb3\x70\x7e\xd8\xbe\xe7\x61\x82\x7f\x78\x1b\xc1\xb1\xb3\x81\xb5\xed\xb1\x68\x3f\xe0\x83\x1d\xdc\x9a\xe7\x59\xbc\xee\x29\xbd\x01\xae\x55\xc4\x3b\xcd\xef\x94\x88\xee\xaa\xb9\x2a\x03\xbe\x29\xeb\x88\xec\xed\x3e\xf8\xc8\x15\x15\xa5\xee\x95\x29\x89\x0a\x29\xf9\x9c\xad\x4e\xf0\x93\x6d\x40\x45\x39\xcf\x62\xb7\xe8\x0e\x2a\x76\xfc\x27\x25\x96\x61\x6a\x64\x80\x9f\xe0\xcb\xdf\x05\x9d\x72\x6d\x0f\x1f\x4a\x5a\x11\xe9\xd1\x35\x8b\x61\xb5\xe2\x79\x71\xf8\x7f\x6f\x55\x04\xab\xb6\xf5\x08\x01\x81\xad\xe6\xd8\x21\x37\x33\x81\x2f\x80\xfb\xd9\x3c\xc2\xe5\xca\x72\xbc\x40\x45\x3e\xc4\x41\xf9\x80\x6a\x45\x54\x34\xda\xf0\x7a\xc3\xcf\x28\xa2\x86\x56\x63\x1f\xb7\x83\xd3\xd6\x3c\xe1\x86\xbf\x93\x88\x13\x5e\xa4\x6a\xb4\xc9\xc3\xaf\xa9\xe3\xe8\x9e\x3f\x89\xbe\x02\x00\x00\xff\xff\xa6\x55\x21\xaa\xad\x01\x00\x00")

func cmdNameMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGoTpl,
		"cmd/NAME/main.go.tpl",
	)
}

func cmdNameMainGoTpl() (*asset, error) {
	bytes, err := cmdNameMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.go.tpl", size: 429, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x19, 0x81, 0xb3, 0x16, 0x98, 0x2a, 0x16, 0x86, 0xb1, 0xd0, 0x5, 0x92, 0x9e, 0x76, 0x94, 0x12, 0x0, 0x49, 0x46, 0xdc, 0x33, 0x10, 0x56, 0x65, 0xd1, 0x10, 0x32, 0xa8, 0x45, 0xea, 0xaa, 0x93}}
	return a, nil
}

var _handlersHandlersGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\x41\x8f\xd3\x3c\x10\x86\xcf\x99\x5f\x31\x8a\xaa\x55\xb2\xea\xba\xf7\x4f\xfa\x2e\x20\x16\x81\x96\xb2\xa2\x20\x8e\xc8\x9b\x4c\x13\x8b\xc4\x0e\xf6\xa4\xdd\x95\xe5\xff\x8e\xdc\x98\x92\x76\x55\xb8\xac\x84\x2f\x89\xc7\xf3\x8e\xfd\xbc\x63\x79\x90\xd5\x77\xd9\x10\xb6\x52\xd7\x1d\x59\x07\xa0\xfa\xc1\x58\xc6\x02\xb2\xbc\x32\x9a\xe9\x91\x73\xc8\xf2\x46\x71\x3b\x3e\x88\xca\xf4\x2b\xa7\xec\x38\x38\xd2\xab\xce\x34\x76\x74\x39\x40\x36\x3c\x60\xee\xbd\xb8\x7f\xf5\xee\x20\xbe\x97\xdc\xe2\x4d\x08\x39\x94\x00\x3b\x69\xf1\xce\x34\x0d\x59\xbc\x9e\x14\xe2\x8d\x66\xfb\x04\xb0\x5a\xe1\x9a\xf6\x1b\xb2\x3b\x55\x11\x5a\xe2\xd1\x6a\x87\x12\xb5\x54\x3b\x5a\xa2\x63\xc9\xd4\x91\x73\xa8\xfa\xa1\xa3\x9e\x34\x4b\x56\x46\xa3\xd9\x62\x12\x09\xd8\x8e\xba\x9a\x55\x29\x4a\x1c\x1e\x84\xf7\x6f\xcd\x5a\xf6\x84\xe2\x57\x5e\x9c\x85\x10\x67\x64\xd1\x43\xd6\x99\x06\xff\xfb\x1f\xd3\x79\xd6\xb4\x2f\xca\x43\x50\x6c\x88\x6f\x8d\xed\x25\x33\xd9\xe2\x2a\xad\xbf\xdf\x7c\x5c\x1f\xa3\x3e\x94\x90\x25\xa0\x43\x05\xf1\x55\x71\x7b\xab\xa8\xab\x8b\xdc\x4d\xfb\xe5\xcb\xe8\xc7\x67\x73\x67\xf6\x64\xcf\x4f\x91\x97\x00\xd9\x44\x8b\x17\x93\xd2\xcc\x07\x08\x00\xfc\x34\xd0\x5f\x53\xd1\xb1\x1d\x2b\xf6\xb1\x1b\xe2\x8b\x3e\x7a\x46\xf5\x9f\xed\x88\x1b\x78\xbf\x57\xdc\xe2\x82\x29\xba\x22\x30\x04\xc8\xbc\xb7\x52\x37\x84\x0b\x15\x63\x0b\xa6\xa3\xfa\x03\x71\x6b\x6a\x17\x93\x32\xef\x51\x6d\x71\xa1\xc4\x27\xfa\x31\x92\xe3\x0d\x5b\x92\x7d\x2c\x80\xb3\x71\xe8\x52\xe1\x66\x0c\xf3\x7a\x27\x18\x25\x7a\x9f\x22\x85\x9b\x8a\xcd\x3b\xfa\x5c\xf7\xed\x37\xde\x1c\xab\x44\xb2\xd6\xc4\x66\xe3\xd9\x48\xd6\x6b\xd5\x9d\x2c\x25\x1a\xea\x1c\x1d\x91\xdc\x60\xb4\xa3\x17\x65\x52\x1a\xaf\x4f\xae\x68\x32\x2e\x84\x78\xe3\xff\x11\xef\xcb\xa0\x55\xfc\x88\xe9\xc9\x10\xaf\xa7\xef\x12\x2f\xf3\x96\x58\x9c\xaf\x4c\x7e\x47\x2b\x0e\x30\xe5\x73\x98\xf8\x9a\x58\x72\x03\x5e\x50\x5e\xa2\xbf\x8a\xa2\xe5\x45\x13\x74\x9d\xee\x3c\xe9\x3a\x04\xf0\xfe\x06\xa7\xbf\x9f\x01\x00\x00\xff\xff\xc5\x90\xf0\xc5\x20\x05\x00\x00")

func handlersHandlersGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGoTpl,
		"handlers/handlers.go.tpl",
	)
}

func handlersHandlersGoTpl() (*asset, error) {
	bytes, err := handlersHandlersGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.go.tpl", size: 1312, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x0, 0xb5, 0xc3, 0x96, 0xb1, 0xf7, 0x54, 0xe5, 0x4d, 0x90, 0x66, 0x21, 0xf, 0x70, 0x79, 0x62, 0xd7, 0xc9, 0x6d, 0x4e, 0xd1, 0xd7, 0xa2, 0x8d, 0x4a, 0xa2, 0xee, 0x13, 0x88, 0x32, 0x75, 0xdb}}
	return a, nil
}

var _handlersHandlersMethodsGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xc1\x4e\xf3\x30\x10\x84\xcf\xcd\x53\xcc\x21\xfa\x95\xfc\x0a\x7e\x00\x24\x4e\x1c\xb8\x00\x07\xca\x1d\x85\x64\x4b\x2d\xb5\x76\x58\x3b\x6d\xa5\xd5\xbe\x3b\x4a\x9d\x06\x4a\x95\x5b\x25\xf6\x62\x7b\x47\xb3\xf6\x37\x72\x26\x82\xbd\x8d\x6b\xe4\x91\x70\x7b\x07\xa3\x9a\x01\x80\x08\xd7\xee\x83\x90\xdb\x63\xf7\x89\xe2\xda\xb7\x41\x35\x5b\x2c\x44\x60\x57\xc8\xad\x79\xa1\xcf\x9e\x42\x5c\x46\xa6\x7a\x8b\xd1\x78\xaa\x55\xef\x1a\x14\x01\x22\xaf\xfe\xd1\xef\x89\x87\x1b\xcc\x92\x78\x67\x1b\x7a\xae\xb7\xa4\x3a\x1e\x4a\x88\x98\xd4\x29\x42\x9a\xd5\xbd\x1b\x91\x07\x3f\x34\x2f\x6d\x6f\x93\x64\xbe\xe7\x10\x97\x20\x66\xcf\x90\xb3\x67\x0c\xc5\x14\x7b\x76\x70\x76\x73\x26\x8d\x2c\xb4\x09\x34\x01\x85\xce\xbb\x40\xd7\x24\xb2\x0e\xff\x7f\xe2\x9c\x52\x53\xad\xf0\x57\xb4\x57\x01\x6b\xe2\x01\x8d\x77\x91\x0e\xd1\xdc\xa7\xb5\xc2\x3c\x6d\x89\xe2\xb7\x92\xc2\x1e\x82\x38\xb2\x94\x97\x2c\xbb\x9a\xc1\x14\x3a\xcc\x38\xe7\xe0\xff\x0d\xa6\x6a\x36\x03\xd7\x62\xfa\xe6\xe4\x5a\xd5\x4c\xe4\x06\x69\xf7\x15\x00\x00\xff\xff\x66\x64\x40\x3b\x11\x03\x00\x00")

func handlersHandlersMethodsGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersMethodsGoTpl,
		"handlers/handlers.methods.go.tpl",
	)
}

func handlersHandlersMethodsGoTpl() (*asset, error) {
	bytes, err := handlersHandlersMethodsGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.methods.go.tpl", size: 785, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x2c, 0x57, 0x30, 0xb3, 0xdb, 0xb5, 0x5a, 0x84, 0x38, 0x24, 0x7c, 0x45, 0x1c, 0x2, 0x1e, 0x1d, 0xec, 0x1, 0xa6, 0x6a, 0xba, 0xc4, 0x6d, 0x9c, 0x2, 0x42, 0xf3, 0x4e, 0x1, 0xb6, 0x47}}
	return a, nil
}

var _handlersHooksGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xd1\xaa\xe2\x30\x10\x86\xaf\x33\x4f\x31\x14\x16\x5a\xb0\x2d\x7b\xbb\xb8\x57\x22\xbb\xbd\x38\x22\x47\x5f\x60\x88\x93\xa6\xd8\x26\x32\x99\x2a\x22\x7d\xf7\x43\xad\x07\x8e\x37\x21\x5f\x86\x3f\xff\x97\x5c\xc8\x9e\xa9\x65\xf4\x14\x4e\x3d\x4b\x02\xe8\x86\x4b\x14\xc5\x1c\x4c\xe6\x06\xcd\xc0\x64\x8f\x47\xd5\x3c\x0f\xf7\xa4\x1e\xcb\x69\xc2\x3a\x5d\xed\x3c\x89\x69\x59\xeb\xd4\xb5\x81\xfa\x19\xd2\x3d\x59\xea\xfb\x0c\x0a\x00\x37\x06\x8b\x07\xd6\x4d\x0c\xae\x6b\x73\xeb\x5a\x4c\x57\x5b\x2d\x58\xfc\xd8\xe3\x03\x8c\xb0\x8e\x12\xd0\xba\x16\xa6\x57\xb4\x09\xca\x22\xe3\x45\xff\x2f\x76\x39\x8b\x6c\x3c\x05\xb4\x9e\xc2\xba\x44\x16\x89\x52\xcc\x61\x8b\x7f\xfe\xe2\x40\x67\xce\xe7\x11\xc6\x54\x1d\x9e\x46\x2b\xfc\x5d\x80\x59\xec\xaa\x5d\xd4\xce\xdd\x73\xbb\xc2\x97\x64\x75\x68\xfe\x35\xbb\xe3\x1b\x1f\xb7\x9f\x1f\x05\x18\x65\x19\xba\x40\xca\xdb\xb9\x63\xbe\xdd\x0d\x5a\x3d\xc1\xe5\xd9\xaf\x94\xad\x70\x5d\xda\x02\xc0\xd4\x35\xee\x7b\xb2\x8c\x37\x4f\xca\x57\x16\x4c\x7e\xd4\x53\xbc\x85\xe5\x53\xbb\xd0\xe2\x3d\x8e\x78\xa3\xa0\xe8\x59\x18\xc0\x7c\xbf\x63\x5d\xe2\x7b\x11\x4c\xf0\x15\x00\x00\xff\xff\xf0\x19\x98\x3b\x92\x01\x00\x00")

func handlersHooksGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGoTpl,
		"handlers/hooks.go.tpl",
	)
}

func handlersHooksGoTpl() (*asset, error) {
	bytes, err := handlersHooksGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.go.tpl", size: 402, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x31, 0xa9, 0x1c, 0x49, 0xec, 0xf0, 0xf8, 0xcb, 0xac, 0xec, 0x63, 0x6a, 0x23, 0xb0, 0xab, 0x33, 0x9f, 0x6b, 0xe7, 0xda, 0xf3, 0xec, 0xc1, 0xf1, 0x32, 0xf6, 0x58, 0xc7, 0x12, 0x38, 0x33}}
	return a, nil
}

var _handlersMiddlewaresGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\xdd\x6e\xdb\x38\x13\xbd\x96\x9e\x62\xaa\x9b\x4f\xfa\xe0\x48\xbd\xee\x22\xc0\xee\x06\x69\x53\x20\x6d\x83\x26\x45\x17\x28\x8a\x0d\x2d\x8e\x24\x22\x14\xa9\x92\xa3\x38\x46\xe0\x77\x5f\x0c\x45\xd9\x56\xfa\xbb\xd8\x2b\xcb\x24\xe7\xcc\x99\x33\x3f\xe4\x20\xea\x3b\xd1\x22\x74\xc2\x48\x8d\xce\xa7\xa9\xea\x07\xeb\x08\xf2\x34\xc9\x6a\x6b\x08\x1f\x28\x4b\x93\x61\x0d\xd9\xe3\x63\x79\xf5\xe7\xeb\xb0\x7b\x25\xa8\x83\x93\xdd\x2e\x4b\x13\x5e\x5e\x2e\x42\xe5\xef\x6b\xde\x31\x48\xd5\xe8\x34\x7f\x7a\x72\xca\xb4\x3e\x4b\xd3\x24\x6b\x15\x75\xe3\xba\xac\x6d\x5f\xb5\xd6\xb6\x1a\xab\x71\x54\x32\x5b\xee\x18\xa5\x54\x6b\x6d\xd5\x89\xcd\x5d\xd5\x2b\x29\x35\x6e\x84\xc3\x27\xa7\xbc\x72\xe3\xe0\xd1\x54\xda\xb6\x6e\xf4\xb3\xd3\x8e\x68\xc8\xd2\x22\x4d\xab\x0a\x3e\x3a\x31\x9c\x1b\x39\x58\x65\xc8\x83\xa8\x6b\x1c\xc8\x03\x75\x08\x1e\xdd\xbd\xaa\xf1\x7f\x1e\xd0\x90\x72\x08\xb5\xd5\x1a\x6b\x52\xd6\x80\x6d\x00\x67\xa3\x15\x78\x0b\xd4\x09\x02\xc1\x80\x1e\x89\xb7\x0f\x9c\x3c\xd4\xc2\xc0\x1a\x61\xe3\xc4\x30\xa0\x04\xe1\xec\x68\x24\xe0\x3d\xba\xed\xd1\x39\xc8\xb1\x6c\xcb\x55\xe0\xe0\x3d\x43\x69\xdb\xb6\xca\xb4\x20\x8c\x04\x65\x3c\xb9\xb1\x47\x43\x82\x19\x14\xab\xb0\x6a\xa9\x43\xe7\xf7\xc8\x1e\x03\xc1\x7b\xd4\xdb\xd9\x8b\xb7\x3d\x32\x16\x1e\x62\x34\x12\x8c\xa5\xd9\x36\x7a\x3d\xec\x3b\xfc\x32\x2a\x17\xfc\x8e\xd4\x71\xec\xb5\x20\xa6\x1d\x78\x15\x25\xa3\xbd\xb5\x84\x53\xcc\xac\x54\xa3\x8c\xd0\xc7\x91\xcc\x7c\x36\x4a\x6b\x8e\x9c\x0f\xd9\x91\xd0\xf5\xd6\xd3\xd1\x41\x86\xca\x55\x89\x25\x88\x61\xd0\x0a\x25\x34\xca\x79\x2a\xd2\x66\x34\xf5\x32\x35\xb9\x32\xe0\xef\xeb\x72\xbf\x50\x2c\xff\xc2\x63\x9a\x28\x53\xb2\xcd\x1f\x5a\x5f\x8a\x35\x6a\x94\xe7\x0f\x9c\xce\xfc\xe0\xb0\x3c\x13\x54\x77\x57\xc2\xa8\xba\x48\xd3\xa4\xaa\xe0\x4a\x78\x0f\xe2\x98\xfc\xd6\x8e\xb0\x11\x86\xf6\x9c\xc8\xc6\x5c\xcd\x1a\x95\xc1\xd2\x0e\x9c\x08\xa1\xf5\x16\x06\x06\x51\xe6\x48\xc4\xf5\x16\x8c\xe8\xa3\x46\x7b\x44\xb2\xac\x06\x3e\xd4\x7a\x94\x28\x03\x0a\xab\x1f\x3e\x0e\xe4\x23\x6b\x56\xff\xcd\x9e\xd6\x0a\xb2\x6b\x12\x34\xfa\x6c\x05\xd9\x95\x32\x6d\x76\x1c\x80\x32\x20\x82\x1e\x31\xf0\x37\xff\x3e\x9c\x9b\x0e\x3d\x2e\xca\xb6\x45\x0a\x91\xb1\x4d\x87\x47\xc1\x85\xc8\x44\xe8\x12\xe5\xa6\x94\x81\x70\x6d\xa8\x4e\xd8\x74\x68\x66\x5f\x33\xb2\xda\xf7\xc0\xe8\x27\x06\x1b\xa7\x08\xa1\x45\x83\x4e\xd5\xd0\x23\xf1\x4f\x2b\xb8\x24\xb9\xf2\x8e\x69\x04\x09\x6b\x61\x02\x96\xc3\x30\x7d\x8e\xf9\x4c\x74\x1a\xeb\xa0\x71\x88\x93\xcb\x9f\x4f\x8a\x6a\x1f\x7d\x6b\x83\xb1\x30\x80\x0f\xa2\x1f\x34\x3e\xcd\xc7\xb2\x98\xd0\x39\xeb\xce\xec\x68\x08\x5d\xee\x49\x90\x97\xf1\x5f\xf1\xdd\x1c\x5d\xd8\x0d\x07\xcd\xaa\x6c\x97\xc5\xc6\xab\xe0\x95\x69\x35\x3e\xc9\x87\x32\xe5\xf9\xc4\x67\xae\x71\x38\x85\x65\x4d\xe4\x5f\x9f\x29\xd2\x14\x00\xa0\xaa\xe0\xda\xf6\xcb\x74\x92\x05\xd5\x0f\xce\xde\x4f\xfd\x38\x0f\x17\xdb\x84\x8e\x47\x4f\x7e\x36\xfd\xe0\x11\x6e\x8f\x9a\xe6\x15\xd2\xa5\x6d\x5b\x74\xb7\x53\x05\x1b\x6c\x14\x41\xe3\x6c\x0f\x8a\x7e\xa9\xed\x66\x7a\x97\x93\xd3\x7c\x82\x5b\x81\x51\xba\x28\x7e\x09\x61\xb2\xb8\xb1\x67\xd3\x9d\x13\x11\x96\xc6\x1f\x15\x75\x17\x44\xc3\xbb\xd0\x99\x3f\xc5\xb8\xb8\xb9\xb9\xda\x33\xe1\x89\x93\x3b\xf8\x3f\xdf\x0d\xe5\xfb\x49\x90\x02\xa6\x7b\xa3\x7c\xa9\x50\xcb\x30\x62\x92\x66\xfa\x7c\x71\xba\xdc\xe3\xad\x24\xeb\x91\x3a\x2b\xb3\x17\xe0\xca\x37\xe1\x73\x15\x96\xf9\x92\x7b\xc1\xda\xba\xf2\xc3\xfb\xcb\xf2\x3a\x5c\x76\x79\xc1\x9b\xbb\x34\x4d\x38\xdb\x31\x8d\xa1\x12\x63\x3a\x4e\xd6\x22\x34\x8b\x13\xb5\x32\x6d\x9a\x24\xaa\x01\x25\xd9\xb3\x2b\x2f\x50\x48\x74\x9c\x98\x3c\xfb\xeb\x24\xd2\x3d\x79\x2d\xb3\xe2\x37\x3e\xf3\xec\x14\xb2\x2c\xd0\x8d\x7c\x3f\x65\x11\xf4\x6f\x25\xb3\xcf\x70\x0a\x4a\xb2\x73\x40\xed\xf1\x87\xe7\xf8\xea\x2d\xdf\xe2\x66\xe6\xfc\x1d\xca\x1e\xbd\x57\xd6\xfc\x3a\xe5\xeb\x68\xf0\x23\xca\x11\x74\x49\x99\x9d\x3b\xa4\xd1\x19\x98\xce\xa5\xc9\xae\xe0\x36\x8b\x8b\xca\xa4\xbb\xf4\x70\x7f\x5c\x4f\x97\x38\xdf\x1e\xc3\xba\x7c\x7c\x2c\xe3\x42\xf9\x56\xf4\xb8\xdb\xf1\x3f\x74\xc5\x0f\xf6\x98\xd2\x02\x9a\xdf\x0c\xb8\xbe\xb6\xf5\x1d\xd2\xab\x51\x38\x09\x83\xb3\x84\x75\x7c\x35\x6c\xe6\xbd\x43\x3b\xf3\x68\x85\xda\x1a\x13\x1f\x0f\xca\x83\x35\x7a\x0b\xe3\xd0\x3a\x21\x51\x82\x6a\x82\x69\xcb\x68\x8c\xcf\xec\xc3\x49\x69\xd1\x87\xbb\x3a\x8e\x3d\x9e\x51\x3c\x7e\x26\xc8\x89\x16\x4a\x88\xef\x30\x06\xbe\x17\x5a\xc9\x90\x92\xd0\xe3\xaa\x41\x52\x3d\x72\x93\xd3\x82\x44\xb8\xc5\x6f\xe3\x13\xe7\x16\xba\x69\x9a\x03\x6d\x07\x84\xdb\xc7\xc7\x1b\x7b\x69\x37\xe8\xe0\x1b\x92\x84\xf3\xfc\x86\x88\x13\xbd\x16\x9e\xca\x28\xf8\x42\x97\xbc\xa6\x87\x99\x5a\x19\x5b\x6e\x35\xbf\xaa\x26\xc5\x5f\x59\xc6\xfd\x96\x17\x6e\xc9\xaf\xba\x31\xff\x0a\x2d\xa8\x51\x1c\xe5\xa8\xa6\x87\x30\x55\x9e\x66\xea\x9d\x53\xad\x32\x67\x1d\xd6\x77\xe8\xa0\xe6\xdf\x29\x62\x1b\x36\xa0\x0b\xd5\x39\xeb\x14\x9b\x00\xd6\xd8\x58\x87\x31\x51\x3c\x2c\xbf\x21\xe2\xef\x1e\x11\x16\x6f\x56\xa7\xb4\x16\xd5\x06\xd7\x7e\x2a\x04\xce\x46\xcf\x38\x12\x49\x28\xed\x9f\x88\xb5\xa0\x96\xff\x17\x7d\xd6\xd6\x6a\xd6\x22\xc6\x74\xd4\x76\x9f\xb2\xc9\x4b\xf6\x39\xe5\x9e\xd4\x68\xf2\xe9\x50\x01\xa7\xa7\xf0\x3c\xf4\x5d\x54\x90\xdc\x88\x69\xb2\x4b\x93\x31\xc8\xcb\x28\xa3\xd3\xe5\x95\x70\x1e\xa3\xd1\xa7\xe7\x9f\x8b\x80\xc3\xfb\xcf\x4e\x59\xef\x63\x84\x46\x68\x3f\x41\xc4\x85\xf8\xba\x2f\xcf\xbf\x8c\x42\xbf\xb4\x5a\xe6\x63\x79\x61\x3d\xad\x98\x9f\xe5\xf7\xde\x2e\xfd\x27\x00\x00\xff\xff\xbc\xd2\x51\x2d\x69\x0c\x00\x00")

func handlersMiddlewaresGoTplBytes() ([]byte, error) {
	return bindataRead(
		_handlersMiddlewaresGoTpl,
		"handlers/middlewares.go.tpl",
	)
}

func handlersMiddlewaresGoTpl() (*asset, error) {
	bytes, err := handlersMiddlewaresGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/middlewares.go.tpl", size: 3177, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x77, 0xc7, 0x2c, 0x23, 0xce, 0x8, 0xd1, 0x13, 0x39, 0xe8, 0xaa, 0xf2, 0xb3, 0xfd, 0xe7, 0x90, 0x1, 0x71, 0x7e, 0xfc, 0xa3, 0xd6, 0x65, 0x5e, 0x6a, 0xa3, 0x74, 0x71, 0xac, 0x7, 0xc3, 0xb6}}
	return a, nil
}

var _svcClientGrpcClientGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4f\x6f\xdb\x3a\x12\x3f\x8b\x9f\x62\xd6\x08\x16\x52\xa0\xd0\xf7\x2e\x7c\xa9\xd3\x2d\xba\xd8\xa6\x46\x1a\xf4\x1d\x8a\xa2\x60\xa8\x91\x4c\x58\x26\x55\x92\xb6\x13\x08\xfa\xee\x0f\x43\x52\x8e\x9c\x3a\x7e\x3d\x18\x16\x39\xc3\xf9\xf3\xfb\xcd\x70\x38\x9f\xc3\xd2\x54\x08\x0d\x6a\xb4\xc2\x63\x05\x8f\xcf\xb0\x16\x87\x0d\x87\xdb\x2f\x70\xf7\xe5\x01\x3e\xdc\x7e\x7a\xe0\x6c\x3e\x87\x7b\xb4\x3b\xad\x95\x6e\x82\x1c\x0e\xaa\x6d\xc1\xec\xd1\x1e\xac\xf2\x08\x7e\xad\x1c\xd4\xaa\xc5\xa0\xfb\x0d\xad\x53\x46\xbf\x83\xbe\xe7\xe9\x7b\x18\x26\x02\xb8\x15\x1e\xa7\x52\x5a\x0f\x03\x23\x95\x95\x90\x1b\xd1\x20\x34\xb6\x93\xd0\x59\xb3\x57\x15\x3a\x10\xd0\xdc\xaf\x96\x20\x5b\x85\xda\x43\x6d\x2c\xf8\x35\x92\x81\xaf\x68\xf7\x4a\x22\xbf\x13\x5b\x1c\x06\x70\x69\xc9\xba\x89\x19\xc6\xd4\xb6\x33\xd6\x43\xce\xb2\x99\x34\xda\xe3\x93\x9f\xb1\x6c\xd6\x18\xd3\xb4\xc8\x1b\xd3\x0a\xdd\x70\x63\x9b\x39\x69\xbf\x2d\x99\x6f\xd1\x8b\x4a\x78\x11\x54\x94\x5f\xef\x1e\xb9\x34\xdb\x79\xb7\x69\xe6\x68\xad\xb1\x6e\xc6\x4e\x25\x8d\xb9\xd9\x28\x3f\xa7\x1f\xea\xaa\x33\x4a\x93\x63\xb2\xe5\xad\xd0\x2e\x04\xf5\x86\xfe\x51\x21\x05\xc5\xb2\xf9\x1c\x1e\x08\xe6\x94\x32\xcb\x66\x7d\xcf\x3f\x85\xcc\x56\xc2\xaf\xe1\x66\x18\x60\xee\xf6\x94\x40\xf7\x08\x24\x5c\xbd\x3f\x15\xcf\x58\x11\x30\xbe\xc3\x03\x58\xf4\x3b\xab\x1d\x08\x3d\x82\x06\x8f\x42\x6e\x62\x09\x9c\xc2\x2d\x8d\xd6\x28\xbd\x32\x9a\xc3\x27\x0f\xca\x11\xf8\x64\xc7\xa2\xeb\x8c\x76\xea\x51\xb5\xca\x3f\x83\xa9\x03\x2b\x52\xb4\x2d\x5a\xf0\x06\x2a\x25\xda\x12\x84\xae\xa0\x15\x1e\x2d\xc8\xd6\x38\x2c\xa3\xd2\x8b\x4d\x56\xef\xb4\xa4\x98\x72\xda\x84\x6b\xca\x97\x2f\x83\xeb\xa5\xd1\xba\x04\xd3\x91\x9e\x03\xce\xd3\xf6\x97\xb0\x51\x40\xde\x3d\xf2\xdf\x6a\x80\x56\x68\x4b\x08\x8c\x14\xd0\xb3\x6c\x2f\x2c\x48\x99\xb2\x59\x1a\x5d\xab\x86\xb1\x8c\x8a\xe8\x67\x09\x35\xbc\x5b\x80\x15\xba\xc1\xa3\x9f\x9e\x65\x19\x5a\x4b\x82\x3a\xff\xb7\x94\x05\xcb\x32\x55\x93\x41\xf8\xd7\x02\xb4\x6a\x83\x46\x16\x11\xa4\x75\x72\xe6\xf8\x5f\x56\x74\x39\x5a\x5b\xc2\x4c\x0a\xad\x8d\x07\xd1\x75\xed\x73\xb2\x3c\x23\x43\x03\xcb\x06\xc6\x32\x39\x49\xc4\x91\xa7\xef\x3f\x4e\xca\xe2\x24\x53\x72\x77\x4e\xfa\x1e\x6b\x63\x31\xa7\x60\x52\x59\x7f\x13\xed\x0e\xdd\x83\xf9\x78\xbf\x5a\x7e\x4e\xd5\x9a\x4b\xc9\xd7\x28\x2a\xb4\xae\x28\x4a\x72\x9f\xf5\xfd\x0d\x1c\x94\x5f\xc3\x95\x47\x72\xce\x87\x81\x65\x93\xdd\x6e\xd3\x10\x98\x24\xba\xf2\xc8\x53\x4f\x46\x7c\xc9\x1b\x69\x46\xcc\xae\xd4\xa8\x34\xb2\xf0\x19\xfd\xda\x54\x2e\x2a\x06\xec\xfb\xfe\xc1\xfc\xdf\x1c\xd0\xc2\x95\x4a\x24\x7d\x48\xdd\x00\x63\x5b\xf0\x71\x27\x9c\x0a\xf8\x92\x9b\xb7\x0f\x2e\xe0\x14\x91\x3b\x3c\x44\x50\xf2\x78\x96\x10\xd1\x65\xfa\x9e\xf5\xfd\x98\xd3\x30\xf0\xbe\x9f\xc6\x1b\x37\x67\x53\x55\xf5\x7a\xf3\x83\x96\xa6\x42\x02\x75\x22\xbd\xc7\x5f\x3b\x74\x7e\xd4\xb9\xc5\xb3\x3a\xa1\x43\x70\x54\x0a\x05\xfb\xd1\x04\x70\xaf\x14\x1f\xc5\xc3\xd0\x0f\xa3\xca\x49\x65\x70\xce\xd3\x7e\x71\x44\x28\x2f\xc2\x4e\x22\x02\x75\x95\xc8\x4b\x5f\xe3\x07\x03\x80\x23\xbc\xa1\xc4\xdc\x5e\x12\x4c\xa3\x1d\x47\x86\xfa\x7e\xca\xe3\x6b\x12\xe9\xd2\xa0\x66\x18\x4f\xf0\x49\x6a\x13\x26\x2e\xf0\x34\x89\x67\x6c\x98\xa3\xb5\x92\x7a\x87\xc5\x6b\x9f\x70\x83\x48\x20\x44\x24\xd9\xe5\xd0\xe2\x40\xb9\x08\x3a\xdd\x54\x02\x4e\x2f\x52\x1e\x4f\x8c\x2a\xff\xa5\xab\xc7\xaf\x45\xb8\xe4\xf6\x68\xbd\x03\x41\x76\xc3\xf5\x77\x26\x2d\xb0\x48\xfd\xec\x0d\x08\xd8\x39\xb4\x37\x95\xd9\x0a\xa5\xdf\x50\x8d\x3e\x38\xac\xac\xda\x0a\xab\xda\x67\x3a\x53\xef\x5a\x50\x1a\x44\xba\x8f\xd2\xf5\x77\x31\x91\xfc\x27\xa4\xfe\xe6\xcb\xf8\x5f\x86\xea\xbf\x0f\xc1\x28\xed\xd1\xd6\x42\x62\x3f\x14\x90\x4f\x56\xd3\x3b\x30\xc6\xfd\x6e\xf1\x72\x8e\xe7\xd7\x6f\x56\x63\x71\x24\x2b\x9c\x1b\x89\x3a\x52\xf9\x8a\xb0\xd8\x1e\x7f\x44\xd8\xa5\x4e\x3a\xcb\x57\x3c\x90\x34\xde\xa2\xeb\x9f\xa9\x88\x0e\x02\x6f\x17\xb8\x0d\x5a\x7f\xc4\xd7\xa5\x3c\xce\xd1\x35\x46\xf0\x87\x64\xfd\x0a\x53\x29\xc5\x73\x86\xa8\x20\x38\xe5\xe9\xd7\x6f\x2c\x31\xff\xdc\xe1\xc9\xd8\x03\xe7\xed\x4e\x7a\xf2\x91\x26\x02\x7c\xff\xe1\xbc\x55\xba\x49\x7d\x38\x1d\x3b\x91\x0f\x4a\x37\xac\x02\xee\x5b\x53\xa9\x5a\xa1\x8b\x43\xfc\xf8\x3e\xa0\x91\x1a\xbc\x9d\x9c\xa7\xa3\xf9\xf5\x34\x80\x22\x66\xc9\x22\x88\x4b\xff\x34\x0e\xac\xaf\xa8\xab\x7c\x83\xcf\x61\xca\xc7\x88\x8a\x53\x63\xfd\x31\xd7\x60\xd6\xc0\x39\xc3\x61\x32\x9b\x71\xdc\xc1\x02\xc8\x24\x9b\xce\x6a\x9a\x7f\x43\xf2\x7f\x69\x68\x86\x58\x46\x70\x0a\x38\x37\x7e\xa7\x45\xf9\x2a\x3a\xe9\x9f\x7e\xaf\x81\x6d\x05\xd7\xe3\x13\x92\x7f\xbe\x2d\x5e\x6b\x84\xe0\x69\x60\x76\x42\x4d\x99\xc9\xc6\xb7\xca\xe6\xe5\xad\x12\xc2\x0b\x63\x52\xd5\xb0\x2f\xc1\x04\x99\xf4\x4f\x3c\x64\x93\x6f\x0a\x9e\xa7\xd8\xff\x43\xc2\x38\x51\xa3\xe1\x05\xbd\x4a\x08\xef\xb0\x2c\x61\x53\xc2\x3e\xcc\x94\x21\xbc\x4f\xe2\x6b\x27\xaa\x4e\xdf\x3b\xd7\xdb\x0a\x16\x70\x4c\xe0\x7f\x46\xe9\xfc\x7a\x5b\x95\x2f\x5b\x2b\x3a\x13\xad\x72\xce\x8b\x62\x34\x97\x90\x91\xfe\x29\xa2\xff\x77\x00\x00\x00\xff\xff\x8b\x8c\x74\x6f\x77\x0c\x00\x00")

func svcClientGrpcClientGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGoTpl,
		"svc/client/grpc/client.go.tpl",
	)
}

func svcClientGrpcClientGoTpl() (*asset, error) {
	bytes, err := svcClientGrpcClientGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.go.tpl", size: 3191, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x9c, 0x1e, 0xf9, 0xb2, 0x33, 0x92, 0xf4, 0x36, 0x92, 0x5e, 0xbc, 0x90, 0xf6, 0xad, 0x67, 0x85, 0xc4, 0x65, 0xd0, 0x49, 0x51, 0x6d, 0x79, 0xcc, 0xd1, 0xa4, 0x63, 0xb, 0xf3, 0x0, 0x2e}}
	return a, nil
}

var _svcClientHttpClientGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\xbd\xa7\xf0\xdc\xc1\x3e\x04\x4b\x47\x24\x72\x81\x28\x7c\x5a\x84\x49\x22\x63\x89\xc1\xf2\xdd\x91\x50\xf7\xf7\x22\x64\xa5\x1b\x40\x47\xfd\xbe\x64\x47\x87\x55\x1f\x26\x87\xfb\x14\xc7\x7b\x6a\x75\x7c\xb8\xe9\x13\xdd\x79\x1f\xf4\x18\x46\x6d\xdc\x41\xab\x64\x2e\x11\xad\xaa\x12\x6f\xa5\x5c\x37\xe8\x84\xf1\xe5\x4f\xcb\x59\x89\x33\x97\x5f\x00\x00\x00\xff\xff\x39\x4e\x2a\xed\x65\x00\x00\x00")

func svcClientHttpClientGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGoTpl,
		"svc/client/http/client.go.tpl",
	)
}

func svcClientHttpClientGoTpl() (*asset, error) {
	bytes, err := svcClientHttpClientGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.go.tpl", size: 101, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x66, 0xd0, 0xaa, 0x0, 0x46, 0x7, 0x64, 0xd2, 0x77, 0xb, 0xea, 0x1, 0x50, 0x47, 0x83, 0x41, 0xe1, 0xc3, 0xab, 0x25, 0x16, 0xe, 0x0, 0x6a, 0xbe, 0x3c, 0x5d, 0xbc, 0x12, 0x23, 0xfc, 0x19}}
	return a, nil
}

var _svcConfigGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xc1\x4a\x43\x41\x0c\x45\xd7\x2f\x5f\x11\xba\xd2\x85\x9d\x6f\x90\xaa\x75\x59\x4a\x7f\x60\x3a\x93\x37\x2f\xd4\x66\xc6\x24\x53\x10\xf1\xdf\x65\x90\xb7\x52\x30\x90\x45\xc8\xb9\xf7\x72\x5b\x4c\x97\x58\x08\xed\x96\x00\xf8\xda\xaa\x3a\xde\xc1\xb4\x29\xec\x4b\x3f\x6f\x53\xbd\x86\x52\x1f\x2e\xec\x61\xac\x6b\x14\x1b\x4c\x58\xdc\xdb\x06\xee\x01\x42\xc0\x5d\x95\x99\x0b\xa6\x2a\x1e\x59\x0c\x7d\x21\x54\x7a\xef\xac\x94\x71\x66\x7a\xcb\x86\x73\x55\xd4\x2e\xc2\x52\x30\xa2\x91\xde\x48\xc1\x3f\x1a\xad\x6a\x73\xed\xc9\xf1\x13\xa6\xd7\xd3\xe9\xf0\x98\xb3\xe2\xef\x31\x57\x96\x02\xd3\x13\x9d\x7b\xf9\x9b\x59\x91\xfd\xf1\xb0\xfb\xc7\x65\x4f\x42\xca\x69\xe4\x1d\xc9\x5a\x15\xa3\x67\x49\x35\x93\xe2\xa8\xb7\xfd\x39\xd6\xd7\x4b\x97\x04\x5f\xf0\x1d\x00\x00\xff\xff\x22\x60\xfa\x2e\x31\x01\x00\x00")

func svcConfigGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcConfigGoTpl,
		"svc/config.go.tpl",
	)
}

func svcConfigGoTpl() (*asset, error) {
	bytes, err := svcConfigGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/config.go.tpl", size: 305, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0x42, 0xb6, 0x56, 0xec, 0x8d, 0xd5, 0xc3, 0xa4, 0xd1, 0xd3, 0xb3, 0xd9, 0x90, 0x88, 0x46, 0x5d, 0x3, 0x9a, 0x74, 0x97, 0x1e, 0xd8, 0x3c, 0x96, 0xcb, 0x60, 0x8d, 0x98, 0xf, 0x80, 0xc3}}
	return a, nil
}

var _svcEndpointsGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x6f\xdb\x38\x12\x7f\x76\x80\xfc\x0f\xb3\x46\x0f\xb5\x0b\x55\xde\x7b\x4d\x91\x87\xbb\x36\xbb\x2d\x70\xfd\xc0\xa6\x7b\x7d\x28\x82\x05\x2d\x8d\x2c\x22\x12\xa9\x25\x29\x3b\x39\xc3\xff\xfb\x61\xf8\x21\x53\x96\xe2\x38\x5b\xa0\xb8\x03\xfa\x10\xd8\x16\xc9\xe1\xfc\xe6\xf7\x9b\xe1\x87\xb2\x58\xc0\x6b\x99\x23\xac\x50\xa0\x62\x06\x73\x58\xde\x43\xc9\x36\xb7\x29\xbc\xf9\x08\x1f\x3e\x7e\x86\xab\x37\xef\x3e\xa7\xe7\x67\x8b\x05\xfc\x86\xaa\x15\x82\x8b\x95\xed\x00\x1b\x5e\x55\x20\xd7\xa8\x36\x8a\x1b\x04\x53\x72\x0d\x05\xaf\xd0\x75\xfe\x37\x2a\xcd\xa5\xb8\x80\xed\x36\xf5\xdf\x77\xbb\xb8\x05\xde\x30\x83\x71\x33\xfd\xa6\x2e\xe7\x67\x0d\xcb\x6e\xd9\x0a\x41\xaf\x33\xfa\xb9\x58\xc0\xe7\x60\x1c\x32\x29\x0c\xe3\x42\x43\x8d\xa6\x94\xb9\x06\x23\xa1\x66\xb7\x08\x5c\xe4\x7c\xcd\xf3\x96\x55\x80\x22\x6f\x24\x17\x46\x43\xa1\x64\x0d\x1a\xd5\x9a\x67\xa8\x13\x6b\x4a\xe1\x9f\x2d\x6a\x03\x4c\xe4\xa0\x50\x37\x52\x68\x04\x73\xdf\xa0\x35\x45\x7d\x09\x8b\xd4\xb8\x37\x93\x00\xd3\xb0\xc1\xaa\xa2\x4f\x14\x99\xcc\x51\x69\x32\x60\x0d\xe6\xe8\x1f\x14\x52\xf9\x91\xd6\x5c\x62\x1f\x30\x0a\x52\x01\xb2\x55\xa0\xdb\xa6\x91\x8a\x62\x6c\x14\x13\x9a\xbe\xd3\x7c\x9c\x55\xfc\x3f\xcc\x70\x29\xac\xb9\x42\xaa\x9a\x19\x9d\x12\x72\x5e\xdb\x4e\xb3\xf3\xb3\xc9\xb4\xa8\xcd\x94\x3e\x29\x00\x78\xe7\xbe\x0b\x34\x8b\xd2\x98\x86\x7e\xec\x6d\x4e\x57\xdc\x94\xed\x32\xcd\x64\xbd\x58\xc9\x97\xb7\xdc\x2c\xe8\xaf\xeb\x10\x86\x90\x85\xf1\xae\x01\xb9\xeb\xd4\x2c\x61\xba\xdd\xa6\x9f\xfe\xf9\xce\xba\xf3\x89\x99\x12\x5e\xee\x76\xd3\xf3\xb3\xb9\xa7\xe7\xaa\x0b\x78\x26\xab\x0a\x33\xa3\x03\x6e\x53\x46\x71\x04\x53\x32\x03\x99\xac\x1b\x0a\x12\x13\xc0\xf2\x3c\xb0\x93\xc2\x3b\xf3\x5c\x5b\x6b\x35\x32\x61\x88\x8c\x25\x42\xab\x31\xa7\xa8\x33\x28\xb1\x6a\x50\x81\x36\xaa\xcd\x4c\x42\xcd\x7e\xae\xf1\xa9\xb8\x30\x12\x98\xb5\xa7\xb9\x58\x55\x08\x0d\x53\xac\x46\x83\xca\x0a\xd4\xb6\xbc\x13\xc0\x1c\xe5\x2a\x01\x6e\x9e\x6b\x9a\xaf\x68\x2b\xcb\x5c\xd1\x8a\x8c\x58\xf1\x6e\x0b\x24\xe2\x24\xc8\xc6\x26\x0a\x48\x1a\xdb\xa0\x7a\x19\xe6\xb4\x16\x97\x4c\x73\x9d\xc2\x2f\x52\x01\xde\xb1\xba\xa9\x30\x81\x7b\xd9\x42\xcd\x57\xa5\x81\x86\x69\xd2\x4d\x14\x2f\x72\xb2\x9b\xc9\x4d\xd4\x28\x99\xb7\x19\xba\x58\x30\x01\xc4\x56\xfa\x96\x89\xbc\x22\x2f\x37\xdc\x94\x80\x2c\x2b\x7d\x02\xc0\x2c\xcc\x3f\x87\x0d\x57\x98\x43\xdb\x38\xab\xba\xc1\x8c\x17\x3c\x83\x86\x99\x32\x85\xd9\x3b\xe7\x21\xd7\x34\xc3\x92\x2d\xab\x7b\x60\x50\x73\x6d\x5c\xf6\x40\x8e\x9a\xaf\x04\x8d\xe5\x62\x2d\x6f\xd1\x06\xf4\xda\xb1\xd3\x65\x9b\x75\x12\x0f\x48\x77\x9c\x90\x8d\x10\xcd\x74\xde\x8f\x71\x56\x71\x14\xa6\x1f\xe3\x88\xc1\x7d\xee\x56\xf7\x94\xe1\xce\x20\xe6\x47\xf9\xa4\x24\x73\x11\xe3\x14\xe7\x1a\x9d\xc2\xf6\x3e\x73\x61\x50\x15\x8c\xb4\x35\xce\x87\xb5\xd6\x4d\x37\x5e\x41\x5a\x9a\x0d\xfa\xb9\x93\x7e\xc0\xcd\x6b\x8f\x28\x93\xf5\x92\x0b\x1b\xac\xda\x3b\x19\xf1\x9b\xf8\x32\x63\x5a\x25\x80\x5b\x51\x93\x87\x19\xab\x2a\x54\x4e\xd7\xde\xdb\xf4\xfc\xcc\x02\x1a\x44\x75\x6b\x33\x30\xfd\x5d\x74\x28\x31\xdf\x6e\x7f\x95\x1f\x58\x8d\x90\x86\xd1\xf4\x6b\xb7\xbb\xb6\xc1\x3f\x3f\x9b\x90\x97\xee\xc7\xc7\xc6\x69\x18\x00\x6a\xd6\x7c\xd5\x46\x71\xb1\xba\xf9\x7a\xd3\x21\x4a\xe3\x7e\x7e\xe8\x6f\xae\x46\xbe\x09\x95\x2d\x1e\xba\x1f\xe8\x9a\x7d\xdf\x5f\x5a\x91\x75\xa3\x5d\x55\xbd\x0a\x95\x72\x74\xb4\x6b\x0d\x7d\xa3\xe1\x5e\xea\xf4\xc4\xba\x1d\x0f\xa7\x4c\x99\x59\x0a\xc2\xc0\x2f\xb4\xf8\xa8\x04\x5e\xf8\xa7\xd6\x19\x5b\x97\xb6\x5b\xc5\xc4\x0a\xe1\x19\x87\x8b\xcb\x7d\xa4\xde\x3b\x25\xd3\x4a\x33\xd9\x6e\x81\x17\x96\xa2\x99\x90\x06\x9e\xf1\x60\xe0\xda\x28\x64\xf5\x3c\x7a\xec\x66\x0b\xcf\xed\xe8\xc9\x76\xfb\x8c\xfb\xc8\x07\xda\x26\x41\x39\xe9\x55\x57\x16\x68\x1a\x14\xb9\x1d\xb4\xdd\xbe\xa4\xef\xf4\xd5\x2e\x75\x04\x08\x3e\xe0\xa6\xa3\x7d\x36\x8f\x24\x40\xdc\x7b\xf1\x74\x0f\xe9\xd9\x90\xdf\x8b\x09\xd8\x65\x70\x76\x02\xc9\xf3\x24\x98\x38\xe0\xf9\x62\x68\xe3\x08\xdb\xb1\x99\x3e\xe1\x17\x47\xcc\x0c\x69\xdf\xdb\x89\x99\x1f\x03\x74\x2a\xfb\xd6\x62\x88\x70\x5c\xa9\xbe\x87\x28\x2c\xa3\xb3\x28\x91\xe7\x10\xe9\x64\x96\x99\x3b\xf0\x4b\x78\xfa\xda\x7d\x26\x54\x39\x5f\x34\xcb\xb4\x4b\xeb\xfd\x9c\xbb\xdd\x1c\x66\xc3\x36\x37\xf1\x6e\x97\x00\x2a\x25\xd5\xdc\x2a\x65\x32\x09\xfb\x19\xfb\x98\x00\x62\x3a\xa2\x51\xf2\x81\xe6\x9c\xdb\x31\xbc\xb0\x9d\x7f\xba\x04\xc1\x2b\x6f\x27\x88\x4e\xf0\xca\x9a\xb2\x0f\x77\x7e\x0a\xdb\x12\x66\x4a\x8f\x38\x37\x4f\xc8\x00\x8d\xda\x1d\x26\x81\x4f\x01\xcb\xce\x7b\x5a\x7f\x7a\x14\xd9\x35\xee\x99\x41\x4b\x91\xe7\x24\xa6\xed\x99\xc1\x51\xe6\xbe\x95\x3a\xc7\x1d\xf9\x33\x16\x35\x0d\x16\x69\x3c\x79\x5c\x75\xe7\x30\x48\xfd\x83\x68\x5a\xf9\x8e\xf2\x1f\xf6\xa4\xdd\x8a\xb5\x25\xda\xbb\xdd\x69\xf4\xd8\x31\xdb\x23\x9d\xec\xff\x49\x61\xf1\x56\xc6\x28\x09\x5a\xf2\x03\xd6\x9d\x40\x74\x7a\x20\x4e\xeb\x4c\xe8\x37\xaa\x8d\x71\x75\x04\x7d\x74\xad\xeb\x8e\xfd\xd0\x14\x28\x0a\x32\x98\x74\x3a\xe8\x0b\xe2\x8b\x62\xcd\x3f\xaa\xea\xea\x2e\xc3\xc6\xc0\x46\xb1\x46\xbb\x1d\x4f\x17\xd7\x82\x63\x95\xd3\x9e\xcf\xaf\x91\xfb\x8a\x69\xa5\xe3\xb6\x09\x23\xfb\xd9\xf4\x3d\xcf\xf3\x0a\x37\x4c\xf9\x53\xca\xef\x3a\x1c\x5c\x68\xab\xde\x34\xd5\x3d\xad\xf6\xb4\x8b\x31\x64\xbe\xee\xba\xdb\x9d\x1a\xae\x51\xdd\x77\x34\x53\xd6\xd2\x62\xae\xbb\x05\x7c\xb1\x00\x57\x61\x69\x1f\x93\x44\x9b\x88\x8c\x09\xda\xcc\xd2\xf6\x0f\x73\x1a\xb7\xbc\x07\x41\xe4\xb8\x4d\x2e\xde\x65\x55\x9b\x63\xee\x8e\x2b\x4b\x24\x1f\x08\x76\x83\x79\x3a\x8c\xc8\x6c\xef\x55\x02\xd3\x6b\xc3\x4c\xab\xa7\x09\x4c\x3f\x71\xb1\x9a\xce\xfd\x92\x32\x43\x78\x11\x55\xa0\x87\x0c\xc0\x48\x64\x92\xbd\x3f\x69\x9a\xba\xd2\xeb\xb4\xc6\x85\x7f\x7e\x71\x19\x2f\xca\x8e\x84\xed\x6e\xeb\xf8\x7d\x09\x8f\x96\xd8\x6f\xcf\xd4\xc9\x34\xd2\xed\xf4\x02\xb6\xbb\x24\xd8\xed\xe4\x35\x89\x16\xdb\x89\x15\xd7\x84\x68\xfe\x83\x00\xda\x7c\xb1\x6e\x76\x60\xad\xfb\xbc\xa0\x76\x79\x4b\xed\x01\xee\x57\xbc\xbb\x79\x05\x3f\xc9\x5b\x9f\x01\x0d\x13\x3c\x9b\x15\xb5\x49\xaf\x1b\xc5\x85\x29\x66\xd3\xab\x60\xa4\x13\xc7\xf3\xbf\xe9\xe7\x90\x4b\xd4\x40\x40\xf0\x8e\x6b\xf3\x0a\x34\x62\xac\xa9\x4e\x97\x3a\x5d\xc9\x29\xb9\x35\x9f\x87\x72\x39\xc9\xb1\x42\x83\xb3\xe0\x84\x6d\xed\xe1\xe0\x22\xdb\xa3\xe8\xa8\xf9\xae\x24\xf0\xc2\x7a\x71\x79\x09\x3d\x3a\xba\x4a\x31\xba\xfc\xc0\x65\x14\x83\xd9\x68\x97\x79\x5c\x36\x8e\x51\x1a\x4a\xc6\xbf\xd8\x12\x2b\xcc\xf7\x22\x76\xb7\x13\x2b\x34\x21\xe9\xe2\xd3\xa1\xcb\xbd\x4d\x89\xa2\x6b\x95\x71\x9e\x79\x6b\x2e\x5b\x12\x57\x20\x7c\x0a\xb7\xae\x37\xb8\x3b\x0f\xe6\xee\x4d\x78\x46\xe7\x23\xc5\x33\x7f\x7e\x8d\xbc\x28\x79\x56\xda\xb1\x9a\x30\x0c\x9d\xf0\x07\x02\x3f\x3c\x1c\x88\xa4\x0a\xc7\x81\x21\x30\xbb\x8a\xb8\xcc\x4b\x86\x4b\xce\xc8\x2a\xd4\xaf\xaa\x3d\x6c\x7f\xbd\xb8\x0e\xfc\x4a\x3c\x56\x1b\x77\x85\x19\xf2\xb5\x3b\x41\x5a\x98\x07\xc7\xf3\x14\xae\x11\xc7\xed\xd8\xa6\x70\xb6\xed\xaf\x04\x24\xfa\x1c\x0d\xe3\x95\x3d\x87\x86\xc4\x75\xb7\x26\xfe\x08\xcd\x2a\x6e\xee\xd3\xa3\x45\xb0\x17\x81\xb8\x16\x3e\x39\xb2\x3f\x2a\xe5\x8f\x4a\xf9\xfd\x2a\x65\x6f\x60\x32\xbe\xb5\x7f\x72\xe1\xf4\x39\xf1\x85\x9b\xf2\xad\x31\x8d\xdb\xbe\x1c\x29\x0e\x28\x8c\xba\xa7\x74\x2e\x78\x85\x39\xbc\x1d\xdc\x33\x3c\x52\x37\xc6\x4f\xa4\x27\x6d\xc6\xdc\xcd\x12\x48\x3f\xd1\xff\xc0\x7e\x6c\x2c\x6a\x33\x1d\xe1\x7a\xea\xfe\xec\x51\x83\x0f\xc4\xef\x47\x21\xfa\xbf\x2f\x44\x6b\xb6\x97\xf6\x91\xdb\x39\x42\x2b\x03\x5a\x4c\x07\xf7\x40\x5f\xb9\xc8\x6e\x5e\x41\x07\x3c\x98\xbc\xa4\x84\x42\x91\xcf\x64\x02\xb1\xa0\x9c\xf3\x80\x95\xc6\xc1\x08\x7b\xfd\xf2\x90\x2f\x09\xfc\x7d\x1e\xf7\xff\xfa\xf3\x0d\x5c\xf6\x4c\x77\x61\x79\xc8\x4d\xb8\x0c\x88\x87\x35\xa9\x9f\x09\xbe\x14\x49\x81\xdf\xa7\x12\x0d\x3d\x78\x20\xad\x8f\xa4\xf3\xc1\xf8\x4e\x65\x61\x83\x71\x42\x5a\xbb\x14\x3e\x51\x19\x8f\x09\x23\x38\x10\xa9\xe3\x14\x71\xc4\xda\xd8\xf7\x7f\xc8\x0f\x27\xa1\x5e\xac\x82\x0c\xe8\xef\xa8\x5f\xb1\x1c\x82\x14\x7e\x45\x33\x24\xd6\x5d\x30\xb8\x57\x4c\xe3\x6e\x00\xd3\x5a\x66\xdc\xbe\xcf\xb4\x94\xd3\xba\xb0\xe2\x6b\x14\xfb\x4d\xdc\x9e\xb9\x88\xb8\xb1\xf9\x0e\xa9\x9b\x3f\x88\xde\x55\xdc\x22\xc0\x78\x22\x1b\xfe\xde\xa4\x97\x12\xe1\xe1\x23\xa9\xf8\xf3\x7c\x1f\xb2\x6b\x07\xa1\x7f\xb5\x4b\x01\xe1\x2b\x8a\x19\x1c\xb9\xd1\x05\xf7\xf6\xe2\x78\x88\x46\xed\x0f\xe5\xed\xdf\x8a\x1e\x9b\xce\xc9\xdb\x45\xe7\xe0\x26\xba\xa7\x0a\x6f\x6a\xa0\x8a\x03\x88\x41\x16\xc4\xf5\x31\x90\xdf\xa8\x8d\xc7\x80\x17\xac\xaa\x96\x2c\xbb\x3d\x8e\xfc\x98\x83\x5e\x45\x1e\x76\x5f\x45\x0f\xc6\x69\xa0\xa3\x2e\x6a\xb1\x8e\x82\x73\x23\x72\xe9\x5d\xe1\x8f\xea\x65\x78\x75\xff\x34\xc1\xf4\x66\x18\x06\xce\xbf\x58\x3f\x3a\x61\x5f\x32\xfd\xb7\x0e\x3d\xcd\x78\x63\x23\x9a\xe9\xe3\x1c\x17\xcd\x08\xd2\x6f\x56\xcd\x23\xe8\x47\x64\x33\x06\xff\xa8\x8f\x5e\x38\x1e\xfb\xa1\x70\x1e\x8a\xd6\x40\x39\x5d\xec\x4e\x52\x4e\xf4\xd2\x26\x52\x4d\xd6\x6a\x23\x6b\xfb\xee\x1a\xe2\x1e\x7d\xc1\x00\x17\xda\x20\xb3\xb7\x0d\xfe\x45\x6b\x89\x90\x63\xc1\xda\xca\xd0\x72\x7f\x54\x51\x91\xdd\x61\x3c\x4b\xd7\x08\x27\xbf\x33\x8a\x94\x15\xbf\x87\xea\xa9\xca\x1b\x1d\xa8\x2a\x46\x18\x2b\x6a\x00\xdf\xfd\x8b\xc8\x93\x94\x73\x04\xe5\xfc\x64\x74\x41\x1a\x65\xf8\x37\x82\x58\x1a\xe3\x70\x07\xb2\xe8\xc0\xc7\xb2\xb0\x57\xfc\x21\x1a\x6f\x99\x3e\x8c\x46\x56\x62\x76\xab\xed\xc1\xe1\x41\x4d\x70\xfd\x97\xb3\x6b\x38\xe3\x30\x46\x4b\x29\xdd\xbb\x8b\x3f\x4e\x81\xbd\x87\x26\x9d\xd6\xff\x1b\x00\x00\xff\xff\x82\xce\xeb\xc1\x22\x25\x00\x00")

func svcEndpointsGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGoTpl,
		"svc/endpoints.go.tpl",
	)
}

func svcEndpointsGoTpl() (*asset, error) {
	bytes, err := svcEndpointsGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.go.tpl", size: 9506, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x43, 0xd0, 0x76, 0x9e, 0xc5, 0xf5, 0x72, 0x30, 0x5e, 0xa4, 0x1f, 0xfb, 0x81, 0xfa, 0xe9, 0x2b, 0xba, 0x1, 0x46, 0x33, 0x66, 0x61, 0x53, 0xde, 0x9c, 0xd8, 0x53, 0xb7, 0xd0, 0xc5, 0xed, 0x9f}}
	return a, nil
}

var _svcServerRunGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x4b\x6f\xe3\x46\x12\x3e\x93\xbf\xa2\x86\xc8\x2e\xc8\x05\xa7\x19\x60\x37\x7b\xd0\x46\x87\x19\xcb\xe3\x18\x98\x87\x20\x29\xc9\x71\xd1\x22\x8b\x54\xc3\x64\x37\xb7\xbb\x29\xd9\x20\xf4\xdf\x17\xd5\x7c\x88\xb2\x2d\x79\x82\x00\xf1\x61\x44\xb2\xaa\xbf\xaa\xfa\xea\xd1\x35\x49\x02\x37\x2a\x43\x28\x50\xa2\xe6\x16\x33\xd8\x3e\xc1\x8e\x1f\x1e\x18\x2c\xbe\xc1\xd7\x6f\x1b\xb8\x5d\xdc\x6f\x98\x9f\x24\xb0\x42\xdd\x48\x29\x64\xe1\xe4\x70\x10\x65\x09\x6a\x8f\xfa\xa0\x85\x45\xb0\x3b\x61\x20\x17\x25\x3a\xdd\xdf\x50\x1b\xa1\xe4\x0c\xda\x96\xf5\xcf\xc7\xe3\x44\x00\x0b\x6e\x71\x2a\xa5\xf7\xe3\xd1\xf7\x6b\x9e\x3e\xf0\x02\xc1\xa0\xde\xa3\xf6\x7d\x51\xd5\x4a\x5b\x08\x7d\x2f\x48\x95\xb4\xf8\x68\x03\x1f\x00\x20\xc8\x4b\x5e\xf4\x8f\xca\x0c\xdf\x2a\x1b\xf8\x5e\x50\x08\xbb\x6b\xb6\x2c\x55\x55\x62\x84\x6e\x6a\x83\x32\x29\x55\xa1\x1b\x43\x52\x89\xb6\xff\x49\x76\xd6\xd6\xd3\xe7\xa4\xae\xb5\xca\x03\xdf\xf7\x92\x04\xfe\x99\xc1\x92\x6b\xfb\x44\x80\x4a\x15\x25\xb2\x42\x95\x5c\x16\x4c\xe9\x22\x29\x74\x9d\xf6\x7a\x1b\x0a\x7c\x8d\x7a\x2f\x52\xf4\xbd\x7a\x0b\x41\xdb\xb2\xe5\xc7\x7b\xe7\xf8\x92\xdb\x1d\xbc\x3f\x1e\xc9\x4a\xdb\xb2\xf3\x8f\x90\x98\x7d\x7a\x41\xb2\xe3\x32\x2b\x51\x9b\xc0\x8f\x7c\x7f\xcf\x35\x2c\x30\xe7\x4d\x69\x6f\x94\xcc\x45\x01\x66\x9f\xb2\xee\xd1\xf7\xf3\x46\xa6\x20\xa4\xb0\x61\x04\xad\xef\x11\x31\x6c\x6d\xb5\x90\xc5\x6f\x5c\x87\x7f\x3f\x3b\xc8\x16\xb8\x6d\x8a\x0f\x59\xa6\x63\x08\x32\x7a\x66\x3c\xcb\x74\x10\x43\x30\xfb\xe9\xc7\x7f\xff\x48\x0f\x4e\x05\xb8\xcc\xa0\x42\xab\x45\x6a\xa0\x14\xc6\xa2\x04\xd2\x44\x63\x82\xe8\x2d\x23\xbf\x6c\x36\xcb\xde\x06\xd1\x3a\x35\xf1\x93\x33\x41\x0a\x7f\x18\xf5\x6e\xb5\xbc\xe9\x51\x89\xfe\x29\xea\xbf\x1c\x6a\xb1\x5a\xde\x40\x48\xd8\xd1\x4b\x70\x97\xab\x5f\x0d\x02\xca\xbd\xd0\x4a\x56\x28\x2d\xec\xb9\x16\x7c\x5b\xa2\x89\x41\xe4\x60\xd0\x32\xf8\x54\xf2\xc2\xc0\x8e\xef\x11\x6a\x2d\x94\x16\xf6\xc9\x55\x39\xdc\xca\x3d\xe9\x1b\xe6\x7b\x22\x77\xc0\x30\x9b\x83\x32\xec\x0e\x2d\xca\x7d\x18\x2c\x6e\x3f\xfe\x7a\xf7\xdf\x0f\x8b\xc5\x2a\x88\xfe\xd3\x29\xbc\x9b\x43\x10\x50\x52\xbc\x0b\x59\x80\xb9\x53\xf4\xbd\xa3\x43\x75\xb5\x7e\x8e\xba\xfc\xb6\xda\x10\x9e\x13\x5d\xc2\x1b\x08\x87\x39\xe4\x95\x65\xeb\x5a\x0b\x69\xf3\x30\x98\xfd\xcd\x04\xb1\x3b\x1a\x0d\x26\x5e\x71\x9c\x4e\x7f\x9f\xdf\x13\x3b\x53\xb7\x5f\xc1\xa4\x64\x7d\x1f\xe6\x90\xd6\x09\xe6\xb1\x2f\xea\xaf\x78\xb8\x95\x59\xad\x84\xb4\x26\x34\x5d\x8b\x41\xbd\x65\x6d\xcb\xfa\x86\x63\x5f\x79\x85\xc7\xe3\xda\x4d\x8b\xc8\xb5\xc5\x78\x82\x6c\x25\x09\x7c\x6c\x8c\x90\x68\x0c\x64\xaa\xe2\x42\xb2\xae\x12\x7e\xd7\xbc\x1e\xba\x16\x0e\xc2\xee\xa0\x12\x59\x56\xe2\x81\x6b\x34\x0c\xd6\x88\x30\xb4\x60\x32\x95\x14\xca\xf7\x06\x4f\xe6\xa3\x0a\x23\xb8\x1e\x6d\x70\xb4\x2f\xb9\xc1\x9d\xd1\xbc\x47\xdd\x1c\xfa\x5e\xdb\x6a\x2e\x0b\x84\x1f\x04\x51\x37\x06\xf4\x05\xed\x4e\x65\x86\xa6\x80\xef\xd1\x54\x6b\x5b\xaa\x4d\x6a\xc7\x50\x2a\x0b\x3f\x08\xb6\xc2\xff\x35\x68\xec\xda\x6a\xe4\x55\x34\xf9\x6c\x6a\x25\x0d\x0e\xdf\x8f\x47\x37\x15\x3d\xaf\x6d\x37\xea\xb3\x3a\xa0\x26\xad\x8e\xb0\xd1\xab\xb9\xe3\xec\x0b\x7f\xc0\xb6\x7d\x21\x3d\x85\x02\xfd\x5f\xdb\x02\xca\x8c\xa0\xbd\xb6\x45\x99\xd1\x03\x05\x8a\x23\xe9\xb3\x0e\xf1\x2c\x75\xd1\x5f\x19\xed\xe8\x0a\x7b\x25\x22\x98\xc3\x15\x36\xae\x85\x79\xaa\x1a\x83\x25\xa6\x74\x53\x9e\x2a\xed\x0f\x16\xd0\x89\xad\x67\x25\x74\xa2\x6c\x54\x21\x76\x35\xda\x46\x4b\x18\xbf\x51\x83\xd0\x85\xdc\x48\x30\x96\x6b\x6b\x80\x83\xc4\x03\xd0\xb0\xed\x6f\xce\x18\xdc\x34\x1c\x5e\x88\x50\x0e\x6e\xe0\xf7\xdf\x3a\x9f\xed\x0e\x09\xa9\xe6\xc6\x60\x06\x69\x77\xb9\x90\x72\xa9\x8a\x02\x75\xd7\x86\xab\x46\x86\x69\x3e\xbd\x74\xdc\x45\x33\xb4\xc1\x6c\x12\xc4\x57\x3c\x0c\x6d\x10\x3d\xab\x8a\xd7\x9a\x99\x82\x13\x39\xa4\x79\xc1\xee\x68\x01\x11\x29\x4d\x98\x21\xb5\xb7\x32\x55\x19\x6a\x98\xcf\x41\x8a\xd2\x8d\x8e\xb7\x34\xfb\x09\x40\x6f\x24\xef\x55\x07\x35\x9a\x2d\x5d\x1e\x71\xbb\x56\xe9\x03\xda\x3e\x64\xdf\x3b\x98\x9b\xbc\x18\x8a\x77\x14\x77\xd1\x92\xe1\xbb\x86\xeb\x6c\x06\xc4\x47\x98\xda\x47\xe8\x97\x11\xe2\x83\x7e\x63\xd0\xf0\x0f\x77\xd7\xf5\xe5\x1a\x41\xf8\x42\x05\xb5\x56\xda\x51\xe7\x0d\x29\x3d\x65\x7f\x30\xe9\x0c\x91\x89\x18\x7a\x92\x62\xd0\x91\xef\x79\xc7\xd8\xf7\xbc\x6f\x5a\x14\x42\xde\xec\x30\x7d\x40\xdd\xbb\xf3\xc2\xf2\x56\xa9\xf2\x0d\x2b\x67\x38\xe1\x4b\x43\x3d\x4f\x5f\x30\xdd\x71\x29\x52\x5e\x9e\xc6\x17\x6a\x9d\x12\x51\x15\x7f\xc0\x90\xc4\x7d\x5c\xdd\x89\x7b\x69\x51\xeb\xa6\xb6\x83\x51\xe6\x7b\x85\x3a\x79\x30\xca\x7f\xe9\xbe\x84\x04\xd7\x9f\xed\x16\x8f\xee\xe6\x1e\x0e\xba\x08\x3b\xce\x46\x8c\xcf\xae\x36\xd9\xef\xc2\xee\x3e\x09\x2c\x33\x13\x76\xdb\x1d\xeb\xde\x5c\xe4\x81\xd5\x5c\x1a\xba\xf9\x82\x59\xbf\xe9\x04\xb1\x13\xb8\xb5\x61\xd6\xf5\x39\x95\xd3\x69\x23\xa2\xd8\x23\x76\x2f\x73\x15\x06\x9d\x17\x42\x16\x6e\x75\xf0\x2a\x57\xe5\xc4\x72\x5f\xe1\xf8\xa5\x79\xa4\x12\xf7\x2a\xd6\x45\x12\x06\x89\xb3\xd2\xed\x90\x49\x10\x77\xea\x7d\x98\x9f\x28\x0c\x27\x61\xf7\x32\xc3\xc7\xe8\xca\xd1\xb4\xca\x4a\x21\xf1\x32\xc2\x4d\xa7\x70\x0d\x83\xfe\x11\xe5\x15\x8c\x65\xa7\x70\x0d\xc3\x3c\x55\x5b\x55\x5e\x86\x58\x3b\xf9\x35\x04\xab\x79\x7a\xc5\x87\x0d\x89\x23\xc7\xaf\x2b\xaa\x9f\xdf\x77\x9a\x9f\x1d\xf7\x1f\x64\xe6\x88\x0e\xcf\x93\x04\x15\xad\x32\x61\x5f\x32\x6e\x91\x1c\x53\x0d\xa1\x90\x69\xd9\x64\x68\x4e\x1d\x1e\x3d\xab\xa3\x61\xc4\xff\x89\x6a\x22\xa3\x17\x8a\x69\xdc\x7c\x2f\xd5\x92\xe7\xed\x86\x29\x43\x97\x2e\xe9\x0f\x9d\xf0\xcc\xa3\xf8\x34\xef\xe3\x37\x26\x64\x0c\x6e\x7c\x45\xdf\x41\xe4\x69\x35\xdf\x4d\x79\x74\x97\xc5\x18\xe4\x9f\x68\x3d\x98\xfc\x9d\xb3\x46\x26\x82\xf8\x5c\xe1\x39\x7d\xe3\x8a\x3f\xaa\x5d\x20\xb1\x94\x6e\x9c\x12\x95\x12\x6d\x1f\x68\x18\xd8\xb4\x0e\xe2\x33\x24\x52\x16\xb9\xd3\x7d\x77\xba\x46\x46\x9a\x50\xeb\xd3\x9c\xa4\x9c\x51\x31\x1a\xbd\x9f\xe6\x88\xa0\xba\x05\x73\x7a\x2b\x7b\x9e\xbb\xd5\xdc\xff\x44\x86\x99\xa0\xdd\x44\xa8\xb7\x6c\x85\x05\x79\xa4\x2f\x2c\xaa\xa1\x89\xc1\xe8\xfd\x59\xe5\x1b\xd6\x25\xa9\x94\xd3\xbc\xac\x1a\xf9\xce\x7f\x95\xfe\x5b\x1a\xba\xe1\xcf\xef\xdd\xfc\xec\x39\xc2\x47\x61\x83\x88\xb6\x83\xff\x07\x00\x00\xff\xff\x76\x6b\x03\xe9\xd7\x0f\x00\x00")

func svcServerRunGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGoTpl,
		"svc/server/run.go.tpl",
	)
}

func svcServerRunGoTpl() (*asset, error) {
	bytes, err := svcServerRunGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.go.tpl", size: 4055, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc2, 0x98, 0xfb, 0x45, 0xf1, 0xde, 0x6c, 0x57, 0xcb, 0x67, 0xa1, 0xf2, 0xc1, 0xba, 0xee, 0x75, 0xca, 0x7a, 0x4, 0x8f, 0x5f, 0x83, 0x1f, 0x7e, 0x9f, 0x59, 0xe9, 0xcf, 0x2a, 0xd4, 0xdb, 0x88}}
	return a, nil
}

var _svcTransport_grpcGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4b\x6f\xe3\x36\x10\x3e\x8b\xbf\x62\x6a\x2c\x0a\x6b\xe1\x50\x3d\x07\xc8\x65\x93\x74\x13\xb4\x79\x20\x4d\xb7\x87\xc5\x62\x41\x4b\x63\x89\xb0\x44\x2a\x24\x6d\xc7\x25\xf4\xdf\x17\x43\x3d\x2c\x27\x8e\x93\x83\x01\x8b\xf3\xcd\xeb\xfb\x86\x23\x25\x09\x9c\xeb\x0c\x21\x47\x85\x46\x38\xcc\x60\xbe\x85\x42\x6c\x96\x1c\x2e\xee\xe0\xf6\xee\x11\x2e\x2f\xae\x1f\x39\x4b\x12\x78\x40\xb3\x52\x4a\xaa\x3c\xd8\x61\x23\xcb\x12\xf4\x1a\xcd\xc6\x48\x87\xe0\x0a\x69\x61\x21\x4b\x0c\xd8\x6f\x68\xac\xd4\xea\x14\xbc\xe7\xdd\xff\xa6\x19\x19\xe0\x42\x38\x1c\x5b\xe9\xb9\x69\x18\xab\x45\xba\x14\x39\x82\x5d\xa7\x8c\xf0\x8f\x7d\x58\xa8\x8d\x5e\xcb\x0c\x2d\x58\x34\x6b\x34\x27\x56\x66\x08\x73\xa9\x32\xa9\x72\x0b\x0b\x6d\xc0\x15\x08\xf9\xc3\xfd\x39\x38\x23\x94\xad\xb5\x71\xa1\x96\x6b\x07\x2b\x27\x4b\xf9\x3f\xda\x00\x19\xac\x49\x6e\xea\x94\xff\x13\xc2\x71\xc6\x64\x45\x87\x30\x65\xd1\x44\xa1\x4b\x0a\xe7\xea\x09\x8b\x26\xa9\x56\x0e\x9f\xdd\x84\xb1\x68\x92\x6b\x9d\x97\xc8\x73\x5d\x0a\x95\x73\x6d\xf2\x10\x22\xa9\xd0\x89\x4c\x38\x41\x18\x3a\x18\x32\xc0\x24\x97\xae\x58\xcd\x79\xaa\xab\x24\xd7\x27\x4b\xe9\x12\xfa\xed\x97\x40\x6e\x7d\xab\x54\x8d\x4c\x91\x45\xf5\x1c\x26\xde\xf3\xfb\x2f\xd7\xa1\xac\x7b\xe1\x0a\x38\x69\x9a\x09\x8b\x03\x2f\x37\x62\x89\x5f\x1f\xee\xcf\xdb\xea\xa1\x12\x4b\xb4\x20\xc0\xa2\x03\xbd\x00\x54\x59\xad\xa5\x72\x16\xc4\x5a\xc8\x52\xcc\x4b\x04\x41\xf6\x40\x8f\xf7\xbc\x4b\xc3\x6f\x45\x85\x4d\xd3\x53\xb0\x58\xa9\xf4\x45\xe4\xe9\x2e\xd4\x65\xff\x6f\x06\xba\x76\x52\x2b\x0b\x9c\xf3\xbd\x7e\x3b\x32\xef\x82\x39\x86\x7a\xce\xdf\xc8\x05\x9e\x45\x76\x84\xb5\x70\x7a\x06\xdf\x7f\xbc\x1d\xcc\xb3\x28\x3a\x64\xfd\x82\x0b\x6d\x70\xda\x2b\xf0\xa8\xcf\x5b\xb9\xe2\x19\x8b\x9a\x97\x39\xce\x40\xd4\x35\xaa\x6c\xba\x77\x3c\xb4\xc3\x39\x8f\x59\x64\xd0\xad\x8c\x82\xdf\x29\x5b\x9b\xc3\x07\x79\xbc\x87\x47\xfd\xb7\xde\xa0\x81\xbd\x96\xa0\x69\x58\xe4\xbd\x11\x2a\x47\xf8\x24\xa9\x91\xc1\x7e\x83\xae\xd0\x99\x25\x44\xe4\x7d\xef\xfe\x49\x76\x5c\x9c\xc2\x7e\x4b\xb7\xb8\xe9\x58\x67\x51\x14\x0d\xcc\x73\xef\x07\x97\x5e\x84\x19\x21\x2e\x30\xd5\x59\x10\x6b\x84\x78\xc0\xa7\x15\xda\x16\x70\xa9\x0e\x02\x6c\xad\x95\xc5\x80\xd8\x63\x82\x73\x4e\x87\xc4\x9d\xf7\x27\x34\x45\x54\x79\xc3\x9a\x30\x72\x3b\x42\x40\x56\x75\x89\x15\xd2\x54\xd0\x8d\xf2\xfe\xab\x0e\x54\x1c\xd6\x5a\x2a\x87\x66\x21\x52\x64\x6e\x5b\xe3\x38\x8e\x75\x66\x95\x3a\xf0\x0c\x00\x68\x5a\xfe\x55\x43\x64\xcc\x8e\x47\x65\xec\x7d\xce\x0f\x50\x0e\xf0\x82\xf3\x2b\xa1\xb2\x12\x0d\xdb\x35\xdc\x76\xdb\x85\x09\x8b\x65\x54\xb1\xd3\xbb\xe6\x3f\xde\xf7\xbb\xa5\x86\x9b\x37\xb5\xf0\x79\x97\x2a\xde\x85\x1f\xaa\x9f\xa6\xee\x19\xba\x85\xc4\xbb\x49\x9f\x81\xc1\x27\xf8\x1c\xee\xda\x0e\xdf\x4d\x41\xd3\xc4\x30\x7d\x6d\x6b\x07\xa0\x69\x66\x80\xc6\x68\x4a\xc5\xa2\x9f\x14\xa8\x0e\x27\x54\x24\x4d\xdd\x2b\xf6\xda\x4b\x47\xf3\x44\x95\x84\xcc\x31\x8b\xe4\x22\x38\xfd\x76\x06\x4a\x96\x14\xaa\xbf\x43\x4a\x96\x21\x5e\xb8\x8a\xdd\x99\xc1\x9a\x1f\xa9\x28\x9e\x91\x17\x6b\x98\xf7\xad\x1a\xa4\x45\xc7\x67\x3b\xee\xef\x93\x99\x24\x70\xec\x66\x80\xa4\x4d\xf8\xe2\x2d\xd0\x3a\x74\x88\x3f\x49\x0d\x57\x08\x47\x5c\xaf\xd1\xd0\x1e\x0d\x37\xa0\xdd\x9e\xaf\x87\xca\x74\x91\x9d\x06\x01\x2b\x8b\xe6\x24\xd3\x95\x90\xea\x18\x98\xc3\xbd\x91\x95\x30\xb2\xdc\x92\xcb\x62\x55\x82\x54\x61\x85\x8f\x96\xf1\xb1\x3e\xa6\x3f\x5f\x8f\x02\xf5\xf2\x80\x4f\xbb\xd1\xf3\x34\x00\xa3\xa7\xb1\xe2\x34\x37\xa7\x67\xbd\xcf\x21\x55\xfa\x19\x1a\xa9\xf7\x74\x44\xa0\x76\xdd\x7c\x48\xa0\xa3\x9b\xe9\xa0\x42\xad\x47\x0f\x79\x4b\xa2\xf7\xc9\xef\x52\x04\xa9\x8e\x08\x5a\x97\xdb\x0f\x29\x74\xb4\x91\x43\x12\x0d\x15\x7c\x50\x23\x5b\x13\x8b\xbd\xd7\xd1\xbb\x33\x92\xc9\xd6\x87\x74\xba\xc2\xb2\x46\x63\x59\x5b\xfa\xab\x97\xe6\xe1\xf5\x52\x65\x03\x92\xdf\x5c\xc4\x2f\x01\x54\x25\x2d\xc9\xe5\x0c\xd6\xa1\xd2\xa0\x7d\x95\x85\x45\x20\x17\xb0\x1e\x2f\x86\xf6\x3b\x07\x61\x89\xdb\x20\x72\x96\xd1\x17\xa7\x76\x05\x31\xdb\x67\xa1\x9d\x5b\x09\x07\xd3\x65\x0c\x9b\x42\xa6\x45\x80\x96\x25\x94\xa4\x52\x17\x45\xa8\x2c\xbc\x7b\xe8\x33\x8d\x9f\x0b\xa5\x95\x4c\x45\x79\x85\x22\x43\xf3\x17\x6e\xe9\x2b\xc8\x75\x89\xac\x6e\x27\x45\x3a\x48\x85\x82\x39\xf6\x21\xd2\x14\xad\xc5\x8c\x72\xa3\x74\x05\x9a\x2e\x33\xd9\x89\x8a\xb3\xa1\xd7\xff\xa4\x2b\xbe\x89\x72\x85\xed\xde\xa3\x5e\xbf\xff\xf1\x23\x7e\x17\xf8\x46\x75\xd3\x65\xbc\x8b\x10\x5e\xb1\x83\x74\xa9\x7b\x66\x0d\xfb\x15\x00\x00\xff\xff\x5b\x5f\x39\x83\x97\x0b\x00\x00")

func svcTransport_grpcGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGoTpl,
		"svc/transport_grpc.go.tpl",
	)
}

func svcTransport_grpcGoTpl() (*asset, error) {
	bytes, err := svcTransport_grpcGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.go.tpl", size: 2967, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0x5c, 0xc0, 0xb8, 0x1, 0x8, 0x16, 0x5d, 0x8e, 0xf2, 0xf1, 0xb6, 0xc8, 0xc6, 0x74, 0x4d, 0x74, 0xf4, 0xc5, 0x6d, 0x94, 0xbf, 0xb, 0x6, 0xa8, 0xd0, 0xd4, 0x30, 0x85, 0xf9, 0x3, 0x87}}
	return a, nil
}

var _svcTransport_httpGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0a\xc2\x50\x0c\x06\xe0\xbd\xa7\xc8\xdc\xe1\xe5\x1a\x1d\x85\xbe\x0b\x84\xfa\xdb\x82\xd1\x3c\xd2\xa0\x43\xc8\xdd\x05\xe9\xfe\x7d\x99\x3c\xd3\x0a\xd0\x21\xdf\x27\xef\x78\xc3\x25\xcc\xf9\x88\x18\x1c\x78\x0d\x95\xc0\xc9\x27\xfc\x03\x6f\xbb\xd1\xc3\x9c\x36\xbb\x83\x66\xae\x9a\x32\x37\x51\xa5\xb6\xf4\x7e\x5b\xa0\x03\xde\xd6\x3f\xed\x57\xa5\x56\x35\xfd\x02\x00\x00\xff\xff\xed\x08\x4c\xd3\x65\x00\x00\x00")

func svcTransport_httpGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGoTpl,
		"svc/transport_http.go.tpl",
	)
}

func svcTransport_httpGoTpl() (*asset, error) {
	bytes, err := svcTransport_httpGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.go.tpl", size: 101, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x64, 0x8, 0xe3, 0xbb, 0xa, 0x8e, 0xd7, 0x35, 0xcc, 0x32, 0xc4, 0x22, 0x4, 0x9c, 0xff, 0x72, 0x2f, 0xaa, 0x4, 0x6f, 0x28, 0x21, 0xbb, 0x31, 0x58, 0x2d, 0x34, 0xf0, 0xdb, 0xca, 0x76, 0xb5}}
	return a, nil
}

var _svcTransport_wsGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\x5d\x73\xdb\xb8\xce\xbe\x96\x7e\x05\xd6\xd3\xe9\x48\x19\x47\xee\xee\xbc\x37\xaf\x5b\x5f\x34\x4e\x4e\x9b\xb3\x9b\x8f\x89\xd3\xcd\x45\xa7\xd3\x65\x24\x58\xe1\x89\x4c\xea\x50\x54\x9c\x1c\x8f\xfe\xfb\x19\x80\xd4\x87\x1d\xa7\xed\xee\x9e\xcc\xb4\x89\x44\x00\x04\x1e\x3c\x00\x41\x4d\x26\x30\xd7\x19\x42\x8e\x0a\x8d\xb0\x98\xc1\xed\x13\xdc\x89\xf5\x7d\x02\xc7\x17\x70\x7e\x71\x0d\x27\xc7\xa7\xd7\x49\x38\x99\xc0\x15\x9a\x5a\x29\xa9\x72\x5e\x87\xb5\x2c\x0a\xd0\x0f\x68\xd6\x46\x5a\x04\x7b\x27\x2b\x58\xca\x02\x59\xf6\x77\x34\x95\xd4\x6a\x0a\x9b\x4d\xe2\xff\x6e\x9a\xc1\x02\x1c\x0b\x8b\xc3\x55\x7a\x6e\x9a\x30\x2c\x45\x7a\x2f\x72\x84\xea\x21\x0d\x43\xb9\x2a\xb5\xb1\x10\x85\xc1\x28\xd5\xca\xe2\xa3\x1d\x85\xc1\x08\x55\xaa\x33\xa9\xf2\xc9\xbf\x2a\xad\xe8\x45\x2e\xed\x5d\x7d\x9b\xa4\x7a\x35\xc9\xf5\xe1\xbd\xb4\x13\xfa\x87\x2a\x2b\xb5\x54\xa4\x62\x8d\x50\x15\x9b\x7a\x41\xb6\x13\x98\xdc\x59\x5b\x3e\xb3\xa9\xf3\x02\x27\x75\x2d\xb3\x67\x2b\x46\x16\x85\x98\xac\xf1\xb6\xd2\xe9\x3d\xda\x9d\xf5\x4a\x9a\xba\xac\x50\x4d\x0a\x9d\x9b\xba\xa2\x55\x85\xfd\x1e\xd5\x93\x4a\xe9\xb7\x95\x2b\x1c\x85\xc1\x64\x02\xd7\x04\x62\x85\xe6\x41\xa6\x18\x06\xe5\x2d\x8c\x36\x9b\xe4\xf2\xe8\x94\x71\xb8\x14\xf6\x0e\x0e\x9b\x66\x14\xc6\x61\x98\x6a\x55\x31\x32\xa5\x56\xf9\x8d\x90\x36\x00\x80\x19\xfc\xf2\x06\x0e\x80\xec\x25\x0b\x4c\xb5\xca\xc2\xa0\x94\x2a\xbf\x44\x23\x75\x16\xc0\x0c\xa2\x56\x1c\x0e\xe0\xff\x63\x98\xc0\xcf\x6f\xc2\x60\xb3\x39\x04\xb9\x84\xdc\x42\xf2\xf1\xfa\xfa\xf2\x23\x16\x25\x9a\x64\xe1\xdc\x48\x6e\x16\x67\xe2\x71\x21\xff\x83\xf0\x06\x9a\x26\x0c\x82\x95\x78\x3c\xc3\xaa\x12\x39\xf2\xdb\x19\x65\xf1\x5b\x7a\xa4\x44\x5b\xa0\xca\xc8\x40\x1c\x86\xf6\xa9\x44\xb8\xc1\xdb\x05\x83\x36\xd7\x6a\x29\x73\xa8\xac\xa9\x53\x0b\x9b\x30\xf8\x50\x0b\x93\x41\xfb\xb3\xac\x55\x1a\xa5\xf6\x11\x3c\x05\x92\xb9\xfb\x3d\x06\x03\x07\x04\x65\x72\x85\xff\xae\xb1\xb2\x31\x44\xcf\x44\xd0\x18\x6d\xe2\x30\xb8\x30\x32\x97\x6a\x7e\x87\xe9\x3d\x1a\x67\xf2\x99\xf6\xad\xd6\x45\xd8\x78\xef\x7c\x84\x03\xaf\xce\xd0\xde\x69\x76\xab\xb2\x86\xaa\xa0\xfb\xf9\x83\x88\x38\x1d\xad\x58\x60\xf4\x47\x18\x1c\x0b\x2b\x02\x00\x7a\x9d\x5c\x89\x75\x6b\xcb\xcb\x65\xc2\x8a\xb1\x5e\x49\x8b\xab\xd2\x3e\x91\xfc\x5c\xaf\x56\x42\x65\x2f\x9b\x4e\x9d\xc0\xb6\x96\x77\xfc\xf4\xf8\x25\x2d\xe3\x04\xbe\xca\x1d\xc5\x85\x15\xb6\xae\x48\x50\x2a\x0b\xc3\x1f\xaf\x58\xb1\xc0\x96\x52\x8b\xcb\xa5\xd6\xc5\x00\x94\x42\xe7\x44\xbc\x03\x47\xf0\xe4\x44\x59\xf3\x14\x06\x75\x99\x1b\x91\x21\x00\x74\x95\x91\x7c\x72\xef\x4c\x18\xe4\x5d\x7a\xff\x27\xa9\x6d\xeb\xbc\x82\x95\x28\x3f\x3b\x28\xbe\xb4\x2f\x93\x13\xff\x47\x18\x64\x98\xea\x0c\x4d\x05\x43\x39\xf6\x60\x27\x4f\x31\x44\x52\x59\x34\x4b\x91\xe2\xa6\xe9\x37\x4a\x0b\x89\xb4\x8d\x33\x70\x30\xe7\xc7\x2f\xcc\x9a\x80\x4a\x39\xb9\xba\x39\xab\x2d\x3e\x76\x58\x39\x89\x01\x5a\xb2\x67\xb5\xdb\x9f\x01\x6c\x5f\xed\x80\x98\x6a\xa5\x30\xb5\xd4\x2c\x0f\x7a\x18\xe7\x5a\x29\x2a\x7a\x5d\xb4\x5a\x97\xec\x00\xa1\xe8\x7f\x76\x90\x0a\xc3\x40\xd7\x16\xd2\x3b\xa1\x5a\x56\x93\x87\x14\x39\x9c\xe3\x9a\xd4\x23\xf2\x62\x6b\xfb\x31\xf4\xb0\xb6\x10\x56\x63\x58\x57\xf3\x65\xbe\x5b\xb9\xb1\xf3\x81\x02\x2c\x61\x3a\x83\xd7\xf4\xb4\x09\x03\x8a\x6d\x1a\x40\xa1\xf3\x71\x18\xb4\xe8\x4d\x61\x25\xee\x31\xda\x45\x30\x26\x11\x4f\x9b\xe9\x1e\xd6\x90\xb9\x80\xcb\xd7\x55\xf2\x94\x23\x65\x77\x92\xad\xda\x26\x3b\xc1\x15\x8a\xec\xa8\x5e\x2e\xd1\x50\xff\x99\x02\xfc\xfc\xe6\x97\xff\xe3\x95\x1b\x3a\xab\x86\x4b\xed\x4a\x43\xff\x31\x33\x87\xa6\xb9\x13\xd1\x4a\x87\xc6\xc0\xff\x97\xa8\xc6\xb1\xb4\x6c\x9b\xc2\x33\x85\x1f\xe7\x1c\x59\x6a\x42\xea\x9e\x46\xa8\x1c\xe1\x95\x24\x7c\xbb\x0e\xeb\x3a\x52\xc5\x4d\x79\xb3\xa1\x16\x4e\x4d\x24\x52\xda\xc2\x2b\xd9\x96\xce\xc2\x1a\x14\xab\x78\xf0\xba\x2a\xb5\xaa\xb0\x7d\xcf\xda\x41\x99\x74\x11\x7e\x1e\x6d\x36\xaf\x64\x72\x2e\x56\xd8\x34\xa3\x2f\x30\xeb\xa9\x90\x0c\x56\xfa\xc2\x22\xed\x36\xdc\xe7\xca\xdd\xda\x60\xc1\xf9\xeb\xcf\x83\xf6\x6c\xa0\xd3\x3f\x30\x68\x6b\xa3\xa0\xec\x18\x1a\x95\x8e\x5d\x31\xbc\xcf\x32\x47\x98\xfd\x1d\xe3\xe5\x72\x89\xc1\x33\xcd\x97\xe0\x74\x06\x74\x96\x27\xe7\xb8\x5e\x70\x46\x22\x2a\x6e\x66\xae\x93\x23\xb2\xc9\x6c\x1a\x04\x20\x39\xf9\xbd\xe9\xe9\x60\x1b\x5a\xa1\x3a\x9c\x52\x03\x2c\xc7\x9e\xef\x50\x26\x85\xce\x93\x1b\x69\xef\xfe\x21\xb1\xc8\xaa\xc8\x97\x95\x7b\x62\x1e\x8f\xba\x71\x63\x34\x85\xd1\xcd\xc9\xd1\xe2\x62\xfe\xeb\xc9\xf5\x88\x19\x3a\x72\x85\x32\x9a\x06\x6e\xf3\x86\xe9\x94\xda\xc7\x69\x17\x33\x19\xff\x5d\x14\x35\x12\x12\x63\x18\x98\x1b\x0f\xcd\xb1\xa2\xae\xad\xa7\xec\xb0\x01\x38\x62\x05\x29\xfb\x7a\xaa\x96\x3a\x1a\x7d\xbe\x59\x7c\x01\xb7\x77\x1b\x24\x66\xa3\x38\x0c\xca\xc4\x97\xee\xe7\x94\xf2\x69\x4d\x8d\x7d\xa2\xd2\x3d\x89\x32\xb8\xd2\x0f\xd8\xe6\xca\x59\xf4\x19\x88\xb9\x49\x24\xbf\xe9\xf4\x9e\x40\xcf\x70\x89\x06\xca\xe4\x93\x2a\xfc\x1b\xb9\x84\xaf\x63\xd0\xf7\x94\x8d\xc1\xc6\xae\x51\xbc\xa5\x85\x0d\xf7\x12\x5d\xa1\x37\x9d\xe8\xda\xc6\x61\x10\x7c\x85\x99\x77\x3f\xe9\x73\x94\xcc\x59\x32\xe6\x82\x2c\xd0\x62\xd4\x19\x1d\x7b\xe9\x98\x90\xe8\x82\x48\x7b\x4f\x0d\x8a\xcc\xc3\x55\x45\xec\xb8\x73\x97\xcb\x37\x76\x7e\x24\x44\x80\x64\x3b\x60\x32\x18\xc5\x5c\xb5\x7f\x66\xaa\x4a\x87\x6e\x2f\xd0\x52\x0f\xfb\x4d\xae\xa4\x8d\xb6\xe7\xad\x38\x1c\xd6\x8e\x5c\x52\xab\x20\xb4\xf6\xe9\x1f\xa3\xc8\x0a\xa9\x30\xe2\x89\xf0\x5c\xaf\xa3\x38\x79\x9f\x65\xdd\x10\x18\xc7\x6f\x59\xfd\xa7\x19\x28\xc9\x0d\xdc\xe7\xd5\xb5\x9d\x5d\x93\x97\x5a\xe5\x1f\x85\xca\x0a\x34\x11\xa3\xe0\x1a\x5a\xec\xba\xd5\x40\xfd\x2f\x3a\x13\x06\x0d\xe1\xb6\xf4\xb6\xbe\x8e\xa1\x14\x4f\x85\x16\xd9\x78\x6f\x90\x57\x7d\x82\x18\xef\x16\x8c\x41\x34\xf4\xaa\x6f\x06\xa7\xd5\x27\x85\x8f\x25\x33\x9b\x89\x71\x42\x7e\x47\x68\xcc\x78\x20\xc5\x2b\x1f\xb4\x54\xf9\xfb\xb5\x78\x7a\xb6\xf2\xfe\x56\x69\xb3\x12\x05\x3d\xd4\x06\x1d\x11\x02\x5f\x4a\x54\x99\x9d\xd1\x78\x58\x59\x75\xb7\x33\x30\x7b\xa9\xb2\x82\xa0\x01\x2c\x2a\xfc\x41\x13\x43\x3d\xfa\xef\xd6\xa0\xb8\xa7\x0e\x41\xb1\x3f\x08\x03\xab\x2a\xef\x4e\xf8\x0e\x8d\x99\x1b\x43\x3f\xa9\x95\x30\xd5\x9d\x28\xa2\x0e\xd3\xd7\xab\x2a\x7f\x4e\x80\xef\xba\x21\xd5\x83\x28\x64\x06\x2b\x3f\xd5\x1a\x4c\x51\x3e\xb8\x5e\xc1\xbd\xd2\x4a\x55\x63\xeb\x17\x4d\x16\x9c\xb8\xad\xae\x18\xb5\xc3\xf2\x98\x9c\xf6\x07\x59\xec\x9d\x6e\xeb\xdf\x57\x57\x7f\x30\xf5\xa2\x7d\x2b\x08\x78\x9a\xee\xf9\xc1\x2a\xdd\x69\x34\xd0\x88\xe8\x6f\x1a\xcc\xd9\x4d\x82\x6a\xd6\x82\xe5\xe0\x77\x72\x7c\xfa\xf7\x6a\xdc\x92\xfb\x49\x7b\xca\x4b\xdd\xa3\x5b\x75\xe3\x34\x2b\xf2\xcc\xea\x9e\x2f\x7e\x1d\x77\x99\xda\x43\xcc\xe0\xdb\x20\xbb\x8a\xe2\x38\x68\xb2\xf7\x58\x3b\x88\xc9\xf9\x84\x2f\xc1\x3d\x81\xfb\x05\x3f\xdc\xcf\x86\xbe\x1c\x89\xcc\xfb\xec\x89\x46\x03\xe1\xbb\x43\x0a\xc6\xbd\xe8\x93\xe6\x1c\x36\x7e\x48\xe8\x80\xc5\x28\x4d\xf8\xb0\xc9\x5a\x04\xff\x6a\x4c\xf8\x88\x69\x6d\x29\xa8\xee\x82\xfe\xed\xa8\xb6\x6a\xa4\x4d\xe2\x78\xc8\xed\x33\xcf\xec\xd6\x6b\x67\x6f\x9f\x83\xfb\x3c\x74\x7f\x0e\x5d\xf4\x95\x52\x90\x93\xad\x4d\xef\xe4\xcb\xd8\x37\x1d\x78\x3b\xf0\x36\x2f\x1d\x30\xfc\xdd\x64\xfb\x84\xb1\x92\xef\xa7\xd3\x99\xbb\xc3\x9f\xe3\xfa\x9a\xdf\x44\xfd\x2d\x3e\xde\x73\x0e\x39\xb5\x64\x61\x75\xc9\x67\xdd\xb7\xcf\xa5\xb6\xbf\x56\x58\xa0\xbb\x97\x04\xa9\xa8\xb0\x25\x59\x5b\x7e\xef\x0e\x39\x90\xa9\x4f\xf6\x4f\x6d\xc1\xbd\x74\xe6\xdc\x0c\xc2\x89\x76\x9a\xe6\x59\x6b\x5a\xc9\x62\x4f\xcb\xf9\x7e\xd3\x71\x89\xa1\x0e\x48\x49\xe9\x77\xf5\x69\xd9\xe2\xc8\x9e\xb1\xa6\x9f\x0d\xb9\x89\x66\xa3\x41\xce\xba\x23\xcf\x3f\x6f\x35\x94\x2d\x7e\x79\x80\x5e\xa4\xff\xde\x20\xbe\x4d\xaf\xed\xc2\xde\xae\xc3\xc1\x36\x3f\x06\xf5\x35\x3e\xda\x0e\x69\x2e\xd4\x3d\x50\xff\x18\xd2\xc4\xcd\x67\xfe\x35\x2d\x53\xde\x1d\x7a\xc6\xcd\xa7\xe1\x9f\x26\xc4\xa5\x54\x79\xe7\xe5\xe7\x2f\xb7\x4f\x16\x37\xcd\xdf\xf7\x94\x2a\xc4\xc3\xb8\x9d\xd0\xed\xfa\xeb\xa6\x54\x1a\xc4\x90\x06\xb3\x68\x0d\xfe\x53\x83\xab\x74\x76\xdb\xec\xf9\x04\xb1\x09\xf9\x76\x6d\x1f\x39\x52\x3f\x8b\x1f\x89\xf4\x3e\x37\xba\x56\x99\x1f\x5f\xcb\xc4\x7d\xdf\x18\x84\x42\x67\x33\x45\xc7\x0e\xbb\x61\xbe\xed\x5f\x5e\xda\x0d\xf2\x26\xde\x3f\xc4\xb0\xde\x09\x37\x1d\x13\x29\x59\xb0\xf2\x18\xd6\x71\x38\x0c\xb6\xf1\x43\x9b\x56\xaa\xa3\x6f\x99\xf8\x3b\x75\x7b\x91\x8e\xd6\x63\x30\xae\x0c\xc3\x3d\x5b\x6d\x4d\x7f\x6e\x72\x67\x2b\x5b\x77\x2f\x77\xd7\x8a\xc3\x20\xd7\xed\xc4\xbd\x3d\x2b\x0f\x57\x76\x9a\x5c\x9f\x88\x15\x1c\x74\x77\xdf\x9d\x86\xea\x6f\xbf\x3c\x72\x73\x31\x7e\x7d\x56\x8a\x2c\x71\x63\x44\x59\xa2\xd9\xb0\xe2\x94\xb4\x7c\xb5\xc5\x8d\x8b\xce\x57\x1a\x65\xd3\xf5\x34\x12\x89\x86\x86\xd0\xc4\xdd\x28\x21\x97\xbc\xc7\x91\xce\x9e\xc6\xad\xea\x89\xc3\xb1\x33\xd4\xea\xfd\x73\x71\x71\x1e\xc5\x6f\x87\x62\xb3\x41\xc6\xc8\x6d\x7f\x3a\x91\xb9\x36\x3b\x01\x85\x49\xf6\x06\x67\xf3\x29\x5d\xfb\x95\x28\x98\x8f\xe6\xc4\x51\x44\x2e\xa1\x4a\xb7\x9c\xee\xee\x78\x5e\x6d\x4e\x64\xe8\x7d\x67\xc3\x33\xa8\xd2\xc1\x72\xc4\x57\x9b\x60\xc5\x07\x26\xcc\xb8\x23\xd0\x63\x37\x21\x90\x12\x25\xe4\xfb\x9f\x17\xfe\xde\xd7\x85\x9d\xca\x7b\xfe\x3d\x20\x62\xbc\x7e\xe8\x93\x88\xc3\x97\x93\xf2\xba\xbc\x4d\x36\x9b\x0f\x9a\x6c\x0c\x5c\x6a\x9a\x4d\xd3\x17\x06\xb1\x7d\x67\x00\x76\x9c\x7a\xcd\xd5\xd6\x0c\x6f\x53\x9b\x8d\xfb\x0c\xf1\xdf\x00\x00\x00\xff\xff\x22\x86\x06\xe6\x14\x19\x00\x00")

func svcTransport_wsGoTplBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_wsGoTpl,
		"svc/transport_ws.go.tpl",
	)
}

func svcTransport_wsGoTpl() (*asset, error) {
	bytes, err := svcTransport_wsGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_ws.go.tpl", size: 6420, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x3c, 0x3e, 0x86, 0x2d, 0xbf, 0x1a, 0x54, 0x8, 0xc4, 0x79, 0x27, 0x96, 0x70, 0x33, 0x89, 0x5c, 0x5, 0x7b, 0x4e, 0x94, 0x2c, 0x0, 0x8d, 0x9e, 0x1c, 0x46, 0xd, 0x63, 0x16, 0xcd, 0x48}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.go.tpl":             cmdNameMainGoTpl,
	"handlers/handlers.go.tpl":         handlersHandlersGoTpl,
	"handlers/handlers.methods.go.tpl": handlersHandlersMethodsGoTpl,
	"handlers/hooks.go.tpl":            handlersHooksGoTpl,
	"handlers/middlewares.go.tpl":      handlersMiddlewaresGoTpl,
	"svc/client/grpc/client.go.tpl":    svcClientGrpcClientGoTpl,
	"svc/client/http/client.go.tpl":    svcClientHttpClientGoTpl,
	"svc/config.go.tpl":                svcConfigGoTpl,
	"svc/endpoints.go.tpl":             svcEndpointsGoTpl,
	"svc/server/run.go.tpl":            svcServerRunGoTpl,
	"svc/transport_grpc.go.tpl":        svcTransport_grpcGoTpl,
	"svc/transport_http.go.tpl":        svcTransport_httpGoTpl,
	"svc/transport_ws.go.tpl":          svcTransport_wsGoTpl,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": {nil, map[string]*bintree{
		"NAME": {nil, map[string]*bintree{
			"main.go.tpl": {cmdNameMainGoTpl, map[string]*bintree{}},
		}},
	}},
	"handlers": {nil, map[string]*bintree{
		"handlers.go.tpl":         {handlersHandlersGoTpl, map[string]*bintree{}},
		"handlers.methods.go.tpl": {handlersHandlersMethodsGoTpl, map[string]*bintree{}},
		"hooks.go.tpl":            {handlersHooksGoTpl, map[string]*bintree{}},
		"middlewares.go.tpl":      {handlersMiddlewaresGoTpl, map[string]*bintree{}},
	}},
	"svc": {nil, map[string]*bintree{
		"client": {nil, map[string]*bintree{
			"grpc": {nil, map[string]*bintree{
				"client.go.tpl": {svcClientGrpcClientGoTpl, map[string]*bintree{}},
			}},
			"http": {nil, map[string]*bintree{
				"client.go.tpl": {svcClientHttpClientGoTpl, map[string]*bintree{}},
			}},
		}},
		"config.go.tpl":    {svcConfigGoTpl, map[string]*bintree{}},
		"endpoints.go.tpl": {svcEndpointsGoTpl, map[string]*bintree{}},
		"server": {nil, map[string]*bintree{
			"run.go.tpl": {svcServerRunGoTpl, map[string]*bintree{}},
		}},
		"transport_grpc.go.tpl": {svcTransport_grpcGoTpl, map[string]*bintree{}},
		"transport_http.go.tpl": {svcTransport_httpGoTpl, map[string]*bintree{}},
		"transport_ws.go.tpl":   {svcTransport_wsGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
